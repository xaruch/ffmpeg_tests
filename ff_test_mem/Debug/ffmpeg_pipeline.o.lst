   1              		.cpu arm926ej-s
   2              		.eabi_attribute 27, 3
   3              		.fpu neon
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 2
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ffmpeg_pipeline.cpp"
  23              	.Ltext0:
  24              		.file 1 "../ffmpeg_pipeline.cpp"
 14666              		.align	2
 14667              		.global	_ZN10FfPipelineC2Eh
 14668              		.code	16
 14669              		.thumb_func
 14671              	_ZN10FfPipelineC2Eh:
 14672              		.fnstart
 14673              	.LFB981:
   1:../ffmpeg_pipeline.cpp **** #include "include/ffmpeg_pipeline.h"
   2:../ffmpeg_pipeline.cpp **** 
   3:../ffmpeg_pipeline.cpp **** FfPipeline::FfPipeline(unsigned char slot_num)
 14674              		.loc 1 3 0
 14675              		.save	{r4, r7, lr}
 14676 0000 90B5     		push	{r4, r7, lr}
 14677              	.LCFI0:
 14678              		.pad #12
 14679 0002 83B0     		sub	sp, sp, #12
 14680              	.LCFI1:
 14681              		.setfp r7, sp, #0
 14682 0004 00AF     		add	r7, sp, #0
 14683              	.LCFI2:
 14684 0006 7860     		str	r0, [r7, #4]
 14685 0008 0B1C     		mov	r3, r1
 14686 000a FA1C     		add	r2, r7, #3
 14687 000c 1370     		strb	r3, [r2]
   4:../ffmpeg_pipeline.cpp **** {
   5:../ffmpeg_pipeline.cpp ****   Slot = slot_num;
 14688              		.loc 1 5 0
 14689 000e 7A68     		ldr	r2, [r7, #4]
 14690 0010 FB1C     		add	r3, r7, #3
 14691 0012 1B78     		ldrb	r3, [r3]
 14692 0014 1371     		strb	r3, [r2, #4]
   6:../ffmpeg_pipeline.cpp ****   RecState = REC_NOTINITIALIZED;
 14693              		.loc 1 6 0
 14694 0016 7A68     		ldr	r2, [r7, #4]
 14695 0018 0023     		mov	r3, #0
 14696 001a 9360     		str	r3, [r2, #8]
   7:../ffmpeg_pipeline.cpp ****   PrevPadTimestamp = 0;
 14697              		.loc 1 7 0
 14698 001c 7A68     		ldr	r2, [r7, #4]
 14699 001e 0023     		mov	r3, #0
 14700 0020 D360     		str	r3, [r2, #12]
   8:../ffmpeg_pipeline.cpp ****   WaitKeyframeFlag = false;
 14701              		.loc 1 8 0
 14702 0022 7A68     		ldr	r2, [r7, #4]
 14703 0024 0023     		mov	r3, #0
 14704 0026 5374     		strb	r3, [r2, #17]
   9:../ffmpeg_pipeline.cpp ****   IsNeedStopFlag = false;
 14705              		.loc 1 9 0
 14706 0028 7A68     		ldr	r2, [r7, #4]
 14707 002a 0023     		mov	r3, #0
 14708 002c 1374     		strb	r3, [r2, #16]
  10:../ffmpeg_pipeline.cpp ****   LastMuxDts = AV_NOPTS_VALUE;
 14709              		.loc 1 10 0
 14710 002e 7A68     		ldr	r2, [r7, #4]
 14711 0030 064C     		ldr	r4, .L4+4
 14712 0032 054B     		ldr	r3, .L4
 14713 0034 9361     		str	r3, [r2, #24]
 14714 0036 D461     		str	r4, [r2, #28]
  11:../ffmpeg_pipeline.cpp **** }
 14715              		.loc 1 11 0
 14716 0038 7B68     		ldr	r3, [r7, #4]
 14717 003a 181C     		mov	r0, r3
 14718 003c BD46     		mov	sp, r7
 14719 003e 03B0     		add	sp, sp, #12
 14720              		@ sp needed for prologue
 14721 0040 90BD     		pop	{r4, r7, pc}
 14722              	.L5:
 14723 0042 C046C046 		.align	3
 14723      C046
 14724              	.L4:
 14725 0048 00000000 		.word	0
 14726 004c 00000080 		.word	-2147483648
 14727              	.LFE981:
 14728              		.fnend
 14730              		.align	2
 14731              		.global	_ZN10FfPipelineC1Eh
 14732              		.code	16
 14733              		.thumb_func
 14735              	_ZN10FfPipelineC1Eh:
 14736              		.fnstart
 14737              	.LFB982:
 14738              		.loc 1 3 0
 14739              		.save	{r4, r7, lr}
 14740 0050 90B5     		push	{r4, r7, lr}
 14741              	.LCFI3:
 14742              		.pad #12
 14743 0052 83B0     		sub	sp, sp, #12
 14744              	.LCFI4:
 14745              		.setfp r7, sp, #0
 14746 0054 00AF     		add	r7, sp, #0
 14747              	.LCFI5:
 14748 0056 7860     		str	r0, [r7, #4]
 14749 0058 0B1C     		mov	r3, r1
 14750 005a FA1C     		add	r2, r7, #3
 14751 005c 1370     		strb	r3, [r2]
 14752              		.loc 1 5 0
 14753 005e 7A68     		ldr	r2, [r7, #4]
 14754 0060 FB1C     		add	r3, r7, #3
 14755 0062 1B78     		ldrb	r3, [r3]
 14756 0064 1371     		strb	r3, [r2, #4]
 14757              		.loc 1 6 0
 14758 0066 7A68     		ldr	r2, [r7, #4]
 14759 0068 0023     		mov	r3, #0
 14760 006a 9360     		str	r3, [r2, #8]
 14761              		.loc 1 7 0
 14762 006c 7A68     		ldr	r2, [r7, #4]
 14763 006e 0023     		mov	r3, #0
 14764 0070 D360     		str	r3, [r2, #12]
 14765              		.loc 1 8 0
 14766 0072 7A68     		ldr	r2, [r7, #4]
 14767 0074 0023     		mov	r3, #0
 14768 0076 5374     		strb	r3, [r2, #17]
 14769              		.loc 1 9 0
 14770 0078 7A68     		ldr	r2, [r7, #4]
 14771 007a 0023     		mov	r3, #0
 14772 007c 1374     		strb	r3, [r2, #16]
 14773              		.loc 1 10 0
 14774 007e 7A68     		ldr	r2, [r7, #4]
 14775 0080 064C     		ldr	r4, .L9+4
 14776 0082 054B     		ldr	r3, .L9
 14777 0084 9361     		str	r3, [r2, #24]
 14778 0086 D461     		str	r4, [r2, #28]
 14779              		.loc 1 11 0
 14780 0088 7B68     		ldr	r3, [r7, #4]
 14781 008a 181C     		mov	r0, r3
 14782 008c BD46     		mov	sp, r7
 14783 008e 03B0     		add	sp, sp, #12
 14784              		@ sp needed for prologue
 14785 0090 90BD     		pop	{r4, r7, pc}
 14786              	.L10:
 14787 0092 C046C046 		.align	3
 14787      C046
 14788              	.L9:
 14789 0098 00000000 		.word	0
 14790 009c 00000080 		.word	-2147483648
 14791              	.LFE982:
 14792              		.fnend
 14794              		.align	2
 14795              		.global	_ZN10FfPipelineD2Ev
 14796              		.code	16
 14797              		.thumb_func
 14799              	_ZN10FfPipelineD2Ev:
 14800              		.fnstart
 14801              	.LFB984:
  12:../ffmpeg_pipeline.cpp **** 
  13:../ffmpeg_pipeline.cpp **** FfPipeline::~FfPipeline()
 14802              		.loc 1 13 0
 14803              		.save	{r7, lr}
 14804 00a0 80B5     		push	{r7, lr}
 14805              	.LCFI6:
 14806              		.pad #8
 14807 00a2 82B0     		sub	sp, sp, #8
 14808              	.LCFI7:
 14809              		.setfp r7, sp, #0
 14810 00a4 00AF     		add	r7, sp, #0
 14811              	.LCFI8:
 14812 00a6 7860     		str	r0, [r7, #4]
  14:../ffmpeg_pipeline.cpp **** {
  15:../ffmpeg_pipeline.cpp **** }
 14813              		.loc 1 15 0
 14814 00a8 7B68     		ldr	r3, [r7, #4]
 14815 00aa 181C     		mov	r0, r3
 14816 00ac BD46     		mov	sp, r7
 14817 00ae 02B0     		add	sp, sp, #8
 14818              		@ sp needed for prologue
 14819 00b0 80BD     		pop	{r7, pc}
 14820              	.LFE984:
 14821              		.fnend
 14823 00b2 C046     		.align	2
 14824              		.global	_ZN10FfPipelineD1Ev
 14825              		.code	16
 14826              		.thumb_func
 14828              	_ZN10FfPipelineD1Ev:
 14829              		.fnstart
 14830              	.LFB985:
 14831              		.loc 1 13 0
 14832              		.save	{r7, lr}
 14833 00b4 80B5     		push	{r7, lr}
 14834              	.LCFI9:
 14835              		.pad #8
 14836 00b6 82B0     		sub	sp, sp, #8
 14837              	.LCFI10:
 14838              		.setfp r7, sp, #0
 14839 00b8 00AF     		add	r7, sp, #0
 14840              	.LCFI11:
 14841 00ba 7860     		str	r0, [r7, #4]
 14842              		.loc 1 15 0
 14843 00bc 7B68     		ldr	r3, [r7, #4]
 14844 00be 181C     		mov	r0, r3
 14845 00c0 BD46     		mov	sp, r7
 14846 00c2 02B0     		add	sp, sp, #8
 14847              		@ sp needed for prologue
 14848 00c4 80BD     		pop	{r7, pc}
 14849              	.LFE985:
 14850              		.fnend
 14852 00c6 C046     		.align	2
 14853              		.global	_ZN10FfPipeline21SetPartnerPipePointerEPv
 14854              		.code	16
 14855              		.thumb_func
 14857              	_ZN10FfPipeline21SetPartnerPipePointerEPv:
 14858              		.fnstart
 14859              	.LFB989:
  16:../ffmpeg_pipeline.cpp **** 
  17:../ffmpeg_pipeline.cpp **** void FfPipeline::r_avformat_close_input_v24(AVFormatContext **ps)
  18:../ffmpeg_pipeline.cpp **** {
  19:../ffmpeg_pipeline.cpp ****   return avformat_close_input(ps);
  20:../ffmpeg_pipeline.cpp **** }
  21:../ffmpeg_pipeline.cpp **** 
  22:../ffmpeg_pipeline.cpp **** void FfPipeline::ClearNeedStop()
  23:../ffmpeg_pipeline.cpp **** {
  24:../ffmpeg_pipeline.cpp ****   pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
  25:../ffmpeg_pipeline.cpp **** 
  26:../ffmpeg_pipeline.cpp ****   pthread_mutex_lock(&mutex);
  27:../ffmpeg_pipeline.cpp ****   IsNeedStopFlag = false;
  28:../ffmpeg_pipeline.cpp ****   pthread_mutex_unlock(&mutex);
  29:../ffmpeg_pipeline.cpp **** }
  30:../ffmpeg_pipeline.cpp **** 
  31:../ffmpeg_pipeline.cpp **** void FfPipeline::SetNeedStop()
  32:../ffmpeg_pipeline.cpp **** {
  33:../ffmpeg_pipeline.cpp ****   pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
  34:../ffmpeg_pipeline.cpp **** 
  35:../ffmpeg_pipeline.cpp ****   pthread_mutex_lock(&mutex);
  36:../ffmpeg_pipeline.cpp ****   IsNeedStopFlag = true;
  37:../ffmpeg_pipeline.cpp ****   pthread_mutex_unlock(&mutex);
  38:../ffmpeg_pipeline.cpp **** }
  39:../ffmpeg_pipeline.cpp **** 
  40:../ffmpeg_pipeline.cpp **** void FfPipeline::SetPartnerPipePointer(gpointer p)
 14860              		.loc 1 40 0
 14861              		.save	{r7, lr}
 14862 00c8 80B5     		push	{r7, lr}
 14863              	.LCFI12:
 14864              		.pad #8
 14865 00ca 82B0     		sub	sp, sp, #8
 14866              	.LCFI13:
 14867              		.setfp r7, sp, #0
 14868 00cc 00AF     		add	r7, sp, #0
 14869              	.LCFI14:
 14870 00ce 7860     		str	r0, [r7, #4]
 14871 00d0 3960     		str	r1, [r7]
  41:../ffmpeg_pipeline.cpp **** {
  42:../ffmpeg_pipeline.cpp ****   PartnerPipePointer = p;
 14872              		.loc 1 42 0
 14873 00d2 7A68     		ldr	r2, [r7, #4]
 14874 00d4 3B68     		ldr	r3, [r7]
 14875 00d6 1360     		str	r3, [r2]
  43:../ffmpeg_pipeline.cpp **** }
 14876              		.loc 1 43 0
 14877 00d8 BD46     		mov	sp, r7
 14878 00da 02B0     		add	sp, sp, #8
 14879              		@ sp needed for prologue
 14880 00dc 80BD     		pop	{r7, pc}
 14881              	.LFE989:
 14882              		.fnend
 14884 00de C046     		.align	2
 14885              		.global	_ZN10FfPipeline11SetRecStateE14RecordingState
 14886              		.code	16
 14887              		.thumb_func
 14889              	_ZN10FfPipeline11SetRecStateE14RecordingState:
 14890              		.fnstart
 14891              	.LFB990:
  44:../ffmpeg_pipeline.cpp **** 
  45:../ffmpeg_pipeline.cpp **** void FfPipeline::SetRecState(RecordingState rst)
 14892              		.loc 1 45 0
 14893              		.save	{r7, lr}
 14894 00e0 80B5     		push	{r7, lr}
 14895              	.LCFI15:
 14896              		.pad #8
 14897 00e2 82B0     		sub	sp, sp, #8
 14898              	.LCFI16:
 14899              		.setfp r7, sp, #0
 14900 00e4 00AF     		add	r7, sp, #0
 14901              	.LCFI17:
 14902 00e6 7860     		str	r0, [r7, #4]
 14903 00e8 3960     		str	r1, [r7]
  46:../ffmpeg_pipeline.cpp **** {
  47:../ffmpeg_pipeline.cpp ****   RecState = rst;
 14904              		.loc 1 47 0
 14905 00ea 7A68     		ldr	r2, [r7, #4]
 14906 00ec 3B68     		ldr	r3, [r7]
 14907 00ee 9360     		str	r3, [r2, #8]
  48:../ffmpeg_pipeline.cpp **** }
 14908              		.loc 1 48 0
 14909 00f0 BD46     		mov	sp, r7
 14910 00f2 02B0     		add	sp, sp, #8
 14911              		@ sp needed for prologue
 14912 00f4 80BD     		pop	{r7, pc}
 14913              	.LFE990:
 14914              		.fnend
 14916 00f6 C046     		.align	2
 14917              		.global	_ZN10FfPipeline22SetWaitingKeyframeFlagEv
 14918              		.code	16
 14919              		.thumb_func
 14921              	_ZN10FfPipeline22SetWaitingKeyframeFlagEv:
 14922              		.fnstart
 14923              	.LFB992:
  49:../ffmpeg_pipeline.cpp **** 
  50:../ffmpeg_pipeline.cpp **** int FfPipeline::SetPartnerToStop()
  51:../ffmpeg_pipeline.cpp **** {
  52:../ffmpeg_pipeline.cpp ****   const char *class_name = "FfPipeline::SetPartnerToStop";
  53:../ffmpeg_pipeline.cpp ****   FfPipeline *Pipe = (FfPipeline *) PartnerPipePointer;
  54:../ffmpeg_pipeline.cpp **** 
  55:../ffmpeg_pipeline.cpp ****   Pipe->SetNeedStop();
  56:../ffmpeg_pipeline.cpp **** 
  57:../ffmpeg_pipeline.cpp ****   sprintf(str, "DEBUG: Slot '%d' was marked for stopping by SetNeedStopFlag().\n", Pipe->Slot);
  58:../ffmpeg_pipeline.cpp ****   AppendLog(str, class_name);
  59:../ffmpeg_pipeline.cpp ****   return 0;
  60:../ffmpeg_pipeline.cpp **** }
  61:../ffmpeg_pipeline.cpp **** 
  62:../ffmpeg_pipeline.cpp **** void FfPipeline::SetWaitingKeyframeFlag()
 14924              		.loc 1 62 0
 14925              		.save	{r7, lr}
 14926 00f8 80B5     		push	{r7, lr}
 14927              	.LCFI18:
 14928              		.pad #8
 14929 00fa 82B0     		sub	sp, sp, #8
 14930              	.LCFI19:
 14931              		.setfp r7, sp, #0
 14932 00fc 00AF     		add	r7, sp, #0
 14933              	.LCFI20:
 14934 00fe 7860     		str	r0, [r7, #4]
  63:../ffmpeg_pipeline.cpp **** {
  64:../ffmpeg_pipeline.cpp ****   WaitKeyframeFlag = true;
 14935              		.loc 1 64 0
 14936 0100 7B68     		ldr	r3, [r7, #4]
 14937 0102 0122     		mov	r2, #1
 14938 0104 5A74     		strb	r2, [r3, #17]
  65:../ffmpeg_pipeline.cpp **** }
 14939              		.loc 1 65 0
 14940 0106 BD46     		mov	sp, r7
 14941 0108 02B0     		add	sp, sp, #8
 14942              		@ sp needed for prologue
 14943 010a 80BD     		pop	{r7, pc}
 14944              	.LFE992:
 14945              		.fnend
 14947              		.align	2
 14948              		.global	_ZN10FfPipeline24ClearWaitingKeyframeFlagEv
 14949              		.code	16
 14950              		.thumb_func
 14952              	_ZN10FfPipeline24ClearWaitingKeyframeFlagEv:
 14953              		.fnstart
 14954              	.LFB993:
  66:../ffmpeg_pipeline.cpp **** 
  67:../ffmpeg_pipeline.cpp **** void FfPipeline::ClearWaitingKeyframeFlag()
 14955              		.loc 1 67 0
 14956              		.save	{r7, lr}
 14957 010c 80B5     		push	{r7, lr}
 14958              	.LCFI21:
 14959              		.pad #8
 14960 010e 82B0     		sub	sp, sp, #8
 14961              	.LCFI22:
 14962              		.setfp r7, sp, #0
 14963 0110 00AF     		add	r7, sp, #0
 14964              	.LCFI23:
 14965 0112 7860     		str	r0, [r7, #4]
  68:../ffmpeg_pipeline.cpp **** {
  69:../ffmpeg_pipeline.cpp ****   WaitKeyframeFlag = false;
 14966              		.loc 1 69 0
 14967 0114 7B68     		ldr	r3, [r7, #4]
 14968 0116 0022     		mov	r2, #0
 14969 0118 5A74     		strb	r2, [r3, #17]
  70:../ffmpeg_pipeline.cpp **** }
 14970              		.loc 1 70 0
 14971 011a BD46     		mov	sp, r7
 14972 011c 02B0     		add	sp, sp, #8
 14973              		@ sp needed for prologue
 14974 011e 80BD     		pop	{r7, pc}
 14975              	.LFE993:
 14976              		.fnend
 14978              		.align	2
 14979              		.global	_ZN10FfPipeline17IsWaitingKeyframeEv
 14980              		.code	16
 14981              		.thumb_func
 14983              	_ZN10FfPipeline17IsWaitingKeyframeEv:
 14984              		.fnstart
 14985              	.LFB994:
  71:../ffmpeg_pipeline.cpp **** 
  72:../ffmpeg_pipeline.cpp **** bool FfPipeline::IsWaitingKeyframe()
 14986              		.loc 1 72 0
 14987              		.save	{r7, lr}
 14988 0120 80B5     		push	{r7, lr}
 14989              	.LCFI24:
 14990              		.pad #8
 14991 0122 82B0     		sub	sp, sp, #8
 14992              	.LCFI25:
 14993              		.setfp r7, sp, #0
 14994 0124 00AF     		add	r7, sp, #0
 14995              	.LCFI26:
 14996 0126 7860     		str	r0, [r7, #4]
  73:../ffmpeg_pipeline.cpp **** {
  74:../ffmpeg_pipeline.cpp ****   return WaitKeyframeFlag;
 14997              		.loc 1 74 0
 14998 0128 7B68     		ldr	r3, [r7, #4]
 14999 012a 5B7C     		ldrb	r3, [r3, #17]
  75:../ffmpeg_pipeline.cpp **** }
 15000              		.loc 1 75 0
 15001 012c 181C     		mov	r0, r3
 15002 012e BD46     		mov	sp, r7
 15003 0130 02B0     		add	sp, sp, #8
 15004              		@ sp needed for prologue
 15005 0132 80BD     		pop	{r7, pc}
 15006              	.LFE994:
 15007              		.fnend
 15009              		.align	2
 15010              		.global	_ZN10FfPipeline11GetRecStateEv
 15011              		.code	16
 15012              		.thumb_func
 15014              	_ZN10FfPipeline11GetRecStateEv:
 15015              		.fnstart
 15016              	.LFB998:
  76:../ffmpeg_pipeline.cpp **** 
  77:../ffmpeg_pipeline.cpp **** bool FfPipeline::IsNeedStop()
  78:../ffmpeg_pipeline.cpp **** {
  79:../ffmpeg_pipeline.cpp ****   pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
  80:../ffmpeg_pipeline.cpp ****   bool retval;
  81:../ffmpeg_pipeline.cpp **** 
  82:../ffmpeg_pipeline.cpp ****   pthread_mutex_lock(&mutex);
  83:../ffmpeg_pipeline.cpp ****   retval = IsNeedStopFlag;
  84:../ffmpeg_pipeline.cpp ****   pthread_mutex_unlock(&mutex);
  85:../ffmpeg_pipeline.cpp **** 
  86:../ffmpeg_pipeline.cpp ****   return retval;
  87:../ffmpeg_pipeline.cpp **** }
  88:../ffmpeg_pipeline.cpp **** 
  89:../ffmpeg_pipeline.cpp **** int FfPipeline::ThInitiateRecording()
  90:../ffmpeg_pipeline.cpp **** {
  91:../ffmpeg_pipeline.cpp ****   const char *class_name = "FfPipeline::ThInitiateRecording";
  92:../ffmpeg_pipeline.cpp ****   pthread_t ptid;
  93:../ffmpeg_pipeline.cpp **** 
  94:../ffmpeg_pipeline.cpp ****   sprintf(str, "DEBUG: Pipeline slot '%d'. Try to starting thread with stopping...\n", Slot);
  95:../ffmpeg_pipeline.cpp ****   AppendLog(str, class_name);
  96:../ffmpeg_pipeline.cpp **** 
  97:../ffmpeg_pipeline.cpp ****   pthread_create(&ptid, NULL, &ThRecording, (void *) this);
  98:../ffmpeg_pipeline.cpp **** 
  99:../ffmpeg_pipeline.cpp ****   pthread_detach(ptid);
 100:../ffmpeg_pipeline.cpp **** 
 101:../ffmpeg_pipeline.cpp ****   sprintf(str, "DEBUG: Pipeline slot '%d'. Starting thread ended!\n", Slot);
 102:../ffmpeg_pipeline.cpp ****   AppendLog(str, class_name);
 103:../ffmpeg_pipeline.cpp **** 
 104:../ffmpeg_pipeline.cpp ****   return 0;
 105:../ffmpeg_pipeline.cpp **** }
 106:../ffmpeg_pipeline.cpp **** 
 107:../ffmpeg_pipeline.cpp **** void *FfPipeline::ThRecording(void *pdata)
 108:../ffmpeg_pipeline.cpp **** {
 109:../ffmpeg_pipeline.cpp ****   FfPipeline *Pip = (FfPipeline *) pdata;
 110:../ffmpeg_pipeline.cpp **** 
 111:../ffmpeg_pipeline.cpp ****   Pip->DoRecording();
 112:../ffmpeg_pipeline.cpp **** 
 113:../ffmpeg_pipeline.cpp ****   return pdata;
 114:../ffmpeg_pipeline.cpp **** }
 115:../ffmpeg_pipeline.cpp **** 
 116:../ffmpeg_pipeline.cpp **** RecordingState FfPipeline::GetRecState()
 15017              		.loc 1 116 0
 15018              		.save	{r7, lr}
 15019 0134 80B5     		push	{r7, lr}
 15020              	.LCFI27:
 15021              		.pad #8
 15022 0136 82B0     		sub	sp, sp, #8
 15023              	.LCFI28:
 15024              		.setfp r7, sp, #0
 15025 0138 00AF     		add	r7, sp, #0
 15026              	.LCFI29:
 15027 013a 7860     		str	r0, [r7, #4]
 117:../ffmpeg_pipeline.cpp **** {
 118:../ffmpeg_pipeline.cpp ****   return RecState;
 15028              		.loc 1 118 0
 15029 013c 7B68     		ldr	r3, [r7, #4]
 15030 013e 9B68     		ldr	r3, [r3, #8]
 119:../ffmpeg_pipeline.cpp **** }
 15031              		.loc 1 119 0
 15032 0140 181C     		mov	r0, r3
 15033 0142 BD46     		mov	sp, r7
 15034 0144 02B0     		add	sp, sp, #8
 15035              		@ sp needed for prologue
 15036 0146 80BD     		pop	{r7, pc}
 15037              	.LFE998:
 15038              		.fnend
 15040              		.align	2
 15041              		.code	16
 15042              		.thumb_func
 15044              	_Z41__static_initialization_and_destruction_0ii:
 15045              		.fnstart
 15046              	.LFB1032:
 120:../ffmpeg_pipeline.cpp **** 
 121:../ffmpeg_pipeline.cpp **** int FfPipeline::Start()
 122:../ffmpeg_pipeline.cpp **** {
 123:../ffmpeg_pipeline.cpp **** 	return ThInitiateRecording();
 124:../ffmpeg_pipeline.cpp **** }
 125:../ffmpeg_pipeline.cpp **** 
 126:../ffmpeg_pipeline.cpp **** void FfPipeline::WriteFrame_v242(AVFormatContext *s, AVStream *st, AVPacket *pkt, AVBitStreamFilter
 127:../ffmpeg_pipeline.cpp **** {
 128:../ffmpeg_pipeline.cpp ****   const char *class_name = "FfPipeline::WriteFrame_v242";
 129:../ffmpeg_pipeline.cpp ****   int ret;
 130:../ffmpeg_pipeline.cpp ****   AVCodecContext *avctx = st->codec;
 131:../ffmpeg_pipeline.cpp **** 
 132:../ffmpeg_pipeline.cpp ****   if ((avctx->codec_type == AVMEDIA_TYPE_AUDIO || avctx->codec_type == AVMEDIA_TYPE_VIDEO) && pkt->
 133:../ffmpeg_pipeline.cpp ****     {
 134:../ffmpeg_pipeline.cpp ****       int64_t max = st->cur_dts + !(s->oformat->flags & AVFMT_TS_NONSTRICT);
 135:../ffmpeg_pipeline.cpp ****       if (st->cur_dts && st->cur_dts != AV_NOPTS_VALUE && max > pkt->dts)
 136:../ffmpeg_pipeline.cpp ****         {
 137:../ffmpeg_pipeline.cpp ****           AppendLog("WARNING: PTS:DTS < PRId64 invalid, clipping\n", class_name);
 138:../ffmpeg_pipeline.cpp ****           if (pkt->pts >= pkt->dts)
 139:../ffmpeg_pipeline.cpp ****             pkt->pts = FFMAX(pkt->pts, max);
 140:../ffmpeg_pipeline.cpp ****           pkt->dts = max;
 141:../ffmpeg_pipeline.cpp ****         }
 142:../ffmpeg_pipeline.cpp ****     }
 143:../ffmpeg_pipeline.cpp **** 
 144:../ffmpeg_pipeline.cpp ****   ret = av_interleaved_write_frame(s, pkt);
 145:../ffmpeg_pipeline.cpp **** 
 146:../ffmpeg_pipeline.cpp ****   if (ret < 0)
 147:../ffmpeg_pipeline.cpp ****     {
 148:../ffmpeg_pipeline.cpp ****       sprintf(str, "ERROR: Error executing av_interleaved_write_frame()...Error code: %d. Error: '%
 149:../ffmpeg_pipeline.cpp ****       AppendLog(str, class_name);
 150:../ffmpeg_pipeline.cpp ****     }
 151:../ffmpeg_pipeline.cpp **** }
 152:../ffmpeg_pipeline.cpp **** 
 153:../ffmpeg_pipeline.cpp **** void FfPipeline::RescalePtsDts24(AVPacket *pkt, AVStream *in_stream, AVStream *out_stream)
 154:../ffmpeg_pipeline.cpp **** {
 155:../ffmpeg_pipeline.cpp ****   pkt->pts = av_rescale_q(pkt->pts, in_stream->time_base, out_stream->time_base);
 156:../ffmpeg_pipeline.cpp ****   pkt->dts = av_rescale_q(pkt->dts, in_stream->time_base, out_stream->time_base);
 157:../ffmpeg_pipeline.cpp ****   pkt->duration = av_rescale_q(pkt->duration, in_stream->time_base, out_stream->time_base);
 158:../ffmpeg_pipeline.cpp **** }
 159:../ffmpeg_pipeline.cpp **** 
 160:../ffmpeg_pipeline.cpp **** int FfPipeline::DoRecording(void)
 161:../ffmpeg_pipeline.cpp **** {
 162:../ffmpeg_pipeline.cpp ****   const char *class_name = "FfPipeline::DoRecording";
 163:../ffmpeg_pipeline.cpp ****   AVFormatContext *ifcx = NULL;
 164:../ffmpeg_pipeline.cpp ****   AVFormatContext *ofcx = NULL;
 165:../ffmpeg_pipeline.cpp ****   AVDictionary *opts = NULL;
 166:../ffmpeg_pipeline.cpp ****   AVOutputFormat *ofmt = NULL;
 167:../ffmpeg_pipeline.cpp ****   AVPacket pkt;
 168:../ffmpeg_pipeline.cpp ****   uint64_t a_packets = 0, v_packets = 0;
 169:../ffmpeg_pipeline.cpp ****   size_t i;
 170:../ffmpeg_pipeline.cpp ****   int ret;
 171:../ffmpeg_pipeline.cpp ****   char path[BUF_SIZE];
 172:../ffmpeg_pipeline.cpp **** 
 173:../ffmpeg_pipeline.cpp ****   sprintf(path, "%s_%d.mkv", SAVE_PATH, ++Count);
 174:../ffmpeg_pipeline.cpp **** 
 175:../ffmpeg_pipeline.cpp ****   sprintf(str, "DEBUG: Output path: '%s'\n", path);
 176:../ffmpeg_pipeline.cpp ****   AppendLog(str, class_name);
 177:../ffmpeg_pipeline.cpp **** 
 178:../ffmpeg_pipeline.cpp ****   av_dict_set(&opts, "rtsp_transport", "tcp", 0);
 179:../ffmpeg_pipeline.cpp **** 
 180:../ffmpeg_pipeline.cpp ****   if (avformat_open_input(&ifcx, CAM_URL, NULL, &opts) < 0)
 181:../ffmpeg_pipeline.cpp ****     {
 182:../ffmpeg_pipeline.cpp ****       avformat_close_input(&ifcx);
 183:../ffmpeg_pipeline.cpp ****       ifcx = NULL;
 184:../ffmpeg_pipeline.cpp **** 
 185:../ffmpeg_pipeline.cpp ****       av_dict_free(&opts);
 186:../ffmpeg_pipeline.cpp **** 
 187:../ffmpeg_pipeline.cpp ****       return -1;
 188:../ffmpeg_pipeline.cpp ****     }
 189:../ffmpeg_pipeline.cpp ****   else
 190:../ffmpeg_pipeline.cpp ****     {
 191:../ffmpeg_pipeline.cpp ****     }
 192:../ffmpeg_pipeline.cpp **** 
 193:../ffmpeg_pipeline.cpp ****   av_dict_free(&opts);
 194:../ffmpeg_pipeline.cpp **** 
 195:../ffmpeg_pipeline.cpp ****   if (avformat_find_stream_info(ifcx, NULL) < 0)
 196:../ffmpeg_pipeline.cpp ****     {
 197:../ffmpeg_pipeline.cpp ****       avformat_close_input(&ifcx);
 198:../ffmpeg_pipeline.cpp ****       ifcx = NULL;
 199:../ffmpeg_pipeline.cpp **** 
 200:../ffmpeg_pipeline.cpp ****       return -1;
 201:../ffmpeg_pipeline.cpp ****     }
 202:../ffmpeg_pipeline.cpp **** 
 203:../ffmpeg_pipeline.cpp ****   avformat_alloc_output_context2(&ofcx, NULL, NULL, path);
 204:../ffmpeg_pipeline.cpp **** 
 205:../ffmpeg_pipeline.cpp ****   if (ofcx == NULL)
 206:../ffmpeg_pipeline.cpp ****     {
 207:../ffmpeg_pipeline.cpp ****       return -1;
 208:../ffmpeg_pipeline.cpp ****     }
 209:../ffmpeg_pipeline.cpp ****   else
 210:../ffmpeg_pipeline.cpp ****     {
 211:../ffmpeg_pipeline.cpp ****     }
 212:../ffmpeg_pipeline.cpp **** 
 213:../ffmpeg_pipeline.cpp ****   ofmt = ofcx->oformat;
 214:../ffmpeg_pipeline.cpp **** 
 215:../ffmpeg_pipeline.cpp ****   if (ofmt == NULL)
 216:../ffmpeg_pipeline.cpp ****     {
 217:../ffmpeg_pipeline.cpp ****       return -1;
 218:../ffmpeg_pipeline.cpp ****     }
 219:../ffmpeg_pipeline.cpp **** 
 220:../ffmpeg_pipeline.cpp ****   for (i = 0; i < ifcx->nb_streams; i++)
 221:../ffmpeg_pipeline.cpp ****     {
 222:../ffmpeg_pipeline.cpp ****       AVStream *in_stream = ifcx->streams[i];
 223:../ffmpeg_pipeline.cpp ****       AVStream *out_stream = avformat_new_stream(ofcx, in_stream->codec->codec);
 224:../ffmpeg_pipeline.cpp **** 
 225:../ffmpeg_pipeline.cpp ****       if (!out_stream)
 226:../ffmpeg_pipeline.cpp ****         {
 227:../ffmpeg_pipeline.cpp ****           AppendLog("Failed allocating output stream\n", class_name);
 228:../ffmpeg_pipeline.cpp ****           return -1;
 229:../ffmpeg_pipeline.cpp ****         }
 230:../ffmpeg_pipeline.cpp **** 
 231:../ffmpeg_pipeline.cpp ****       ret = avcodec_copy_context(out_stream->codec, in_stream->codec);
 232:../ffmpeg_pipeline.cpp **** 
 233:../ffmpeg_pipeline.cpp ****       if (ret < 0)
 234:../ffmpeg_pipeline.cpp ****         {
 235:../ffmpeg_pipeline.cpp ****           return ret;
 236:../ffmpeg_pipeline.cpp ****         }
 237:../ffmpeg_pipeline.cpp **** 
 238:../ffmpeg_pipeline.cpp ****       out_stream->time_base = in_stream->time_base;
 239:../ffmpeg_pipeline.cpp ****       out_stream->codec->time_base = out_stream->time_base;
 240:../ffmpeg_pipeline.cpp ****       out_stream->codec->codec_tag = 0;
 241:../ffmpeg_pipeline.cpp **** 
 242:../ffmpeg_pipeline.cpp ****       if (ofcx->oformat->flags & AVFMT_GLOBALHEADER)
 243:../ffmpeg_pipeline.cpp ****         out_stream->codec->flags |= CODEC_FLAG_GLOBAL_HEADER;
 244:../ffmpeg_pipeline.cpp **** 
 245:../ffmpeg_pipeline.cpp ****     }   // End of for streams
 246:../ffmpeg_pipeline.cpp **** 
 247:../ffmpeg_pipeline.cpp ****   if (!(ofmt->flags & AVFMT_NOFILE))
 248:../ffmpeg_pipeline.cpp ****     {
 249:../ffmpeg_pipeline.cpp ****       ret = avio_open(&ofcx->pb, path, AVIO_FLAG_WRITE);
 250:../ffmpeg_pipeline.cpp ****       if (ret < 0)
 251:../ffmpeg_pipeline.cpp ****         {
 252:../ffmpeg_pipeline.cpp ****           return ret;
 253:../ffmpeg_pipeline.cpp ****         }
 254:../ffmpeg_pipeline.cpp ****     }
 255:../ffmpeg_pipeline.cpp ****   else
 256:../ffmpeg_pipeline.cpp ****     {
 257:../ffmpeg_pipeline.cpp ****       AppendLog("WARNING: for ofmt set flag AVFMT_NOFILE so we skip open file.\n", class_name);
 258:../ffmpeg_pipeline.cpp ****     }
 259:../ffmpeg_pipeline.cpp **** 
 260:../ffmpeg_pipeline.cpp ****   ret = avformat_write_header(ofcx, NULL);
 261:../ffmpeg_pipeline.cpp **** 
 262:../ffmpeg_pipeline.cpp ****   if (ret < 0)
 263:../ffmpeg_pipeline.cpp ****     {
 264:../ffmpeg_pipeline.cpp ****       return ret;
 265:../ffmpeg_pipeline.cpp ****     }
 266:../ffmpeg_pipeline.cpp **** 
 267:../ffmpeg_pipeline.cpp ****   SetWaitingKeyframeFlag();
 268:../ffmpeg_pipeline.cpp ****   ClearNeedStop();
 269:../ffmpeg_pipeline.cpp **** 
 270:../ffmpeg_pipeline.cpp ****   while((av_read_frame(ifcx, &pkt) >= 0) && (!IsNeedStop()))
 271:../ffmpeg_pipeline.cpp ****     {
 272:../ffmpeg_pipeline.cpp ****       AVStream *in_stream = NULL, *out_stream = NULL;
 273:../ffmpeg_pipeline.cpp **** 
 274:../ffmpeg_pipeline.cpp ****       if ((IsWaitingKeyframe() && !(pkt.flags & AV_PKT_FLAG_KEY)))
 275:../ffmpeg_pipeline.cpp ****         {
 276:../ffmpeg_pipeline.cpp ****           av_free_packet(&pkt);
 277:../ffmpeg_pipeline.cpp ****           continue;
 278:../ffmpeg_pipeline.cpp ****         }
 279:../ffmpeg_pipeline.cpp **** 
 280:../ffmpeg_pipeline.cpp ****       if (IsWaitingKeyframe())
 281:../ffmpeg_pipeline.cpp ****         {
 282:../ffmpeg_pipeline.cpp ****           ClearWaitingKeyframeFlag();
 283:../ffmpeg_pipeline.cpp ****           pkt.pts = pkt.dts = AV_NOPTS_VALUE;
 284:../ffmpeg_pipeline.cpp ****           SetRecState(REC_WRITING);
 285:../ffmpeg_pipeline.cpp ****           SetPartnerToStop();
 286:../ffmpeg_pipeline.cpp ****         }
 287:../ffmpeg_pipeline.cpp **** 
 288:../ffmpeg_pipeline.cpp ****       in_stream  = ifcx->streams[pkt.stream_index];
 289:../ffmpeg_pipeline.cpp ****       out_stream = ofcx->streams[pkt.stream_index];
 290:../ffmpeg_pipeline.cpp **** 
 291:../ffmpeg_pipeline.cpp ****       if (!in_stream)
 292:../ffmpeg_pipeline.cpp ****         {
 293:../ffmpeg_pipeline.cpp ****           AppendLog("ERROR: in_stream is NULL pointer! Skip this packet!\n", class_name);
 294:../ffmpeg_pipeline.cpp ****           av_free_packet(&pkt);
 295:../ffmpeg_pipeline.cpp **** 
 296:../ffmpeg_pipeline.cpp ****           continue;
 297:../ffmpeg_pipeline.cpp ****         }
 298:../ffmpeg_pipeline.cpp **** 
 299:../ffmpeg_pipeline.cpp ****       if (!out_stream)
 300:../ffmpeg_pipeline.cpp ****         {
 301:../ffmpeg_pipeline.cpp ****           AppendLog("ERROR: out_stream is NULL pointer! Skip this packet!\n", class_name);
 302:../ffmpeg_pipeline.cpp ****           av_free_packet(&pkt);
 303:../ffmpeg_pipeline.cpp **** 
 304:../ffmpeg_pipeline.cpp ****           continue;
 305:../ffmpeg_pipeline.cpp ****         }
 306:../ffmpeg_pipeline.cpp **** 
 307:../ffmpeg_pipeline.cpp ****       if (out_stream->codec->codec_type == AVMEDIA_TYPE_AUDIO)
 308:../ffmpeg_pipeline.cpp ****         a_packets++;
 309:../ffmpeg_pipeline.cpp ****       else if (out_stream->codec->codec_type == AVMEDIA_TYPE_VIDEO)
 310:../ffmpeg_pipeline.cpp ****         v_packets++;
 311:../ffmpeg_pipeline.cpp **** 
 312:../ffmpeg_pipeline.cpp ****       RescalePtsDts24(&pkt, in_stream, out_stream);
 313:../ffmpeg_pipeline.cpp **** 
 314:../ffmpeg_pipeline.cpp ****       WriteFrame_v242(ofcx, out_stream, &pkt, NULL);
 315:../ffmpeg_pipeline.cpp **** 
 316:../ffmpeg_pipeline.cpp ****       av_free_packet(&pkt);
 317:../ffmpeg_pipeline.cpp ****     }
 318:../ffmpeg_pipeline.cpp **** 
 319:../ffmpeg_pipeline.cpp ****   // Now we stopping
 320:../ffmpeg_pipeline.cpp ****   sprintf(str, "DEBUG: Now we stopping Slot %d\n", Slot);
 321:../ffmpeg_pipeline.cpp ****   AppendLog(str, class_name);
 322:../ffmpeg_pipeline.cpp **** 
 323:../ffmpeg_pipeline.cpp ****   if (!IsNeedStop())
 324:../ffmpeg_pipeline.cpp ****     av_free_packet(&pkt);
 325:../ffmpeg_pipeline.cpp **** 
 326:../ffmpeg_pipeline.cpp ****   sprintf(str, "DEBUG: Try to av_write_trailer() for Slot %d\n", Slot);
 327:../ffmpeg_pipeline.cpp ****   AppendLog(str, class_name);
 328:../ffmpeg_pipeline.cpp **** 
 329:../ffmpeg_pipeline.cpp ****   av_write_trailer(ofcx);
 330:../ffmpeg_pipeline.cpp **** 
 331:../ffmpeg_pipeline.cpp ****   sprintf(str, "DEBUG: Try to close all streams codec for Slot %d\n", Slot);
 332:../ffmpeg_pipeline.cpp ****   AppendLog(str, class_name);
 333:../ffmpeg_pipeline.cpp **** 
 334:../ffmpeg_pipeline.cpp ****   for (i = 0; i < ofcx->nb_streams; i++)
 335:../ffmpeg_pipeline.cpp ****     {
 336:../ffmpeg_pipeline.cpp ****       avcodec_close(ofcx->streams[i]->codec);
 337:../ffmpeg_pipeline.cpp ****       av_freep(ofcx->streams[i]);
 338:../ffmpeg_pipeline.cpp ****     }
 339:../ffmpeg_pipeline.cpp **** 
 340:../ffmpeg_pipeline.cpp ****   sprintf(str, "DEBUG: Try to avio_close() for Slot %d\n", Slot);
 341:../ffmpeg_pipeline.cpp ****   AppendLog(str, class_name);
 342:../ffmpeg_pipeline.cpp **** 
 343:../ffmpeg_pipeline.cpp ****   avio_close(ofcx->pb);
 344:../ffmpeg_pipeline.cpp **** 
 345:../ffmpeg_pipeline.cpp ****   sprintf(str, "DEBUG: Try to av_free() for Slot %d\n", Slot);
 346:../ffmpeg_pipeline.cpp ****   AppendLog(str, class_name);
 347:../ffmpeg_pipeline.cpp **** 
 348:../ffmpeg_pipeline.cpp ****   av_free(ofcx);
 349:../ffmpeg_pipeline.cpp **** 
 350:../ffmpeg_pipeline.cpp ****   sprintf(str, "DEBUG: Try to avformat_close_input() for Slot %d\n", Slot);
 351:../ffmpeg_pipeline.cpp ****   AppendLog(str, class_name);
 352:../ffmpeg_pipeline.cpp **** 
 353:../ffmpeg_pipeline.cpp ****   avformat_close_input(&ifcx);
 354:../ffmpeg_pipeline.cpp **** 
 355:../ffmpeg_pipeline.cpp ****   SetRecState(REC_STOPPED);
 356:../ffmpeg_pipeline.cpp **** 
 357:../ffmpeg_pipeline.cpp ****   return 0;
 358:../ffmpeg_pipeline.cpp **** }
 15047              		.loc 1 358 0
 15048              		.save	{r7, lr}
 15049 0148 80B5     		push	{r7, lr}
 15050              	.LCFI30:
 15051              		.pad #8
 15052 014a 82B0     		sub	sp, sp, #8
 15053              	.LCFI31:
 15054              		.setfp r7, sp, #0
 15055 014c 00AF     		add	r7, sp, #0
 15056              	.LCFI32:
 15057 014e 7860     		str	r0, [r7, #4]
 15058 0150 3960     		str	r1, [r7]
 15059              		.loc 1 358 0
 15060 0152 7B68     		ldr	r3, [r7, #4]
 15061 0154 012B     		cmp	r3, #1
 15062 0156 0DD1     		bne	.L31
 15063 0158 3A68     		ldr	r2, [r7]
 15064 015a 084B     		ldr	r3, .L32
 15065 015c 9A42     		cmp	r2, r3
 15066 015e 09D1     		bne	.L31
   1:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // Standard iostream objects -*- C++ -*-
   2:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
   3:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // Copyright (C) 1997, 1998, 1999, 2001, 2002, 2005, 2008
   4:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // Free Software Foundation, Inc.
   5:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** //
   6:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   7:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // software; you can redistribute it and/or modify it under the
   8:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // terms of the GNU General Public License as published by the
   9:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // Free Software Foundation; either version 2, or (at your option)
  10:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // any later version.
  11:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
  12:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // This library is distributed in the hope that it will be useful,
  13:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // GNU General Public License for more details.
  16:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
  17:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // You should have received a copy of the GNU General Public License
  18:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // along with this library; see the file COPYING.  If not, write to
  19:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // the Free Software Foundation, 51 Franklin Street, Fifth Floor,
  20:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // Boston, MA 02110-1301, USA.
  21:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
  22:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // As a special exception, you may use this file as part of a free software
  23:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // library without restriction.  Specifically, if other files instantiate
  24:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // templates or use macros or inline functions from this file, or you compile
  25:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // this file and link it with other files to produce an executable, this
  26:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // file does not by itself cause the resulting executable to be covered by
  27:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // the GNU General Public License.  This exception does not however
  28:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // invalidate any other reasons why the executable file might be covered by
  29:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // the GNU General Public License.
  30:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
  31:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** /** @file iostream
  32:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****  *  This is a Standard C++ Library header. 
  33:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****  */
  34:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
  35:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** //
  36:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  37:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** //
  38:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
  39:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** #ifndef _GLIBCXX_IOSTREAM
  40:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** #define _GLIBCXX_IOSTREAM 1
  41:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
  42:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** #pragma GCC system_header
  43:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
  44:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** #include <bits/c++config.h>
  45:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** #include <ostream>
  46:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** #include <istream>
  47:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
  48:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** _GLIBCXX_BEGIN_NAMESPACE(std)
  49:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
  50:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   /**
  51:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****    *  @name Standard Stream Objects
  52:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****    *
  53:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  54:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****    *  objects</em>.  For other declarations, see
  55:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt11ch24.html
  56:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****    *  and the @link s27_2_iosfwd I/O forward declarations @endlink
  57:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****    *
  58:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****    *  They are required by default to cooperate with the global C library's
  59:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****    *  @c FILE streams, and to be available during program startup and
  60:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****    *  termination.  For more information, see the HOWTO linked to above.
  61:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   */
  62:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   //@{
  63:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   extern istream cin;		///< Linked to standard input
  64:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   extern ostream cout;		///< Linked to standard output
  65:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   extern ostream cerr;		///< Linked to standard error (unbuffered)
  66:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   extern ostream clog;		///< Linked to standard error (buffered)
  67:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
  68:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  69:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   extern wistream wcin;		///< Linked to standard input
  70:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   extern wostream wcout;	///< Linked to standard output
  71:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   extern wostream wcerr;	///< Linked to standard error (unbuffered)
  72:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   extern wostream wclog;	///< Linked to standard error (buffered)
  73:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** #endif
  74:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   //@}
  75:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream **** 
  76:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  77:/home/romar/CodeSourcery/Sourcery_G++_Lite/bin/../lib/gcc/arm-none-linux-gnueabi/4.3.3/../../../../arm-none-linux-gnueabi/include/c++/4.3.3/iostream ****   static ios_base::Init __ioinit;
 15067              		.loc 26 77 0
 15068 0160 074B     		ldr	r3, .L32+4
 15069 0162 181C     		mov	r0, r3
 15070 0164 FFF7FEFF 		bl	_ZNSt8ios_base4InitC1Ev
 15071 0168 0649     		ldr	r1, .L32+8
 15072 016a 054B     		ldr	r3, .L32+4
 15073 016c 064A     		ldr	r2, .L32+12
 15074 016e 181C     		mov	r0, r3
 15075 0170 FFF7FEFF 		bl	__aeabi_atexit
 15076              	.L31:
 15077              		.loc 1 358 0
 15078 0174 BD46     		mov	sp, r7
 15079 0176 02B0     		add	sp, sp, #8
 15080              		@ sp needed for prologue
 15081 0178 80BD     		pop	{r7, pc}
 15082              	.L33:
 15083 017a C046     		.align	2
 15084              	.L32:
 15085 017c FFFF0000 		.word	65535
 15086 0180 00000000 		.word	_ZStL8__ioinit
 15087 0184 00000000 		.word	_ZNSt8ios_base4InitD1Ev
 15088 0188 00000000 		.word	__dso_handle
 15089              	.LFE1032:
 15090              		.fnend
 15092              		.align	2
 15093              		.code	16
 15094              		.thumb_func
 15096              	_GLOBAL__I__ZN10FfPipelineC2Eh:
 15097              		.fnstart
 15098              	.LFB1033:
 15099              		.loc 1 358 0
 15100              		.save	{r7, lr}
 15101 018c 80B5     		push	{r7, lr}
 15102              	.LCFI33:
 15103              		.setfp r7, sp, #0
 15104 018e 00AF     		add	r7, sp, #0
 15105              	.LCFI34:
 15106              		.loc 1 358 0
 15107 0190 034B     		ldr	r3, .L36
 15108 0192 0120     		mov	r0, #1
 15109 0194 191C     		mov	r1, r3
 15110 0196 FFF7D7FF 		bl	_Z41__static_initialization_and_destruction_0ii
 15111 019a BD46     		mov	sp, r7
 15112              		@ sp needed for prologue
 15113 019c 80BD     		pop	{r7, pc}
 15114              	.L37:
 15115 019e C046     		.align	2
 15116              	.L36:
 15117 01a0 FFFF0000 		.word	65535
 15118              	.LFE1033:
 15119              		.fnend
 15121              		.section	.init_array,"aw",%init_array
 15122              		.align	2
 15123 0000 00000000 		.word	_GLOBAL__I__ZN10FfPipelineC2Eh(target1)
 15124              		.text
 15125              		.align	2
 15126              		.global	_ZN10FfPipeline26r_avformat_close_input_v24EPP15AVFormatContext
 15127              		.code	16
 15128              		.thumb_func
 15130              	_ZN10FfPipeline26r_avformat_close_input_v24EPP15AVFormatContext:
 15131              		.fnstart
 15132              	.LFB986:
 15133              		.loc 1 17 0
 15134              		.save	{r7, lr}
 15135 01a4 80B5     		push	{r7, lr}
 15136              	.LCFI35:
 15137              		.pad #8
 15138 01a6 82B0     		sub	sp, sp, #8
 15139              	.LCFI36:
 15140              		.setfp r7, sp, #0
 15141 01a8 00AF     		add	r7, sp, #0
 15142              	.LCFI37:
 15143 01aa 7860     		str	r0, [r7, #4]
 15144 01ac 3960     		str	r1, [r7]
 15145              		.loc 1 19 0
 15146 01ae 3B68     		ldr	r3, [r7]
 15147 01b0 181C     		mov	r0, r3
 15148 01b2 FFF7FEFF 		bl	avformat_close_input
 15149              		.loc 1 20 0
 15150 01b6 BD46     		mov	sp, r7
 15151 01b8 02B0     		add	sp, sp, #8
 15152              		@ sp needed for prologue
 15153 01ba 80BD     		pop	{r7, pc}
 15154              	.LFE986:
 15155              		.fnend
 15157              		.align	2
 15158              		.global	_ZN10FfPipeline15RescalePtsDts24EP8AVPacketP8AVStreamS3_
 15159              		.code	16
 15160              		.thumb_func
 15162              	_ZN10FfPipeline15RescalePtsDts24EP8AVPacketP8AVStreamS3_:
 15163              		.fnstart
 15164              	.LFB1001:
 15165              		.loc 1 153 0
 15166              		.save	{r4, r5, r6, r7, lr}
 15167 01bc F0B5     		push	{r4, r5, r6, r7, lr}
 15168              	.LCFI38:
 15169 01be 4746     		mov	r7, r8
 15170              		.save	{r8}
 15171 01c0 80B4     		push	{r7}
 15172              	.LCFI39:
 15173              		.pad #48
 15174 01c2 8CB0     		sub	sp, sp, #48
 15175              	.LCFI40:
 15176              		.setfp r7, sp, #8
 15177 01c4 02AF     		add	r7, sp, #8
 15178              	.LCFI41:
 15179 01c6 7862     		str	r0, [r7, #36]
 15180 01c8 3962     		str	r1, [r7, #32]
 15181 01ca FA61     		str	r2, [r7, #28]
 15182 01cc BB61     		str	r3, [r7, #24]
 15183              		.loc 1 155 0
 15184 01ce 3B6A     		ldr	r3, [r7, #32]
 15185 01d0 9968     		ldr	r1, [r3, #8]
 15186 01d2 DA68     		ldr	r2, [r3, #12]
 15187 01d4 FC69     		ldr	r4, [r7, #28]
 15188 01d6 BB69     		ldr	r3, [r7, #24]
 15189 01d8 6846     		mov	r0, sp
 15190 01da 8446     		mov	ip, r0
 15191 01dc E046     		mov	r8, ip
 15192 01de 4546     		mov	r5, r8
 15193 01e0 7D61     		str	r5, [r7, #20]
 15194 01e2 181C     		mov	r0, r3
 15195 01e4 2830     		add	r0, r0, #40
 15196 01e6 3861     		str	r0, [r7, #16]
 15197 01e8 7B69     		ldr	r3, [r7, #20]
 15198 01ea 3D69     		ldr	r5, [r7, #16]
 15199 01ec 41CD     		ldmia	r5!, {r0, r6}
 15200 01ee 41C3     		stmia	r3!, {r0, r6}
 15201 01f0 081C     		mov	r0, r1
 15202 01f2 111C     		mov	r1, r2
 15203 01f4 A26A     		ldr	r2, [r4, #40]
 15204 01f6 E36A     		ldr	r3, [r4, #44]
 15205 01f8 FFF7FEFF 		bl	av_rescale_q
 15206 01fc 031C     		mov	r3, r0
 15207 01fe 0C1C     		mov	r4, r1
 15208 0200 3A6A     		ldr	r2, [r7, #32]
 15209 0202 9360     		str	r3, [r2, #8]
 15210 0204 D460     		str	r4, [r2, #12]
 15211              		.loc 1 156 0
 15212 0206 3B6A     		ldr	r3, [r7, #32]
 15213 0208 1969     		ldr	r1, [r3, #16]
 15214 020a 5A69     		ldr	r2, [r3, #20]
 15215 020c FC69     		ldr	r4, [r7, #28]
 15216 020e BB69     		ldr	r3, [r7, #24]
 15217 0210 6D46     		mov	r5, sp
 15218 0212 AC46     		mov	ip, r5
 15219 0214 E046     		mov	r8, ip
 15220 0216 4646     		mov	r6, r8
 15221 0218 FE60     		str	r6, [r7, #12]
 15222 021a 181C     		mov	r0, r3
 15223 021c 2830     		add	r0, r0, #40
 15224 021e B860     		str	r0, [r7, #8]
 15225 0220 FB68     		ldr	r3, [r7, #12]
 15226 0222 BD68     		ldr	r5, [r7, #8]
 15227 0224 41CD     		ldmia	r5!, {r0, r6}
 15228 0226 41C3     		stmia	r3!, {r0, r6}
 15229 0228 081C     		mov	r0, r1
 15230 022a 111C     		mov	r1, r2
 15231 022c A26A     		ldr	r2, [r4, #40]
 15232 022e E36A     		ldr	r3, [r4, #44]
 15233 0230 FFF7FEFF 		bl	av_rescale_q
 15234 0234 031C     		mov	r3, r0
 15235 0236 0C1C     		mov	r4, r1
 15236 0238 3A6A     		ldr	r2, [r7, #32]
 15237 023a 1361     		str	r3, [r2, #16]
 15238 023c 5461     		str	r4, [r2, #20]
 15239              		.loc 1 157 0
 15240 023e 3B6A     		ldr	r3, [r7, #32]
 15241 0240 1A6B     		ldr	r2, [r3, #48]
 15242 0242 D117     		asr	r1, r2, #31
 15243 0244 131C     		mov	r3, r2
 15244 0246 0C1C     		mov	r4, r1
 15245 0248 FD69     		ldr	r5, [r7, #28]
 15246 024a BA69     		ldr	r2, [r7, #24]
 15247 024c 6946     		mov	r1, sp
 15248 024e 8C46     		mov	ip, r1
 15249 0250 E046     		mov	r8, ip
 15250 0252 4646     		mov	r6, r8
 15251 0254 7E60     		str	r6, [r7, #4]
 15252 0256 101C     		mov	r0, r2
 15253 0258 2830     		add	r0, r0, #40
 15254 025a 3860     		str	r0, [r7]
 15255 025c 7968     		ldr	r1, [r7, #4]
 15256 025e 3A68     		ldr	r2, [r7]
 15257 0260 41CA     		ldmia	r2!, {r0, r6}
 15258 0262 41C1     		stmia	r1!, {r0, r6}
 15259 0264 181C     		mov	r0, r3
 15260 0266 211C     		mov	r1, r4
 15261 0268 AA6A     		ldr	r2, [r5, #40]
 15262 026a EB6A     		ldr	r3, [r5, #44]
 15263 026c FFF7FEFF 		bl	av_rescale_q
 15264 0270 031C     		mov	r3, r0
 15265 0272 0C1C     		mov	r4, r1
 15266 0274 1A1C     		mov	r2, r3
 15267 0276 3B6A     		ldr	r3, [r7, #32]
 15268 0278 1A63     		str	r2, [r3, #48]
 15269              		.loc 1 158 0
 15270 027a BD46     		mov	sp, r7
 15271 027c 0AB0     		add	sp, sp, #40
 15272              		@ sp needed for prologue
 15273 027e 04BC     		pop	{r2}
 15274 0280 9046     		mov	r8, r2
 15275 0282 F0BD     		pop	{r4, r5, r6, r7, pc}
 15276              	.LFE1001:
 15277              		.fnend
 15279              		.align	2
 15280              		.code	16
 15281              		.thumb_func
 15283              	av_make_error_string:
 15284              		.fnstart
 15285              	.LFB973:
   1:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** /*
   2:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * This file is part of FFmpeg.
   3:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  *
   4:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * FFmpeg is free software; you can redistribute it and/or
   5:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * modify it under the terms of the GNU Lesser General Public
   6:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * License as published by the Free Software Foundation; either
   7:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * version 2.1 of the License, or (at your option) any later version.
   8:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  *
   9:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * FFmpeg is distributed in the hope that it will be useful,
  10:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * Lesser General Public License for more details.
  13:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  *
  14:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * You should have received a copy of the GNU Lesser General Public
  15:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * License along with FFmpeg; if not, write to the Free Software
  16:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
  17:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  */
  18:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** 
  19:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** /**
  20:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * @file
  21:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * error code definitions
  22:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  */
  23:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** 
  24:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #ifndef AVUTIL_ERROR_H
  25:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVUTIL_ERROR_H
  26:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** 
  27:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #include <errno.h>
  28:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #include <stddef.h>
  29:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** 
  30:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** /**
  31:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * @addtogroup lavu_error
  32:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  *
  33:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * @{
  34:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  */
  35:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** 
  36:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** 
  37:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** /* error handling */
  38:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #if EDOM > 0
  39:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR(e) (-(e))   ///< Returns a negative error code from a POSIX error code, to return f
  40:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVUNERROR(e) (-(e)) ///< Returns a POSIX error code from a library function error return va
  41:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #else
  42:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** /* Some platforms have E* and errno already negated. */
  43:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR(e) (e)
  44:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVUNERROR(e) (e)
  45:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #endif
  46:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** 
  47:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define FFERRTAG(a, b, c, d) (-(int)MKTAG(a, b, c, d))
  48:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** 
  49:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_BSF_NOT_FOUND      FFERRTAG(0xF8,'B','S','F') ///< Bitstream filter not found
  50:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_BUG                FFERRTAG( 'B','U','G','!') ///< Internal bug, also see AVERROR_B
  51:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_BUFFER_TOO_SMALL   FFERRTAG( 'B','U','F','S') ///< Buffer too small
  52:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_DECODER_NOT_FOUND  FFERRTAG(0xF8,'D','E','C') ///< Decoder not found
  53:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_DEMUXER_NOT_FOUND  FFERRTAG(0xF8,'D','E','M') ///< Demuxer not found
  54:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_ENCODER_NOT_FOUND  FFERRTAG(0xF8,'E','N','C') ///< Encoder not found
  55:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_EOF                FFERRTAG( 'E','O','F',' ') ///< End of file
  56:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_EXIT               FFERRTAG( 'E','X','I','T') ///< Immediate exit was requested; th
  57:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_EXTERNAL           FFERRTAG( 'E','X','T',' ') ///< Generic error in an external lib
  58:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_FILTER_NOT_FOUND   FFERRTAG(0xF8,'F','I','L') ///< Filter not found
  59:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_INVALIDDATA        FFERRTAG( 'I','N','D','A') ///< Invalid data found when processi
  60:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_MUXER_NOT_FOUND    FFERRTAG(0xF8,'M','U','X') ///< Muxer not found
  61:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_OPTION_NOT_FOUND   FFERRTAG(0xF8,'O','P','T') ///< Option not found
  62:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_PATCHWELCOME       FFERRTAG( 'P','A','W','E') ///< Not yet implemented in FFmpeg, p
  63:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_PROTOCOL_NOT_FOUND FFERRTAG(0xF8,'P','R','O') ///< Protocol not found
  64:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** 
  65:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_STREAM_NOT_FOUND   FFERRTAG(0xF8,'S','T','R') ///< Stream not found
  66:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** /**
  67:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * This is semantically identical to AVERROR_BUG
  68:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * it has been introduced in Libav after our AVERROR_BUG and with a modified value.
  69:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  */
  70:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_BUG2               FFERRTAG( 'B','U','G',' ')
  71:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_UNKNOWN            FFERRTAG( 'U','N','K','N') ///< Unknown error, typically from an
  72:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_EXPERIMENTAL       (-0x2bb2afa8) ///< Requested feature is flagged experimental. Se
  73:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_INPUT_CHANGED      (-0x636e6701) ///< Input changed between calls. Reconfiguration 
  74:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AVERROR_OUTPUT_CHANGED     (-0x636e6702) ///< Output changed between calls. Reconfiguration
  75:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** 
  76:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** #define AV_ERROR_MAX_STRING_SIZE 64
  77:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** 
  78:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** /**
  79:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * Put a description of the AVERROR code errnum in errbuf.
  80:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * In case of failure the global variable errno is set to indicate the
  81:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * error. Even in case of failure av_strerror() will print a generic
  82:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * error message indicating the errnum provided to errbuf.
  83:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  *
  84:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * @param errnum      error code to describe
  85:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * @param errbuf      buffer to which description is written
  86:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * @param errbuf_size the size in bytes of errbuf
  87:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * @return 0 on success, a negative value if a description for errnum
  88:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * cannot be found
  89:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  */
  90:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** int av_strerror(int errnum, char *errbuf, size_t errbuf_size);
  91:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** 
  92:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** /**
  93:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * Fill the provided buffer with a string containing an error string
  94:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * corresponding to the AVERROR code errnum.
  95:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  *
  96:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * @param errbuf         a buffer
  97:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * @param errbuf_size    size in bytes of errbuf
  98:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * @param errnum         error code to describe
  99:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * @return the buffer in input, filled with the error description
 100:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  * @see av_strerror()
 101:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****  */
 102:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** static inline char *av_make_error_string(char *errbuf, size_t errbuf_size, int errnum)
 15286              		.loc 225 102 0
 15287              		.save	{r4, r7, lr}
 15288 0284 90B5     		push	{r4, r7, lr}
 15289              	.LCFI42:
 15290              		.pad #20
 15291 0286 85B0     		sub	sp, sp, #20
 15292              	.LCFI43:
 15293              		.setfp r7, sp, #0
 15294 0288 00AF     		add	r7, sp, #0
 15295              	.LCFI44:
 15296 028a F860     		str	r0, [r7, #12]
 15297 028c B960     		str	r1, [r7, #8]
 15298 028e 7A60     		str	r2, [r7, #4]
 103:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** {
 104:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****     av_strerror(errnum, errbuf, errbuf_size);
 15299              		.loc 225 104 0
 15300 0290 7B68     		ldr	r3, [r7, #4]
 15301 0292 FA68     		ldr	r2, [r7, #12]
 15302 0294 BC68     		ldr	r4, [r7, #8]
 15303 0296 181C     		mov	r0, r3
 15304 0298 111C     		mov	r1, r2
 15305 029a 221C     		mov	r2, r4
 15306 029c FFF7FEFF 		bl	av_strerror
 105:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h ****     return errbuf;
 15307              		.loc 225 105 0
 15308 02a0 FB68     		ldr	r3, [r7, #12]
 106:/home/romar/workspace/libs/ffmpeg-2.4-arm/include/libavutil/error.h **** }
 15309              		.loc 225 106 0
 15310 02a2 181C     		mov	r0, r3
 15311 02a4 BD46     		mov	sp, r7
 15312 02a6 05B0     		add	sp, sp, #20
 15313              		@ sp needed for prologue
 15314 02a8 90BD     		pop	{r4, r7, pc}
 15315              	.LFE973:
 15316              		.fnend
 15318              		.section	.rodata
 15319              		.align	2
 15320              	.LC3:
 15321 0000 46665069 		.ascii	"FfPipeline::WriteFrame_v242\000"
 15321      70656C69 
 15321      6E653A3A 
 15321      57726974 
 15321      65467261 
 15322              		.align	2
 15323              	.LC5:
 15324 001c 5741524E 		.ascii	"WARNING: PTS:DTS < PRId64 invalid, clipping\012\000"
 15324      494E473A 
 15324      20505453 
 15324      3A445453 
 15324      203C2050 
 15325 0049 000000   		.align	2
 15326              	.LC9:
 15327 004c 4552524F 		.ascii	"ERROR: Error executing av_interleaved_write_frame()"
 15327      523A2045 
 15327      72726F72 
 15327      20657865 
 15327      63757469 
 15328 007f 2E2E2E45 		.ascii	"...Error code: %d. Error: '%s'.\012\000"
 15328      72726F72 
 15328      20636F64 
 15328      653A2025 
 15328      642E2045 
 15329              		.text
 15330 02aa C046     		.align	2
 15331              		.global	_ZN10FfPipeline15WriteFrame_v242EP15AVFormatContextP8AVStreamP8AVPacketP24AVBitStreamFilte
 15332              		.code	16
 15333              		.thumb_func
 15335              	_ZN10FfPipeline15WriteFrame_v242EP15AVFormatContextP8AVStreamP8AVPacketP24AVBitStreamFilterContext:
 15336              		.fnstart
 15337              	.LFB1000:
 15338              		.loc 1 126 0
 15339              		.save	{r4, r5, r6, r7, lr}
 15340 02ac F0B5     		push	{r4, r5, r6, r7, lr}
 15341              	.LCFI45:
 15342              		.pad #132
 15343 02ae A1B0     		sub	sp, sp, #132
 15344              	.LCFI46:
 15345              		.setfp r7, sp, #0
 15346 02b0 00AF     		add	r7, sp, #0
 15347              	.LCFI47:
 15348 02b2 F864     		str	r0, [r7, #76]
 15349 02b4 B964     		str	r1, [r7, #72]
 15350 02b6 7A64     		str	r2, [r7, #68]
 15351 02b8 3B64     		str	r3, [r7, #64]
 15352              	.LBB2:
 15353              		.loc 1 128 0
 15354 02ba 7F4B     		ldr	r3, .L62
 15355 02bc FB66     		str	r3, [r7, #108]
 15356              		.loc 1 130 0
 15357 02be 7B6C     		ldr	r3, [r7, #68]
 15358 02c0 9B68     		ldr	r3, [r3, #8]
 15359 02c2 7B67     		str	r3, [r7, #116]
 15360              		.loc 1 132 0
 15361 02c4 7B6F     		ldr	r3, [r7, #116]
 15362 02c6 9B68     		ldr	r3, [r3, #8]
 15363 02c8 012B     		cmp	r3, #1
 15364 02ca 04D0     		beq	.L45
 15365 02cc 7B6F     		ldr	r3, [r7, #116]
 15366 02ce 9B68     		ldr	r3, [r3, #8]
 15367 02d0 002B     		cmp	r3, #0
 15368 02d2 00D0     		beq	.LCB484
 15369 02d4 AAE0     		b	.L46	@long jump
 15370              	.LCB484:
 15371              	.L45:
 15372 02d6 3B6C     		ldr	r3, [r7, #64]
 15373 02d8 1969     		ldr	r1, [r3, #16]
 15374 02da 5A69     		ldr	r2, [r3, #20]
 15375 02dc B960     		str	r1, [r7, #8]
 15376 02de FA60     		str	r2, [r7, #12]
 15377 02e0 BA68     		ldr	r2, [r7, #8]
 15378 02e2 002A     		cmp	r2, #0
 15379 02e4 04D1     		bne	.L57
 15380 02e6 754B     		ldr	r3, .L62+4
 15381 02e8 FC68     		ldr	r4, [r7, #12]
 15382 02ea 9C42     		cmp	r4, r3
 15383 02ec 00D1     		bne	.LCB495
 15384 02ee 9DE0     		b	.L46	@long jump
 15385              	.LCB495:
 15386              	.L57:
 15387              	.LBB3:
 15388              		.loc 1 134 0
 15389 02f0 7B6C     		ldr	r3, [r7, #68]
 15390 02f2 D833     		add	r3, r3, #216
 15391 02f4 1D68     		ldr	r5, [r3]
 15392 02f6 5E68     		ldr	r6, [r3, #4]
 15393 02f8 BB6C     		ldr	r3, [r7, #72]
 15394 02fa 9B68     		ldr	r3, [r3, #8]
 15395 02fc DA69     		ldr	r2, [r3, #28]
 15396 02fe 8023     		mov	r3, #128
 15397 0300 9B02     		lsl	r3, r3, #10
 15398 0302 1340     		and	r3, r3, r2
 15399 0304 5A42     		neg	r2, r3
 15400 0306 5A41     		adc	r2, r2, r3
 15401 0308 0021     		mov	r1, #0
 15402 030a 131C     		mov	r3, r2
 15403 030c 0C1C     		mov	r4, r1
 15404 030e 5B19     		add	r3, r3, r5
 15405 0310 7441     		adc	r4, r4, r6
 15406 0312 BB67     		str	r3, [r7, #120]
 15407 0314 FC67     		str	r4, [r7, #124]
 15408              		.loc 1 135 0
 15409 0316 7B6C     		ldr	r3, [r7, #68]
 15410 0318 D833     		add	r3, r3, #216
 15411 031a 1968     		ldr	r1, [r3]
 15412 031c 5A68     		ldr	r2, [r3, #4]
 15413 031e 0B1C     		mov	r3, r1
 15414 0320 1343     		orr	r3, r3, r2
 15415 0322 002B     		cmp	r3, #0
 15416 0324 00D1     		bne	.LCB519
 15417 0326 81E0     		b	.L46	@long jump
 15418              	.LCB519:
 15419 0328 7B6C     		ldr	r3, [r7, #68]
 15420 032a D833     		add	r3, r3, #216
 15421 032c 1968     		ldr	r1, [r3]
 15422 032e 5A68     		ldr	r2, [r3, #4]
 15423 0330 3961     		str	r1, [r7, #16]
 15424 0332 7A61     		str	r2, [r7, #20]
 15425 0334 3A69     		ldr	r2, [r7, #16]
 15426 0336 002A     		cmp	r2, #0
 15427 0338 04D1     		bne	.L58
 15428 033a 604B     		ldr	r3, .L62+4
 15429 033c 7C69     		ldr	r4, [r7, #20]
 15430 033e 9C42     		cmp	r4, r3
 15431 0340 00D1     		bne	.LCB530
 15432 0342 73E0     		b	.L46	@long jump
 15433              	.LCB530:
 15434              	.L58:
 15435 0344 3B6C     		ldr	r3, [r7, #64]
 15436 0346 1969     		ldr	r1, [r3, #16]
 15437 0348 5A69     		ldr	r2, [r3, #20]
 15438 034a B961     		str	r1, [r7, #24]
 15439 034c FA61     		str	r2, [r7, #28]
 15440 034e FB6F     		ldr	r3, [r7, #124]
 15441 0350 FA69     		ldr	r2, [r7, #28]
 15442 0352 9342     		cmp	r3, r2
 15443 0354 07DC     		bgt	.L59
 15444 0356 FB6F     		ldr	r3, [r7, #124]
 15445 0358 FC69     		ldr	r4, [r7, #28]
 15446 035a A342     		cmp	r3, r4
 15447 035c 66D1     		bne	.L46
 15448 035e BB6F     		ldr	r3, [r7, #120]
 15449 0360 B969     		ldr	r1, [r7, #24]
 15450 0362 8B42     		cmp	r3, r1
 15451 0364 62D9     		bls	.L46
 15452              	.L59:
 15453              		.loc 1 137 0
 15454 0366 3B1C     		mov	r3, r7
 15455 0368 5F33     		add	r3, r3, #95
 15456 036a 181C     		mov	r0, r3
 15457 036c FFF7FEFF 		bl	_ZNSaIcEC1Ev
 15458 0370 3B1C     		mov	r3, r7
 15459 0372 5833     		add	r3, r3, #88
 15460 0374 524A     		ldr	r2, .L62+8
 15461 0376 3C1C     		mov	r4, r7
 15462 0378 5F34     		add	r4, r4, #95
 15463 037a 181C     		mov	r0, r3
 15464 037c 111C     		mov	r1, r2
 15465 037e 221C     		mov	r2, r4
 15466 0380 FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 15467 0384 3B1C     		mov	r3, r7
 15468 0386 5433     		add	r3, r3, #84
 15469 0388 3A1C     		mov	r2, r7
 15470 038a 5832     		add	r2, r2, #88
 15471 038c FC6E     		ldr	r4, [r7, #108]
 15472 038e 181C     		mov	r0, r3
 15473 0390 111C     		mov	r1, r2
 15474 0392 221C     		mov	r2, r4
 15475 0394 FFF7FEFF 		bl	_Z9AppendLogSsPKc
 15476 0398 3B1C     		mov	r3, r7
 15477 039a 5433     		add	r3, r3, #84
 15478 039c 181C     		mov	r0, r3
 15479 039e FFF7FEFF 		bl	_ZNSsD1Ev
 15480 03a2 3B1C     		mov	r3, r7
 15481 03a4 5833     		add	r3, r3, #88
 15482 03a6 181C     		mov	r0, r3
 15483 03a8 FFF7FEFF 		bl	_ZNSsD1Ev
 15484 03ac 3B1C     		mov	r3, r7
 15485 03ae 5F33     		add	r3, r3, #95
 15486 03b0 181C     		mov	r0, r3
 15487 03b2 FFF7FEFF 		bl	_ZNSaIcED1Ev
 15488              		.loc 1 138 0
 15489 03b6 3B6C     		ldr	r3, [r7, #64]
 15490 03b8 9968     		ldr	r1, [r3, #8]
 15491 03ba DA68     		ldr	r2, [r3, #12]
 15492 03bc 3962     		str	r1, [r7, #32]
 15493 03be 7A62     		str	r2, [r7, #36]
 15494 03c0 3B6C     		ldr	r3, [r7, #64]
 15495 03c2 1969     		ldr	r1, [r3, #16]
 15496 03c4 5A69     		ldr	r2, [r3, #20]
 15497 03c6 B962     		str	r1, [r7, #40]
 15498 03c8 FA62     		str	r2, [r7, #44]
 15499 03ca FA6A     		ldr	r2, [r7, #44]
 15500 03cc 7B6A     		ldr	r3, [r7, #36]
 15501 03ce 9A42     		cmp	r2, r3
 15502 03d0 27DC     		bgt	.L50
 15503 03d2 FC6A     		ldr	r4, [r7, #44]
 15504 03d4 796A     		ldr	r1, [r7, #36]
 15505 03d6 8C42     		cmp	r4, r1
 15506 03d8 03D1     		bne	.L60
 15507 03da BA6A     		ldr	r2, [r7, #40]
 15508 03dc 3B6A     		ldr	r3, [r7, #32]
 15509 03de 9A42     		cmp	r2, r3
 15510 03e0 1FD8     		bhi	.L50
 15511              	.L60:
 15512              		.loc 1 139 0
 15513 03e2 3B6C     		ldr	r3, [r7, #64]
 15514 03e4 9968     		ldr	r1, [r3, #8]
 15515 03e6 DA68     		ldr	r2, [r3, #12]
 15516 03e8 B963     		str	r1, [r7, #56]
 15517 03ea FA63     		str	r2, [r7, #60]
 15518 03ec FB6F     		ldr	r3, [r7, #124]
 15519 03ee FA6B     		ldr	r2, [r7, #60]
 15520 03f0 9342     		cmp	r3, r2
 15521 03f2 07DB     		blt	.L61
 15522 03f4 FB6F     		ldr	r3, [r7, #124]
 15523 03f6 FC6B     		ldr	r4, [r7, #60]
 15524 03f8 A342     		cmp	r3, r4
 15525 03fa 09D1     		bne	.L52
 15526 03fc BB6F     		ldr	r3, [r7, #120]
 15527 03fe B96B     		ldr	r1, [r7, #56]
 15528 0400 8B42     		cmp	r3, r1
 15529 0402 05D2     		bcs	.L52
 15530              	.L61:
 15531 0404 3B6C     		ldr	r3, [r7, #64]
 15532 0406 9968     		ldr	r1, [r3, #8]
 15533 0408 DA68     		ldr	r2, [r3, #12]
 15534 040a 3963     		str	r1, [r7, #48]
 15535 040c 7A63     		str	r2, [r7, #52]
 15536 040e 03E0     		b	.L54
 15537              	.L52:
 15538 0410 BA6F     		ldr	r2, [r7, #120]
 15539 0412 FB6F     		ldr	r3, [r7, #124]
 15540 0414 3A63     		str	r2, [r7, #48]
 15541 0416 7B63     		str	r3, [r7, #52]
 15542              	.L54:
 15543 0418 3B6C     		ldr	r3, [r7, #64]
 15544 041a 396B     		ldr	r1, [r7, #48]
 15545 041c 7A6B     		ldr	r2, [r7, #52]
 15546 041e 9960     		str	r1, [r3, #8]
 15547 0420 DA60     		str	r2, [r3, #12]
 15548              	.L50:
 15549              		.loc 1 140 0
 15550 0422 3A6C     		ldr	r2, [r7, #64]
 15551 0424 BB6F     		ldr	r3, [r7, #120]
 15552 0426 FC6F     		ldr	r4, [r7, #124]
 15553 0428 1361     		str	r3, [r2, #16]
 15554 042a 5461     		str	r4, [r2, #20]
 15555              	.L46:
 15556              	.LBE3:
 15557              		.loc 1 144 0
 15558 042c BB6C     		ldr	r3, [r7, #72]
 15559 042e 3A6C     		ldr	r2, [r7, #64]
 15560 0430 181C     		mov	r0, r3
 15561 0432 111C     		mov	r1, r2
 15562 0434 FFF7FEFF 		bl	av_interleaved_write_frame
 15563 0438 031C     		mov	r3, r0
 15564 043a 3B67     		str	r3, [r7, #112]
 15565              		.loc 1 146 0
 15566 043c 3B6F     		ldr	r3, [r7, #112]
 15567 043e 002B     		cmp	r3, #0
 15568 0440 37DA     		bge	.L56
 15569              		.loc 1 148 0
 15570 0442 204B     		ldr	r3, .L62+12
 15571 0444 3A6F     		ldr	r2, [r7, #112]
 15572 0446 181C     		mov	r0, r3
 15573 0448 4021     		mov	r1, #64
 15574 044a FFF71BFF 		bl	av_make_error_string
 15575 044e 051C     		mov	r5, r0
 15576 0450 1D4B     		ldr	r3, .L62+16
 15577 0452 1E4A     		ldr	r2, .L62+20
 15578 0454 3C6F     		ldr	r4, [r7, #112]
 15579 0456 181C     		mov	r0, r3
 15580 0458 111C     		mov	r1, r2
 15581 045a 221C     		mov	r2, r4
 15582 045c 2B1C     		mov	r3, r5
 15583 045e FFF7FEFF 		bl	sprintf
 15584              		.loc 1 149 0
 15585 0462 3B1C     		mov	r3, r7
 15586 0464 6B33     		add	r3, r3, #107
 15587 0466 181C     		mov	r0, r3
 15588 0468 FFF7FEFF 		bl	_ZNSaIcEC1Ev
 15589 046c 3B1C     		mov	r3, r7
 15590 046e 6433     		add	r3, r3, #100
 15591 0470 154A     		ldr	r2, .L62+16
 15592 0472 3C1C     		mov	r4, r7
 15593 0474 6B34     		add	r4, r4, #107
 15594 0476 181C     		mov	r0, r3
 15595 0478 111C     		mov	r1, r2
 15596 047a 221C     		mov	r2, r4
 15597 047c FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 15598 0480 3B1C     		mov	r3, r7
 15599 0482 6033     		add	r3, r3, #96
 15600 0484 3A1C     		mov	r2, r7
 15601 0486 6432     		add	r2, r2, #100
 15602 0488 FC6E     		ldr	r4, [r7, #108]
 15603 048a 181C     		mov	r0, r3
 15604 048c 111C     		mov	r1, r2
 15605 048e 221C     		mov	r2, r4
 15606 0490 FFF7FEFF 		bl	_Z9AppendLogSsPKc
 15607 0494 3B1C     		mov	r3, r7
 15608 0496 6033     		add	r3, r3, #96
 15609 0498 181C     		mov	r0, r3
 15610 049a FFF7FEFF 		bl	_ZNSsD1Ev
 15611 049e 3B1C     		mov	r3, r7
 15612 04a0 6433     		add	r3, r3, #100
 15613 04a2 181C     		mov	r0, r3
 15614 04a4 FFF7FEFF 		bl	_ZNSsD1Ev
 15615 04a8 3B1C     		mov	r3, r7
 15616 04aa 6B33     		add	r3, r3, #107
 15617 04ac 181C     		mov	r0, r3
 15618 04ae FFF7FEFF 		bl	_ZNSaIcED1Ev
 15619              	.L56:
 15620              	.LBE2:
 15621              		.loc 1 151 0
 15622 04b2 BD46     		mov	sp, r7
 15623 04b4 21B0     		add	sp, sp, #132
 15624              		@ sp needed for prologue
 15625 04b6 F0BD     		pop	{r4, r5, r6, r7, pc}
 15626              	.L63:
 15627              		.align	2
 15628              	.L62:
 15629 04b8 00000000 		.word	.LC3
 15630 04bc 00000080 		.word	-2147483648
 15631 04c0 1C000000 		.word	.LC5
 15632 04c4 00000000 		.word	_ZL12g_szErrorBuf
 15633 04c8 00000000 		.word	str
 15634 04cc 4C000000 		.word	.LC9
 15635              	.LFE1000:
 15636              		.fnend
 15638              		.section	.rodata
 15639              		.align	2
 15640              	.LC11:
 15641 00a0 46665069 		.ascii	"FfPipeline::ThInitiateRecording\000"
 15641      70656C69 
 15641      6E653A3A 
 15641      5468496E 
 15641      69746961 
 15642              		.align	2
 15643              	.LC14:
 15644 00c0 44454255 		.ascii	"DEBUG: Pipeline slot '%d'. Try to starting thread w"
 15644      473A2050 
 15644      6970656C 
 15644      696E6520 
 15644      736C6F74 
 15645 00f3 69746820 		.ascii	"ith stopping...\012\000"
 15645      73746F70 
 15645      70696E67 
 15645      2E2E2E0A 
 15645      00
 15646              		.align	2
 15647              	.LC17:
 15648 0104 44454255 		.ascii	"DEBUG: Pipeline slot '%d'. Starting thread ended!\012"
 15648      473A2050 
 15648      6970656C 
 15648      696E6520 
 15648      736C6F74 
 15649 0136 00       		.ascii	"\000"
 15650              		.text
 15651              		.align	2
 15652              		.global	_ZN10FfPipeline19ThInitiateRecordingEv
 15653              		.code	16
 15654              		.thumb_func
 15656              	_ZN10FfPipeline19ThInitiateRecordingEv:
 15657              		.fnstart
 15658              	.LFB996:
 15659              		.loc 1 89 0
 15660              		.save	{r4, r7, lr}
 15661 04d0 90B5     		push	{r4, r7, lr}
 15662              	.LCFI48:
 15663              		.pad #44
 15664 04d2 8BB0     		sub	sp, sp, #44
 15665              	.LCFI49:
 15666              		.setfp r7, sp, #0
 15667 04d4 00AF     		add	r7, sp, #0
 15668              	.LCFI50:
 15669 04d6 7860     		str	r0, [r7, #4]
 15670              	.LBB4:
 15671              		.loc 1 91 0
 15672 04d8 3B4B     		ldr	r3, .L66
 15673 04da 7B62     		str	r3, [r7, #36]
 15674              		.loc 1 94 0
 15675 04dc 7B68     		ldr	r3, [r7, #4]
 15676 04de 1B79     		ldrb	r3, [r3, #4]
 15677 04e0 1C1C     		mov	r4, r3
 15678 04e2 3A4B     		ldr	r3, .L66+4
 15679 04e4 3A4A     		ldr	r2, .L66+8
 15680 04e6 181C     		mov	r0, r3
 15681 04e8 111C     		mov	r1, r2
 15682 04ea 221C     		mov	r2, r4
 15683 04ec FFF7FEFF 		bl	sprintf
 15684              		.loc 1 95 0
 15685 04f0 3B1C     		mov	r3, r7
 15686 04f2 1733     		add	r3, r3, #23
 15687 04f4 181C     		mov	r0, r3
 15688 04f6 FFF7FEFF 		bl	_ZNSaIcEC1Ev
 15689 04fa 3B1C     		mov	r3, r7
 15690 04fc 1033     		add	r3, r3, #16
 15691 04fe 334A     		ldr	r2, .L66+4
 15692 0500 3C1C     		mov	r4, r7
 15693 0502 1734     		add	r4, r4, #23
 15694 0504 181C     		mov	r0, r3
 15695 0506 111C     		mov	r1, r2
 15696 0508 221C     		mov	r2, r4
 15697 050a FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 15698 050e 3B1C     		mov	r3, r7
 15699 0510 0C33     		add	r3, r3, #12
 15700 0512 3A1C     		mov	r2, r7
 15701 0514 1032     		add	r2, r2, #16
 15702 0516 7C6A     		ldr	r4, [r7, #36]
 15703 0518 181C     		mov	r0, r3
 15704 051a 111C     		mov	r1, r2
 15705 051c 221C     		mov	r2, r4
 15706 051e FFF7FEFF 		bl	_Z9AppendLogSsPKc
 15707 0522 3B1C     		mov	r3, r7
 15708 0524 0C33     		add	r3, r3, #12
 15709 0526 181C     		mov	r0, r3
 15710 0528 FFF7FEFF 		bl	_ZNSsD1Ev
 15711 052c 3B1C     		mov	r3, r7
 15712 052e 1033     		add	r3, r3, #16
 15713 0530 181C     		mov	r0, r3
 15714 0532 FFF7FEFF 		bl	_ZNSsD1Ev
 15715 0536 3B1C     		mov	r3, r7
 15716 0538 1733     		add	r3, r3, #23
 15717 053a 181C     		mov	r0, r3
 15718 053c FFF7FEFF 		bl	_ZNSaIcED1Ev
 15719              		.loc 1 97 0
 15720 0540 3B1C     		mov	r3, r7
 15721 0542 0833     		add	r3, r3, #8
 15722 0544 234A     		ldr	r2, .L66+12
 15723 0546 7C68     		ldr	r4, [r7, #4]
 15724 0548 181C     		mov	r0, r3
 15725 054a 0021     		mov	r1, #0
 15726 054c 231C     		mov	r3, r4
 15727 054e FFF7FEFF 		bl	pthread_create
 15728              		.loc 1 99 0
 15729 0552 BB68     		ldr	r3, [r7, #8]
 15730 0554 181C     		mov	r0, r3
 15731 0556 FFF7FEFF 		bl	pthread_detach
 15732              		.loc 1 101 0
 15733 055a 7B68     		ldr	r3, [r7, #4]
 15734 055c 1B79     		ldrb	r3, [r3, #4]
 15735 055e 1C1C     		mov	r4, r3
 15736 0560 1A4B     		ldr	r3, .L66+4
 15737 0562 1D4A     		ldr	r2, .L66+16
 15738 0564 181C     		mov	r0, r3
 15739 0566 111C     		mov	r1, r2
 15740 0568 221C     		mov	r2, r4
 15741 056a FFF7FEFF 		bl	sprintf
 15742              		.loc 1 102 0
 15743 056e 3B1C     		mov	r3, r7
 15744 0570 2333     		add	r3, r3, #35
 15745 0572 181C     		mov	r0, r3
 15746 0574 FFF7FEFF 		bl	_ZNSaIcEC1Ev
 15747 0578 3B1C     		mov	r3, r7
 15748 057a 1C33     		add	r3, r3, #28
 15749 057c 134A     		ldr	r2, .L66+4
 15750 057e 3C1C     		mov	r4, r7
 15751 0580 2334     		add	r4, r4, #35
 15752 0582 181C     		mov	r0, r3
 15753 0584 111C     		mov	r1, r2
 15754 0586 221C     		mov	r2, r4
 15755 0588 FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 15756 058c 3B1C     		mov	r3, r7
 15757 058e 1833     		add	r3, r3, #24
 15758 0590 3A1C     		mov	r2, r7
 15759 0592 1C32     		add	r2, r2, #28
 15760 0594 7C6A     		ldr	r4, [r7, #36]
 15761 0596 181C     		mov	r0, r3
 15762 0598 111C     		mov	r1, r2
 15763 059a 221C     		mov	r2, r4
 15764 059c FFF7FEFF 		bl	_Z9AppendLogSsPKc
 15765 05a0 3B1C     		mov	r3, r7
 15766 05a2 1833     		add	r3, r3, #24
 15767 05a4 181C     		mov	r0, r3
 15768 05a6 FFF7FEFF 		bl	_ZNSsD1Ev
 15769 05aa 3B1C     		mov	r3, r7
 15770 05ac 1C33     		add	r3, r3, #28
 15771 05ae 181C     		mov	r0, r3
 15772 05b0 FFF7FEFF 		bl	_ZNSsD1Ev
 15773 05b4 3B1C     		mov	r3, r7
 15774 05b6 2333     		add	r3, r3, #35
 15775 05b8 181C     		mov	r0, r3
 15776 05ba FFF7FEFF 		bl	_ZNSaIcED1Ev
 15777              		.loc 1 104 0
 15778 05be 0023     		mov	r3, #0
 15779              	.LBE4:
 15780              		.loc 1 105 0
 15781 05c0 181C     		mov	r0, r3
 15782 05c2 BD46     		mov	sp, r7
 15783 05c4 0BB0     		add	sp, sp, #44
 15784              		@ sp needed for prologue
 15785 05c6 90BD     		pop	{r4, r7, pc}
 15786              	.L67:
 15787              		.align	2
 15788              	.L66:
 15789 05c8 A0000000 		.word	.LC11
 15790 05cc 00000000 		.word	str
 15791 05d0 C0000000 		.word	.LC14
 15792 05d4 00000000 		.word	_ZN10FfPipeline11ThRecordingEPv
 15793 05d8 04010000 		.word	.LC17
 15794              	.LFE996:
 15795              		.fnend
 15797              		.align	2
 15798              		.global	_ZN10FfPipeline5StartEv
 15799              		.code	16
 15800              		.thumb_func
 15802              	_ZN10FfPipeline5StartEv:
 15803              		.fnstart
 15804              	.LFB999:
 15805              		.loc 1 121 0
 15806              		.save	{r7, lr}
 15807 05dc 80B5     		push	{r7, lr}
 15808              	.LCFI51:
 15809              		.pad #8
 15810 05de 82B0     		sub	sp, sp, #8
 15811              	.LCFI52:
 15812              		.setfp r7, sp, #0
 15813 05e0 00AF     		add	r7, sp, #0
 15814              	.LCFI53:
 15815 05e2 7860     		str	r0, [r7, #4]
 15816              		.loc 1 123 0
 15817 05e4 7B68     		ldr	r3, [r7, #4]
 15818 05e6 181C     		mov	r0, r3
 15819 05e8 FFF7FEFF 		bl	_ZN10FfPipeline19ThInitiateRecordingEv
 15820 05ec 031C     		mov	r3, r0
 15821 05ee 9C46     		mov	ip, r3
 15822 05f0 6346     		mov	r3, ip
 15823              		.loc 1 124 0
 15824 05f2 181C     		mov	r0, r3
 15825 05f4 BD46     		mov	sp, r7
 15826 05f6 02B0     		add	sp, sp, #8
 15827              		@ sp needed for prologue
 15828 05f8 80BD     		pop	{r7, pc}
 15829              	.LFE999:
 15830              		.fnend
 15832 05fa C046     		.align	2
 15833              		.global	_ZN10FfPipeline10IsNeedStopEv
 15834              		.code	16
 15835              		.thumb_func
 15837              	_ZN10FfPipeline10IsNeedStopEv:
 15838              		.fnstart
 15839              	.LFB995:
 15840              		.loc 1 77 0
 15841              		.save	{r7, lr}
 15842 05fc 80B5     		push	{r7, lr}
 15843              	.LCFI54:
 15844              		.pad #40
 15845 05fe 8AB0     		sub	sp, sp, #40
 15846              	.LCFI55:
 15847              		.setfp r7, sp, #0
 15848 0600 00AF     		add	r7, sp, #0
 15849              	.LCFI56:
 15850 0602 7860     		str	r0, [r7, #4]
 15851              	.LBB5:
 15852              		.loc 1 79 0
 15853 0604 3B1C     		mov	r3, r7
 15854 0606 0C33     		add	r3, r3, #12
 15855 0608 3B60     		str	r3, [r7]
 15856 060a 0023     		mov	r3, #0
 15857 060c 3A68     		ldr	r2, [r7]
 15858 060e 1360     		str	r3, [r2]
 15859 0610 3B68     		ldr	r3, [r7]
 15860 0612 0433     		add	r3, r3, #4
 15861 0614 3B60     		str	r3, [r7]
 15862 0616 0023     		mov	r3, #0
 15863 0618 3A68     		ldr	r2, [r7]
 15864 061a 1360     		str	r3, [r2]
 15865 061c 3B68     		ldr	r3, [r7]
 15866 061e 0433     		add	r3, r3, #4
 15867 0620 3B60     		str	r3, [r7]
 15868 0622 0023     		mov	r3, #0
 15869 0624 3A68     		ldr	r2, [r7]
 15870 0626 1360     		str	r3, [r2]
 15871 0628 3B68     		ldr	r3, [r7]
 15872 062a 0433     		add	r3, r3, #4
 15873 062c 3B60     		str	r3, [r7]
 15874 062e 0023     		mov	r3, #0
 15875 0630 3A68     		ldr	r2, [r7]
 15876 0632 1360     		str	r3, [r2]
 15877 0634 3B68     		ldr	r3, [r7]
 15878 0636 0433     		add	r3, r3, #4
 15879 0638 3B60     		str	r3, [r7]
 15880 063a 0023     		mov	r3, #0
 15881 063c 3A68     		ldr	r2, [r7]
 15882 063e 1360     		str	r3, [r2]
 15883 0640 3B68     		ldr	r3, [r7]
 15884 0642 0433     		add	r3, r3, #4
 15885 0644 3B60     		str	r3, [r7]
 15886 0646 0023     		mov	r3, #0
 15887 0648 3A68     		ldr	r2, [r7]
 15888 064a 1360     		str	r3, [r2]
 15889 064c 3B68     		ldr	r3, [r7]
 15890 064e 0433     		add	r3, r3, #4
 15891              		.loc 1 82 0
 15892 0650 3B1C     		mov	r3, r7
 15893 0652 0C33     		add	r3, r3, #12
 15894 0654 181C     		mov	r0, r3
 15895 0656 FFF7FEFF 		bl	pthread_mutex_lock
 15896              		.loc 1 83 0
 15897 065a 3A1C     		mov	r2, r7
 15898 065c 2732     		add	r2, r2, #39
 15899 065e 7B68     		ldr	r3, [r7, #4]
 15900 0660 1B7C     		ldrb	r3, [r3, #16]
 15901 0662 1370     		strb	r3, [r2]
 15902              		.loc 1 84 0
 15903 0664 3B1C     		mov	r3, r7
 15904 0666 0C33     		add	r3, r3, #12
 15905 0668 181C     		mov	r0, r3
 15906 066a FFF7FEFF 		bl	pthread_mutex_unlock
 15907              		.loc 1 86 0
 15908 066e 3B1C     		mov	r3, r7
 15909 0670 2733     		add	r3, r3, #39
 15910 0672 1B78     		ldrb	r3, [r3]
 15911              	.LBE5:
 15912              		.loc 1 87 0
 15913 0674 181C     		mov	r0, r3
 15914 0676 BD46     		mov	sp, r7
 15915 0678 0AB0     		add	sp, sp, #40
 15916              		@ sp needed for prologue
 15917 067a 80BD     		pop	{r7, pc}
 15918              	.LFE995:
 15919              		.fnend
 15921              		.align	2
 15922              		.global	_ZN10FfPipeline11SetNeedStopEv
 15923              		.code	16
 15924              		.thumb_func
 15926              	_ZN10FfPipeline11SetNeedStopEv:
 15927              		.fnstart
 15928              	.LFB988:
 15929              		.loc 1 31 0
 15930              		.save	{r7, lr}
 15931 067c 80B5     		push	{r7, lr}
 15932              	.LCFI57:
 15933              		.pad #32
 15934 067e 88B0     		sub	sp, sp, #32
 15935              	.LCFI58:
 15936              		.setfp r7, sp, #0
 15937 0680 00AF     		add	r7, sp, #0
 15938              	.LCFI59:
 15939 0682 7860     		str	r0, [r7, #4]
 15940              	.LBB6:
 15941              		.loc 1 33 0
 15942 0684 3B1C     		mov	r3, r7
 15943 0686 0833     		add	r3, r3, #8
 15944 0688 3B60     		str	r3, [r7]
 15945 068a 0023     		mov	r3, #0
 15946 068c 3A68     		ldr	r2, [r7]
 15947 068e 1360     		str	r3, [r2]
 15948 0690 3B68     		ldr	r3, [r7]
 15949 0692 0433     		add	r3, r3, #4
 15950 0694 3B60     		str	r3, [r7]
 15951 0696 0023     		mov	r3, #0
 15952 0698 3A68     		ldr	r2, [r7]
 15953 069a 1360     		str	r3, [r2]
 15954 069c 3B68     		ldr	r3, [r7]
 15955 069e 0433     		add	r3, r3, #4
 15956 06a0 3B60     		str	r3, [r7]
 15957 06a2 0023     		mov	r3, #0
 15958 06a4 3A68     		ldr	r2, [r7]
 15959 06a6 1360     		str	r3, [r2]
 15960 06a8 3B68     		ldr	r3, [r7]
 15961 06aa 0433     		add	r3, r3, #4
 15962 06ac 3B60     		str	r3, [r7]
 15963 06ae 0023     		mov	r3, #0
 15964 06b0 3A68     		ldr	r2, [r7]
 15965 06b2 1360     		str	r3, [r2]
 15966 06b4 3B68     		ldr	r3, [r7]
 15967 06b6 0433     		add	r3, r3, #4
 15968 06b8 3B60     		str	r3, [r7]
 15969 06ba 0023     		mov	r3, #0
 15970 06bc 3A68     		ldr	r2, [r7]
 15971 06be 1360     		str	r3, [r2]
 15972 06c0 3B68     		ldr	r3, [r7]
 15973 06c2 0433     		add	r3, r3, #4
 15974 06c4 3B60     		str	r3, [r7]
 15975 06c6 0023     		mov	r3, #0
 15976 06c8 3A68     		ldr	r2, [r7]
 15977 06ca 1360     		str	r3, [r2]
 15978 06cc 3B68     		ldr	r3, [r7]
 15979 06ce 0433     		add	r3, r3, #4
 15980              		.loc 1 35 0
 15981 06d0 3B1C     		mov	r3, r7
 15982 06d2 0833     		add	r3, r3, #8
 15983 06d4 181C     		mov	r0, r3
 15984 06d6 FFF7FEFF 		bl	pthread_mutex_lock
 15985              		.loc 1 36 0
 15986 06da 7A68     		ldr	r2, [r7, #4]
 15987 06dc 0123     		mov	r3, #1
 15988 06de 1374     		strb	r3, [r2, #16]
 15989              		.loc 1 37 0
 15990 06e0 3B1C     		mov	r3, r7
 15991 06e2 0833     		add	r3, r3, #8
 15992 06e4 181C     		mov	r0, r3
 15993 06e6 FFF7FEFF 		bl	pthread_mutex_unlock
 15994              	.LBE6:
 15995              		.loc 1 38 0
 15996 06ea BD46     		mov	sp, r7
 15997 06ec 08B0     		add	sp, sp, #32
 15998              		@ sp needed for prologue
 15999 06ee 80BD     		pop	{r7, pc}
 16000              	.LFE988:
 16001              		.fnend
 16003              		.section	.rodata
 16004 0137 00       		.align	2
 16005              	.LC19:
 16006 0138 46665069 		.ascii	"FfPipeline::SetPartnerToStop\000"
 16006      70656C69 
 16006      6E653A3A 
 16006      53657450 
 16006      6172746E 
 16007 0155 000000   		.align	2
 16008              	.LC22:
 16009 0158 44454255 		.ascii	"DEBUG: Slot '%d' was marked for stopping by SetNeed"
 16009      473A2053 
 16009      6C6F7420 
 16009      27256427 
 16009      20776173 
 16010 018b 53746F70 		.ascii	"StopFlag().\012\000"
 16010      466C6167 
 16010      28292E0A 
 16010      00
 16011              		.text
 16012              		.align	2
 16013              		.global	_ZN10FfPipeline16SetPartnerToStopEv
 16014              		.code	16
 16015              		.thumb_func
 16017              	_ZN10FfPipeline16SetPartnerToStopEv:
 16018              		.fnstart
 16019              	.LFB991:
 16020              		.loc 1 50 0
 16021              		.save	{r4, r7, lr}
 16022 06f0 90B5     		push	{r4, r7, lr}
 16023              	.LCFI60:
 16024              		.pad #36
 16025 06f2 89B0     		sub	sp, sp, #36
 16026              	.LCFI61:
 16027              		.setfp r7, sp, #0
 16028 06f4 00AF     		add	r7, sp, #0
 16029              	.LCFI62:
 16030 06f6 7860     		str	r0, [r7, #4]
 16031              	.LBB7:
 16032              		.loc 1 52 0
 16033 06f8 1F4B     		ldr	r3, .L76
 16034 06fa BB61     		str	r3, [r7, #24]
 16035              		.loc 1 53 0
 16036 06fc 7B68     		ldr	r3, [r7, #4]
 16037 06fe 1B68     		ldr	r3, [r3]
 16038 0700 FB61     		str	r3, [r7, #28]
 16039              		.loc 1 55 0
 16040 0702 FB69     		ldr	r3, [r7, #28]
 16041 0704 181C     		mov	r0, r3
 16042 0706 FFF7FEFF 		bl	_ZN10FfPipeline11SetNeedStopEv
 16043              		.loc 1 57 0
 16044 070a FB69     		ldr	r3, [r7, #28]
 16045 070c 1B79     		ldrb	r3, [r3, #4]
 16046 070e 1C1C     		mov	r4, r3
 16047 0710 1A4B     		ldr	r3, .L76+4
 16048 0712 1B4A     		ldr	r2, .L76+8
 16049 0714 181C     		mov	r0, r3
 16050 0716 111C     		mov	r1, r2
 16051 0718 221C     		mov	r2, r4
 16052 071a FFF7FEFF 		bl	sprintf
 16053              		.loc 1 58 0
 16054 071e 3B1C     		mov	r3, r7
 16055 0720 1733     		add	r3, r3, #23
 16056 0722 181C     		mov	r0, r3
 16057 0724 FFF7FEFF 		bl	_ZNSaIcEC1Ev
 16058 0728 3B1C     		mov	r3, r7
 16059 072a 1033     		add	r3, r3, #16
 16060 072c 134A     		ldr	r2, .L76+4
 16061 072e 3C1C     		mov	r4, r7
 16062 0730 1734     		add	r4, r4, #23
 16063 0732 181C     		mov	r0, r3
 16064 0734 111C     		mov	r1, r2
 16065 0736 221C     		mov	r2, r4
 16066 0738 FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 16067 073c 3B1C     		mov	r3, r7
 16068 073e 0C33     		add	r3, r3, #12
 16069 0740 3A1C     		mov	r2, r7
 16070 0742 1032     		add	r2, r2, #16
 16071 0744 BC69     		ldr	r4, [r7, #24]
 16072 0746 181C     		mov	r0, r3
 16073 0748 111C     		mov	r1, r2
 16074 074a 221C     		mov	r2, r4
 16075 074c FFF7FEFF 		bl	_Z9AppendLogSsPKc
 16076 0750 3B1C     		mov	r3, r7
 16077 0752 0C33     		add	r3, r3, #12
 16078 0754 181C     		mov	r0, r3
 16079 0756 FFF7FEFF 		bl	_ZNSsD1Ev
 16080 075a 3B1C     		mov	r3, r7
 16081 075c 1033     		add	r3, r3, #16
 16082 075e 181C     		mov	r0, r3
 16083 0760 FFF7FEFF 		bl	_ZNSsD1Ev
 16084 0764 3B1C     		mov	r3, r7
 16085 0766 1733     		add	r3, r3, #23
 16086 0768 181C     		mov	r0, r3
 16087 076a FFF7FEFF 		bl	_ZNSaIcED1Ev
 16088              		.loc 1 59 0
 16089 076e 0023     		mov	r3, #0
 16090              	.LBE7:
 16091              		.loc 1 60 0
 16092 0770 181C     		mov	r0, r3
 16093 0772 BD46     		mov	sp, r7
 16094 0774 09B0     		add	sp, sp, #36
 16095              		@ sp needed for prologue
 16096 0776 90BD     		pop	{r4, r7, pc}
 16097              	.L77:
 16098              		.align	2
 16099              	.L76:
 16100 0778 38010000 		.word	.LC19
 16101 077c 00000000 		.word	str
 16102 0780 58010000 		.word	.LC22
 16103              	.LFE991:
 16104              		.fnend
 16106              		.align	2
 16107              		.global	_ZN10FfPipeline13ClearNeedStopEv
 16108              		.code	16
 16109              		.thumb_func
 16111              	_ZN10FfPipeline13ClearNeedStopEv:
 16112              		.fnstart
 16113              	.LFB987:
 16114              		.loc 1 22 0
 16115              		.save	{r7, lr}
 16116 0784 80B5     		push	{r7, lr}
 16117              	.LCFI63:
 16118              		.pad #32
 16119 0786 88B0     		sub	sp, sp, #32
 16120              	.LCFI64:
 16121              		.setfp r7, sp, #0
 16122 0788 00AF     		add	r7, sp, #0
 16123              	.LCFI65:
 16124 078a 7860     		str	r0, [r7, #4]
 16125              	.LBB8:
 16126              		.loc 1 24 0
 16127 078c 3B1C     		mov	r3, r7
 16128 078e 0833     		add	r3, r3, #8
 16129 0790 3B60     		str	r3, [r7]
 16130 0792 0023     		mov	r3, #0
 16131 0794 3A68     		ldr	r2, [r7]
 16132 0796 1360     		str	r3, [r2]
 16133 0798 3B68     		ldr	r3, [r7]
 16134 079a 0433     		add	r3, r3, #4
 16135 079c 3B60     		str	r3, [r7]
 16136 079e 0023     		mov	r3, #0
 16137 07a0 3A68     		ldr	r2, [r7]
 16138 07a2 1360     		str	r3, [r2]
 16139 07a4 3B68     		ldr	r3, [r7]
 16140 07a6 0433     		add	r3, r3, #4
 16141 07a8 3B60     		str	r3, [r7]
 16142 07aa 0023     		mov	r3, #0
 16143 07ac 3A68     		ldr	r2, [r7]
 16144 07ae 1360     		str	r3, [r2]
 16145 07b0 3B68     		ldr	r3, [r7]
 16146 07b2 0433     		add	r3, r3, #4
 16147 07b4 3B60     		str	r3, [r7]
 16148 07b6 0023     		mov	r3, #0
 16149 07b8 3A68     		ldr	r2, [r7]
 16150 07ba 1360     		str	r3, [r2]
 16151 07bc 3B68     		ldr	r3, [r7]
 16152 07be 0433     		add	r3, r3, #4
 16153 07c0 3B60     		str	r3, [r7]
 16154 07c2 0023     		mov	r3, #0
 16155 07c4 3A68     		ldr	r2, [r7]
 16156 07c6 1360     		str	r3, [r2]
 16157 07c8 3B68     		ldr	r3, [r7]
 16158 07ca 0433     		add	r3, r3, #4
 16159 07cc 3B60     		str	r3, [r7]
 16160 07ce 0023     		mov	r3, #0
 16161 07d0 3A68     		ldr	r2, [r7]
 16162 07d2 1360     		str	r3, [r2]
 16163 07d4 3B68     		ldr	r3, [r7]
 16164 07d6 0433     		add	r3, r3, #4
 16165              		.loc 1 26 0
 16166 07d8 3B1C     		mov	r3, r7
 16167 07da 0833     		add	r3, r3, #8
 16168 07dc 181C     		mov	r0, r3
 16169 07de FFF7FEFF 		bl	pthread_mutex_lock
 16170              		.loc 1 27 0
 16171 07e2 7A68     		ldr	r2, [r7, #4]
 16172 07e4 0023     		mov	r3, #0
 16173 07e6 1374     		strb	r3, [r2, #16]
 16174              		.loc 1 28 0
 16175 07e8 3B1C     		mov	r3, r7
 16176 07ea 0833     		add	r3, r3, #8
 16177 07ec 181C     		mov	r0, r3
 16178 07ee FFF7FEFF 		bl	pthread_mutex_unlock
 16179              	.LBE8:
 16180              		.loc 1 29 0
 16181 07f2 BD46     		mov	sp, r7
 16182 07f4 08B0     		add	sp, sp, #32
 16183              		@ sp needed for prologue
 16184 07f6 80BD     		pop	{r7, pc}
 16185              	.LFE987:
 16186              		.fnend
 16188              		.section	.rodata
 16189              		.align	2
 16190              	.LC24:
 16191 0198 46665069 		.ascii	"FfPipeline::DoRecording\000"
 16191      70656C69 
 16191      6E653A3A 
 16191      446F5265 
 16191      636F7264 
 16192              		.align	2
 16193              	.LC27:
 16194 01b0 25735F25 		.ascii	"%s_%d.mkv\000"
 16194      642E6D6B 
 16194      7600
 16195 01ba 0000     		.align	2
 16196              	.LC29:
 16197 01bc 2F6D6564 		.ascii	"/media/hdd/video/test\000"
 16197      69612F68 
 16197      64642F76 
 16197      6964656F 
 16197      2F746573 
 16198 01d2 0000     		.align	2
 16199              	.LC32:
 16200 01d4 44454255 		.ascii	"DEBUG: Output path: '%s'\012\000"
 16200      473A204F 
 16200      75747075 
 16200      74207061 
 16200      74683A20 
 16201 01ee 0000     		.align	2
 16202              	.LC34:
 16203 01f0 72747370 		.ascii	"rtsp_transport\000"
 16203      5F747261 
 16203      6E73706F 
 16203      727400
 16204 01ff 00       		.align	2
 16205              	.LC36:
 16206 0200 74637000 		.ascii	"tcp\000"
 16207              		.align	2
 16208              	.LC38:
 16209 0204 72747370 		.ascii	"rtsp://192.168.0.11:554/mpeg4/media.amp?audio=0\000"
 16209      3A2F2F31 
 16209      39322E31 
 16209      36382E30 
 16209      2E31313A 
 16210              		.align	2
 16211              	.LC40:
 16212 0234 4661696C 		.ascii	"Failed allocating output stream\012\000"
 16212      65642061 
 16212      6C6C6F63 
 16212      6174696E 
 16212      67206F75 
 16213 0255 000000   		.align	2
 16214              	.LC42:
 16215 0258 5741524E 		.ascii	"WARNING: for ofmt set flag AVFMT_NOFILE so we skip "
 16215      494E473A 
 16215      20666F72 
 16215      206F666D 
 16215      74207365 
 16216 028b 6F70656E 		.ascii	"open file.\012\000"
 16216      2066696C 
 16216      652E0A00 
 16217 0297 00       		.align	2
 16218              	.LC44:
 16219 0298 4552524F 		.ascii	"ERROR: in_stream is NULL pointer! Skip this packet!"
 16219      523A2069 
 16219      6E5F7374 
 16219      7265616D 
 16219      20697320 
 16220 02cb 0A00     		.ascii	"\012\000"
 16221 02cd 000000   		.align	2
 16222              	.LC46:
 16223 02d0 4552524F 		.ascii	"ERROR: out_stream is NULL pointer! Skip this packet"
 16223      523A206F 
 16223      75745F73 
 16223      74726561 
 16223      6D206973 
 16224 0303 210A00   		.ascii	"!\012\000"
 16225 0306 0000     		.align	2
 16226              	.LC48:
 16227 0308 44454255 		.ascii	"DEBUG: Now we stopping Slot %d\012\000"
 16227      473A204E 
 16227      6F772077 
 16227      65207374 
 16227      6F707069 
 16228              		.align	2
 16229              	.LC50:
 16230 0328 44454255 		.ascii	"DEBUG: Try to av_write_trailer() for Slot %d\012\000"
 16230      473A2054 
 16230      72792074 
 16230      6F206176 
 16230      5F777269 
 16231 0356 0000     		.align	2
 16232              	.LC52:
 16233 0358 44454255 		.ascii	"DEBUG: Try to close all streams codec for Slot %d\012"
 16233      473A2054 
 16233      72792074 
 16233      6F20636C 
 16233      6F736520 
 16234 038a 00       		.ascii	"\000"
 16235 038b 00       		.align	2
 16236              	.LC54:
 16237 038c 44454255 		.ascii	"DEBUG: Try to avio_close() for Slot %d\012\000"
 16237      473A2054 
 16237      72792074 
 16237      6F206176 
 16237      696F5F63 
 16238              		.align	2
 16239              	.LC56:
 16240 03b4 44454255 		.ascii	"DEBUG: Try to av_free() for Slot %d\012\000"
 16240      473A2054 
 16240      72792074 
 16240      6F206176 
 16240      5F667265 
 16241 03d9 000000   		.align	2
 16242              	.LC58:
 16243 03dc 44454255 		.ascii	"DEBUG: Try to avformat_close_input() for Slot %d\012"
 16243      473A2054 
 16243      72792074 
 16243      6F206176 
 16243      666F726D 
 16244 040d 00       		.ascii	"\000"
 16245 040e 0000     		.text
 16246              		.align	2
 16247              		.global	_ZN10FfPipeline11DoRecordingEv
 16248              		.code	16
 16249              		.thumb_func
 16251              	_ZN10FfPipeline11DoRecordingEv:
 16252              		.fnstart
 16253              	.LFB1002:
 16254              		.loc 1 160 0
 16255              		.save	{r4, r5, r7, lr}
 16256 07f8 B0B5     		push	{r4, r5, r7, lr}
 16257              	.LCFI66:
 16258 07fa EB4C     		ldr	r4, .L111
 16259              		.pad #2344
 16260 07fc A544     		add	sp, sp, r4
 16261              	.LCFI67:
 16262              		.setfp r7, sp, #8
 16263 07fe 02AF     		add	r7, sp, #8
 16264              	.LCFI68:
 16265 0800 F860     		str	r0, [r7, #12]
 16266              	.LBB9:
 16267              		.loc 1 162 0
 16268 0802 EA4B     		ldr	r3, .L111+4
 16269 0804 8F20     		mov	r0, #143
 16270 0806 0001     		lsl	r0, r0, #4
 16271 0808 C019     		add	r0, r0, r7
 16272 080a 0360     		str	r3, [r0]
 16273              		.loc 1 163 0
 16274 080c 0023     		mov	r3, #0
 16275 080e E849     		ldr	r1, .L111+8
 16276 0810 C919     		add	r1, r1, r7
 16277 0812 0B60     		str	r3, [r1]
 16278              		.loc 1 164 0
 16279 0814 0023     		mov	r3, #0
 16280 0816 E74A     		ldr	r2, .L111+12
 16281 0818 D219     		add	r2, r2, r7
 16282 081a 1360     		str	r3, [r2]
 16283              		.loc 1 165 0
 16284 081c 0023     		mov	r3, #0
 16285 081e 8620     		mov	r0, #134
 16286 0820 0001     		lsl	r0, r0, #4
 16287 0822 C019     		add	r0, r0, r7
 16288 0824 0360     		str	r3, [r0]
 16289              		.loc 1 166 0
 16290 0826 0023     		mov	r3, #0
 16291 0828 E349     		ldr	r1, .L111+16
 16292 082a C919     		add	r1, r1, r7
 16293 082c 0B60     		str	r3, [r1]
 16294              		.loc 1 168 0
 16295 082e 0023     		mov	r3, #0
 16296 0830 0024     		mov	r4, #0
 16297 0832 E24A     		ldr	r2, .L111+20
 16298 0834 D219     		add	r2, r2, r7
 16299 0836 1360     		str	r3, [r2]
 16300 0838 5460     		str	r4, [r2, #4]
 16301 083a 0023     		mov	r3, #0
 16302 083c 0024     		mov	r4, #0
 16303 083e 9020     		mov	r0, #144
 16304 0840 0001     		lsl	r0, r0, #4
 16305 0842 C019     		add	r0, r0, r7
 16306 0844 0360     		str	r3, [r0]
 16307 0846 4460     		str	r4, [r0, #4]
 16308              		.loc 1 173 0
 16309 0848 DD4B     		ldr	r3, .L111+24
 16310 084a 1B68     		ldr	r3, [r3]
 16311 084c 5A1C     		add	r2, r3, #1
 16312 084e DC4B     		ldr	r3, .L111+24
 16313 0850 1A60     		str	r2, [r3]
 16314 0852 DB4B     		ldr	r3, .L111+24
 16315 0854 1D68     		ldr	r5, [r3]
 16316 0856 3B1C     		mov	r3, r7
 16317 0858 1033     		add	r3, r3, #16
 16318 085a DA4A     		ldr	r2, .L111+28
 16319 085c DA4C     		ldr	r4, .L111+32
 16320 085e 181C     		mov	r0, r3
 16321 0860 111C     		mov	r1, r2
 16322 0862 221C     		mov	r2, r4
 16323 0864 2B1C     		mov	r3, r5
 16324 0866 FFF7FEFF 		bl	sprintf
 16325              		.loc 1 175 0
 16326 086a D84B     		ldr	r3, .L111+36
 16327 086c D84A     		ldr	r2, .L111+40
 16328 086e 3C1C     		mov	r4, r7
 16329 0870 1034     		add	r4, r4, #16
 16330 0872 181C     		mov	r0, r3
 16331 0874 111C     		mov	r1, r2
 16332 0876 221C     		mov	r2, r4
 16333 0878 FFF7FEFF 		bl	sprintf
 16334              		.loc 1 176 0
 16335 087c D549     		ldr	r1, .L111+44
 16336 087e 7B18     		add	r3, r7, r1
 16337 0880 181C     		mov	r0, r3
 16338 0882 FFF7FEFF 		bl	_ZNSaIcEC1Ev
 16339 0886 8722     		mov	r2, #135
 16340 0888 1201     		lsl	r2, r2, #4
 16341 088a BB18     		add	r3, r7, r2
 16342 088c CF4A     		ldr	r2, .L111+36
 16343 088e D148     		ldr	r0, .L111+44
 16344 0890 3C18     		add	r4, r7, r0
 16345 0892 181C     		mov	r0, r3
 16346 0894 111C     		mov	r1, r2
 16347 0896 221C     		mov	r2, r4
 16348 0898 FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 16349 089c CE49     		ldr	r1, .L111+48
 16350 089e 7B18     		add	r3, r7, r1
 16351 08a0 8720     		mov	r0, #135
 16352 08a2 0001     		lsl	r0, r0, #4
 16353 08a4 3A18     		add	r2, r7, r0
 16354 08a6 8F21     		mov	r1, #143
 16355 08a8 0901     		lsl	r1, r1, #4
 16356 08aa C919     		add	r1, r1, r7
 16357 08ac 0C68     		ldr	r4, [r1]
 16358 08ae 181C     		mov	r0, r3
 16359 08b0 111C     		mov	r1, r2
 16360 08b2 221C     		mov	r2, r4
 16361 08b4 FFF7FEFF 		bl	_Z9AppendLogSsPKc
 16362 08b8 C74A     		ldr	r2, .L111+48
 16363 08ba BB18     		add	r3, r7, r2
 16364 08bc 181C     		mov	r0, r3
 16365 08be FFF7FEFF 		bl	_ZNSsD1Ev
 16366 08c2 8720     		mov	r0, #135
 16367 08c4 0001     		lsl	r0, r0, #4
 16368 08c6 3B18     		add	r3, r7, r0
 16369 08c8 181C     		mov	r0, r3
 16370 08ca FFF7FEFF 		bl	_ZNSsD1Ev
 16371 08ce C149     		ldr	r1, .L111+44
 16372 08d0 7B18     		add	r3, r7, r1
 16373 08d2 181C     		mov	r0, r3
 16374 08d4 FFF7FEFF 		bl	_ZNSaIcED1Ev
 16375              		.loc 1 178 0
 16376 08d8 8622     		mov	r2, #134
 16377 08da 1201     		lsl	r2, r2, #4
 16378 08dc BB18     		add	r3, r7, r2
 16379 08de BF4A     		ldr	r2, .L111+52
 16380 08e0 BF4C     		ldr	r4, .L111+56
 16381 08e2 181C     		mov	r0, r3
 16382 08e4 111C     		mov	r1, r2
 16383 08e6 221C     		mov	r2, r4
 16384 08e8 0023     		mov	r3, #0
 16385 08ea FFF7FEFF 		bl	av_dict_set
 16386              		.loc 1 180 0
 16387 08ee B048     		ldr	r0, .L111+8
 16388 08f0 3B18     		add	r3, r7, r0
 16389 08f2 BC4A     		ldr	r2, .L111+60
 16390 08f4 8621     		mov	r1, #134
 16391 08f6 0901     		lsl	r1, r1, #4
 16392 08f8 7C18     		add	r4, r7, r1
 16393 08fa 181C     		mov	r0, r3
 16394 08fc 111C     		mov	r1, r2
 16395 08fe 0022     		mov	r2, #0
 16396 0900 231C     		mov	r3, r4
 16397 0902 FFF7FEFF 		bl	avformat_open_input
 16398 0906 031C     		mov	r3, r0
 16399 0908 DB0F     		lsr	r3, r3, #31
 16400 090a 1B06     		lsl	r3, r3, #24
 16401 090c 1B0E     		lsr	r3, r3, #24
 16402 090e 002B     		cmp	r3, #0
 16403 0910 15D0     		beq	.L81
 16404              		.loc 1 182 0
 16405 0912 A74A     		ldr	r2, .L111+8
 16406 0914 BB18     		add	r3, r7, r2
 16407 0916 181C     		mov	r0, r3
 16408 0918 FFF7FEFF 		bl	avformat_close_input
 16409              		.loc 1 183 0
 16410 091c 0023     		mov	r3, #0
 16411 091e A448     		ldr	r0, .L111+8
 16412 0920 C019     		add	r0, r0, r7
 16413 0922 0360     		str	r3, [r0]
 16414              		.loc 1 185 0
 16415 0924 8621     		mov	r1, #134
 16416 0926 0901     		lsl	r1, r1, #4
 16417 0928 7B18     		add	r3, r7, r1
 16418 092a 181C     		mov	r0, r3
 16419 092c FFF7FEFF 		bl	av_dict_free
 16420              		.loc 1 187 0
 16421 0930 0122     		mov	r2, #1
 16422 0932 3A60     		str	r2, [r7]
 16423 0934 3B68     		ldr	r3, [r7]
 16424 0936 5B42     		neg	r3, r3
 16425 0938 3B60     		str	r3, [r7]
 16426 093a 00F0E6FC 		bl	.L82	@ far jump
 16427              	.L81:
 16428              		.loc 1 193 0
 16429 093e 8620     		mov	r0, #134
 16430 0940 0001     		lsl	r0, r0, #4
 16431 0942 3B18     		add	r3, r7, r0
 16432 0944 181C     		mov	r0, r3
 16433 0946 FFF7FEFF 		bl	av_dict_free
 16434              		.loc 1 195 0
 16435 094a 9949     		ldr	r1, .L111+8
 16436 094c C919     		add	r1, r1, r7
 16437 094e 0B68     		ldr	r3, [r1]
 16438 0950 181C     		mov	r0, r3
 16439 0952 0021     		mov	r1, #0
 16440 0954 FFF7FEFF 		bl	avformat_find_stream_info
 16441 0958 031C     		mov	r3, r0
 16442 095a DB0F     		lsr	r3, r3, #31
 16443 095c 1B06     		lsl	r3, r3, #24
 16444 095e 1B0E     		lsr	r3, r3, #24
 16445 0960 002B     		cmp	r3, #0
 16446 0962 0FD0     		beq	.L83
 16447              		.loc 1 197 0
 16448 0964 924A     		ldr	r2, .L111+8
 16449 0966 BB18     		add	r3, r7, r2
 16450 0968 181C     		mov	r0, r3
 16451 096a FFF7FEFF 		bl	avformat_close_input
 16452              		.loc 1 198 0
 16453 096e 0023     		mov	r3, #0
 16454 0970 8F48     		ldr	r0, .L111+8
 16455 0972 C019     		add	r0, r0, r7
 16456 0974 0360     		str	r3, [r0]
 16457              		.loc 1 200 0
 16458 0976 0121     		mov	r1, #1
 16459 0978 3960     		str	r1, [r7]
 16460 097a 3A68     		ldr	r2, [r7]
 16461 097c 5242     		neg	r2, r2
 16462 097e 3A60     		str	r2, [r7]
 16463 0980 00F0C3FC 		bl	.L82	@ far jump
 16464              	.L83:
 16465              		.loc 1 203 0
 16466 0984 8B48     		ldr	r0, .L111+12
 16467 0986 3B18     		add	r3, r7, r0
 16468 0988 3C1C     		mov	r4, r7
 16469 098a 1034     		add	r4, r4, #16
 16470 098c 181C     		mov	r0, r3
 16471 098e 0021     		mov	r1, #0
 16472 0990 0022     		mov	r2, #0
 16473 0992 231C     		mov	r3, r4
 16474 0994 FFF7FEFF 		bl	avformat_alloc_output_context2
 16475              		.loc 1 205 0
 16476 0998 8649     		ldr	r1, .L111+12
 16477 099a C919     		add	r1, r1, r7
 16478 099c 0B68     		ldr	r3, [r1]
 16479 099e 002B     		cmp	r3, #0
 16480 09a0 06D1     		bne	.L84
 16481              		.loc 1 207 0
 16482 09a2 0122     		mov	r2, #1
 16483 09a4 3A60     		str	r2, [r7]
 16484 09a6 3B68     		ldr	r3, [r7]
 16485 09a8 5B42     		neg	r3, r3
 16486 09aa 3B60     		str	r3, [r7]
 16487 09ac 00F0ADFC 		bl	.L82	@ far jump
 16488              	.L84:
 16489              		.loc 1 213 0
 16490 09b0 8048     		ldr	r0, .L111+12
 16491 09b2 C019     		add	r0, r0, r7
 16492 09b4 0368     		ldr	r3, [r0]
 16493 09b6 9B68     		ldr	r3, [r3, #8]
 16494 09b8 7F49     		ldr	r1, .L111+16
 16495 09ba C919     		add	r1, r1, r7
 16496 09bc 0B60     		str	r3, [r1]
 16497              		.loc 1 215 0
 16498 09be 7E4A     		ldr	r2, .L111+16
 16499 09c0 D219     		add	r2, r2, r7
 16500 09c2 1368     		ldr	r3, [r2]
 16501 09c4 002B     		cmp	r3, #0
 16502 09c6 06D1     		bne	.L85
 16503              		.loc 1 217 0
 16504 09c8 0123     		mov	r3, #1
 16505 09ca 3B60     		str	r3, [r7]
 16506 09cc 3868     		ldr	r0, [r7]
 16507 09ce 4042     		neg	r0, r0
 16508 09d0 3860     		str	r0, [r7]
 16509 09d2 00F09AFC 		bl	.L82	@ far jump
 16510              	.L85:
 16511              		.loc 1 220 0
 16512 09d6 0023     		mov	r3, #0
 16513 09d8 8349     		ldr	r1, .L111+64
 16514 09da C919     		add	r1, r1, r7
 16515 09dc 0B60     		str	r3, [r1]
 16516 09de B2E0     		b	.L86
 16517              	.L90:
 16518              	.LBB10:
 16519              		.loc 1 222 0
 16520 09e0 734A     		ldr	r2, .L111+8
 16521 09e2 D219     		add	r2, r2, r7
 16522 09e4 1368     		ldr	r3, [r2]
 16523 09e6 DA69     		ldr	r2, [r3, #28]
 16524 09e8 7F48     		ldr	r0, .L111+64
 16525 09ea C019     		add	r0, r0, r7
 16526 09ec 0368     		ldr	r3, [r0]
 16527 09ee 9B00     		lsl	r3, r3, #2
 16528 09f0 D318     		add	r3, r2, r3
 16529 09f2 1B68     		ldr	r3, [r3]
 16530 09f4 9121     		mov	r1, #145
 16531 09f6 0901     		lsl	r1, r1, #4
 16532 09f8 C919     		add	r1, r1, r7
 16533 09fa 0B60     		str	r3, [r1]
 16534              		.loc 1 223 0
 16535 09fc 6D4B     		ldr	r3, .L111+12
 16536 09fe DB19     		add	r3, r3, r7
 16537 0a00 1A68     		ldr	r2, [r3]
 16538 0a02 9120     		mov	r0, #145
 16539 0a04 0001     		lsl	r0, r0, #4
 16540 0a06 C019     		add	r0, r0, r7
 16541 0a08 0368     		ldr	r3, [r0]
 16542 0a0a 9B68     		ldr	r3, [r3, #8]
 16543 0a0c DB68     		ldr	r3, [r3, #12]
 16544 0a0e 101C     		mov	r0, r2
 16545 0a10 191C     		mov	r1, r3
 16546 0a12 FFF7FEFF 		bl	avformat_new_stream
 16547 0a16 031C     		mov	r3, r0
 16548 0a18 7449     		ldr	r1, .L111+68
 16549 0a1a C919     		add	r1, r1, r7
 16550 0a1c 0B60     		str	r3, [r1]
 16551              		.loc 1 225 0
 16552 0a1e 734A     		ldr	r2, .L111+68
 16553 0a20 D219     		add	r2, r2, r7
 16554 0a22 1368     		ldr	r3, [r2]
 16555 0a24 002B     		cmp	r3, #0
 16556 0a26 31D1     		bne	.L87
 16557              		.loc 1 227 0
 16558 0a28 7148     		ldr	r0, .L111+72
 16559 0a2a 3B18     		add	r3, r7, r0
 16560 0a2c 181C     		mov	r0, r3
 16561 0a2e FFF7FEFF 		bl	_ZNSaIcEC1Ev
 16562 0a32 7049     		ldr	r1, .L111+76
 16563 0a34 7B18     		add	r3, r7, r1
 16564 0a36 704A     		ldr	r2, .L111+80
 16565 0a38 6D48     		ldr	r0, .L111+72
 16566 0a3a 3C18     		add	r4, r7, r0
 16567 0a3c 181C     		mov	r0, r3
 16568 0a3e 111C     		mov	r1, r2
 16569 0a40 221C     		mov	r2, r4
 16570 0a42 FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 16571 0a46 6D49     		ldr	r1, .L111+84
 16572 0a48 7B18     		add	r3, r7, r1
 16573 0a4a 6A48     		ldr	r0, .L111+76
 16574 0a4c 3A18     		add	r2, r7, r0
 16575 0a4e 8F21     		mov	r1, #143
 16576 0a50 0901     		lsl	r1, r1, #4
 16577 0a52 C919     		add	r1, r1, r7
 16578 0a54 0C68     		ldr	r4, [r1]
 16579 0a56 181C     		mov	r0, r3
 16580 0a58 111C     		mov	r1, r2
 16581 0a5a 221C     		mov	r2, r4
 16582 0a5c FFF7FEFF 		bl	_Z9AppendLogSsPKc
 16583 0a60 664A     		ldr	r2, .L111+84
 16584 0a62 BB18     		add	r3, r7, r2
 16585 0a64 181C     		mov	r0, r3
 16586 0a66 FFF7FEFF 		bl	_ZNSsD1Ev
 16587 0a6a 6248     		ldr	r0, .L111+76
 16588 0a6c 3B18     		add	r3, r7, r0
 16589 0a6e 181C     		mov	r0, r3
 16590 0a70 FFF7FEFF 		bl	_ZNSsD1Ev
 16591 0a74 5E49     		ldr	r1, .L111+72
 16592 0a76 7B18     		add	r3, r7, r1
 16593 0a78 181C     		mov	r0, r3
 16594 0a7a FFF7FEFF 		bl	_ZNSaIcED1Ev
 16595              		.loc 1 228 0
 16596 0a7e 0122     		mov	r2, #1
 16597 0a80 3A60     		str	r2, [r7]
 16598 0a82 3B68     		ldr	r3, [r7]
 16599 0a84 5B42     		neg	r3, r3
 16600 0a86 3B60     		str	r3, [r7]
 16601 0a88 00F03FFC 		bl	.L82	@ far jump
 16602              	.L87:
 16603              		.loc 1 231 0
 16604 0a8c 5748     		ldr	r0, .L111+68
 16605 0a8e C019     		add	r0, r0, r7
 16606 0a90 0368     		ldr	r3, [r0]
 16607 0a92 9A68     		ldr	r2, [r3, #8]
 16608 0a94 9121     		mov	r1, #145
 16609 0a96 0901     		lsl	r1, r1, #4
 16610 0a98 C919     		add	r1, r1, r7
 16611 0a9a 0B68     		ldr	r3, [r1]
 16612 0a9c 9B68     		ldr	r3, [r3, #8]
 16613 0a9e 101C     		mov	r0, r2
 16614 0aa0 191C     		mov	r1, r3
 16615 0aa2 FFF7FEFF 		bl	avcodec_copy_context
 16616 0aa6 031C     		mov	r3, r0
 16617 0aa8 554A     		ldr	r2, .L111+88
 16618 0aaa D219     		add	r2, r2, r7
 16619 0aac 1360     		str	r3, [r2]
 16620              		.loc 1 233 0
 16621 0aae 5448     		ldr	r0, .L111+88
 16622 0ab0 C019     		add	r0, r0, r7
 16623 0ab2 0368     		ldr	r3, [r0]
 16624 0ab4 002B     		cmp	r3, #0
 16625 0ab6 05DA     		bge	.L88
 16626              		.loc 1 235 0
 16627 0ab8 5149     		ldr	r1, .L111+88
 16628 0aba C919     		add	r1, r1, r7
 16629 0abc 0968     		ldr	r1, [r1]
 16630 0abe 3960     		str	r1, [r7]
 16631 0ac0 00F023FC 		bl	.L82	@ far jump
 16632              	.L88:
 16633              		.loc 1 238 0
 16634 0ac4 494A     		ldr	r2, .L111+68
 16635 0ac6 D219     		add	r2, r2, r7
 16636 0ac8 1368     		ldr	r3, [r2]
 16637 0aca 9120     		mov	r0, #145
 16638 0acc 0001     		lsl	r0, r0, #4
 16639 0ace C019     		add	r0, r0, r7
 16640 0ad0 0268     		ldr	r2, [r0]
 16641 0ad2 2833     		add	r3, r3, #40
 16642 0ad4 2832     		add	r2, r2, #40
 16643 0ad6 0824     		mov	r4, #8
 16644 0ad8 181C     		mov	r0, r3
 16645 0ada 111C     		mov	r1, r2
 16646 0adc 221C     		mov	r2, r4
 16647 0ade FFF7FEFF 		bl	memcpy
 16648              		.loc 1 239 0
 16649 0ae2 4249     		ldr	r1, .L111+68
 16650 0ae4 C919     		add	r1, r1, r7
 16651 0ae6 0B68     		ldr	r3, [r1]
 16652 0ae8 9B68     		ldr	r3, [r3, #8]
 16653 0aea 4048     		ldr	r0, .L111+68
 16654 0aec C019     		add	r0, r0, r7
 16655 0aee 0268     		ldr	r2, [r0]
 16656 0af0 6833     		add	r3, r3, #104
 16657 0af2 2832     		add	r2, r2, #40
 16658 0af4 0824     		mov	r4, #8
 16659 0af6 181C     		mov	r0, r3
 16660 0af8 111C     		mov	r1, r2
 16661 0afa 221C     		mov	r2, r4
 16662 0afc FFF7FEFF 		bl	memcpy
 16663              		.loc 1 240 0
 16664 0b00 3A49     		ldr	r1, .L111+68
 16665 0b02 C919     		add	r1, r1, r7
 16666 0b04 0B68     		ldr	r3, [r1]
 16667 0b06 9A68     		ldr	r2, [r3, #8]
 16668 0b08 0023     		mov	r3, #0
 16669 0b0a 5363     		str	r3, [r2, #52]
 16670              		.loc 1 242 0
 16671 0b0c 294A     		ldr	r2, .L111+12
 16672 0b0e D219     		add	r2, r2, r7
 16673 0b10 1368     		ldr	r3, [r2]
 16674 0b12 9B68     		ldr	r3, [r3, #8]
 16675 0b14 DA69     		ldr	r2, [r3, #28]
 16676 0b16 4023     		mov	r3, #64
 16677 0b18 1340     		and	r3, r3, r2
 16678 0b1a 002B     		cmp	r3, #0
 16679 0b1c 0CD0     		beq	.L89
 16680              		.loc 1 243 0
 16681 0b1e 3348     		ldr	r0, .L111+68
 16682 0b20 C019     		add	r0, r0, r7
 16683 0b22 0368     		ldr	r3, [r0]
 16684 0b24 9968     		ldr	r1, [r3, #8]
 16685 0b26 314A     		ldr	r2, .L111+68
 16686 0b28 D219     		add	r2, r2, r7
 16687 0b2a 1368     		ldr	r3, [r2]
 16688 0b2c 9B68     		ldr	r3, [r3, #8]
 16689 0b2e 9A6D     		ldr	r2, [r3, #88]
 16690 0b30 8023     		mov	r3, #128
 16691 0b32 DB03     		lsl	r3, r3, #15
 16692 0b34 1343     		orr	r3, r3, r2
 16693 0b36 8B65     		str	r3, [r1, #88]
 16694              	.L89:
 16695              	.LBE10:
 16696              		.loc 1 220 0
 16697 0b38 2B48     		ldr	r0, .L111+64
 16698 0b3a C019     		add	r0, r0, r7
 16699 0b3c 0368     		ldr	r3, [r0]
 16700 0b3e 0133     		add	r3, r3, #1
 16701 0b40 2949     		ldr	r1, .L111+64
 16702 0b42 C919     		add	r1, r1, r7
 16703 0b44 0B60     		str	r3, [r1]
 16704              	.L86:
 16705 0b46 1A4A     		ldr	r2, .L111+8
 16706 0b48 D219     		add	r2, r2, r7
 16707 0b4a 1368     		ldr	r3, [r2]
 16708 0b4c 9A69     		ldr	r2, [r3, #24]
 16709 0b4e 2648     		ldr	r0, .L111+64
 16710 0b50 C019     		add	r0, r0, r7
 16711 0b52 0368     		ldr	r3, [r0]
 16712 0b54 9A42     		cmp	r2, r3
 16713 0b56 00D9     		bls	.LCB1586
 16714 0b58 42E7     		b	.L90	@long jump
 16715              	.LCB1586:
 16716              		.loc 1 247 0
 16717 0b5a 1749     		ldr	r1, .L111+16
 16718 0b5c C919     		add	r1, r1, r7
 16719 0b5e 0B68     		ldr	r3, [r1]
 16720 0b60 DA69     		ldr	r2, [r3, #28]
 16721 0b62 0123     		mov	r3, #1
 16722 0b64 1340     		and	r3, r3, r2
 16723 0b66 1B06     		lsl	r3, r3, #24
 16724 0b68 1A0E     		lsr	r2, r3, #24
 16725 0b6a 0123     		mov	r3, #1
 16726 0b6c 5340     		eor	r3, r3, r2
 16727 0b6e 1B06     		lsl	r3, r3, #24
 16728 0b70 1B0E     		lsr	r3, r3, #24
 16729 0b72 002B     		cmp	r3, #0
 16730 0b74 46D0     		beq	.L91
 16731              		.loc 1 249 0
 16732 0b76 0F4A     		ldr	r2, .L111+12
 16733 0b78 D219     		add	r2, r2, r7
 16734 0b7a 1368     		ldr	r3, [r2]
 16735 0b7c 1033     		add	r3, r3, #16
 16736 0b7e 3A1C     		mov	r2, r7
 16737 0b80 1032     		add	r2, r2, #16
 16738 0b82 181C     		mov	r0, r3
 16739 0b84 111C     		mov	r1, r2
 16740 0b86 0222     		mov	r2, #2
 16741 0b88 FFF7FEFF 		bl	avio_open
 16742 0b8c 031C     		mov	r3, r0
 16743 0b8e 1C48     		ldr	r0, .L111+88
 16744 0b90 C019     		add	r0, r0, r7
 16745 0b92 0360     		str	r3, [r0]
 16746              		.loc 1 250 0
 16747 0b94 1A49     		ldr	r1, .L111+88
 16748 0b96 C919     		add	r1, r1, r7
 16749 0b98 0B68     		ldr	r3, [r1]
 16750 0b9a 002B     		cmp	r3, #0
 16751 0b9c 5DDA     		bge	.L93
 16752              		.loc 1 252 0
 16753 0b9e 184A     		ldr	r2, .L111+88
 16754 0ba0 D219     		add	r2, r2, r7
 16755 0ba2 1268     		ldr	r2, [r2]
 16756 0ba4 3A60     		str	r2, [r7]
 16757 0ba6 B0E3     		b	.L82
 16758              	.L112:
 16759              		.align	2
 16760              	.L111:
 16761 0ba8 D8F6FFFF 		.word	-2344
 16762 0bac 98010000 		.word	.LC24
 16763 0bb0 68080000 		.word	2152
 16764 0bb4 64080000 		.word	2148
 16765 0bb8 F4080000 		.word	2292
 16766 0bbc F8080000 		.word	2296
 16767 0bc0 00000000 		.word	Count
 16768 0bc4 B0010000 		.word	.LC27
 16769 0bc8 BC010000 		.word	.LC29
 16770 0bcc 00000000 		.word	str
 16771 0bd0 D4010000 		.word	.LC32
 16772 0bd4 77080000 		.word	2167
 16773 0bd8 6C080000 		.word	2156
 16774 0bdc F0010000 		.word	.LC34
 16775 0be0 00020000 		.word	.LC36
 16776 0be4 04020000 		.word	.LC38
 16777 0be8 08090000 		.word	2312
 16778 0bec 14090000 		.word	2324
 16779 0bf0 83080000 		.word	2179
 16780 0bf4 7C080000 		.word	2172
 16781 0bf8 34020000 		.word	.LC40
 16782 0bfc 78080000 		.word	2168
 16783 0c00 0C090000 		.word	2316
 16784              	.L91:
 16785              		.loc 1 257 0
 16786 0c04 DA48     		ldr	r0, .L113+8
 16787 0c06 3B18     		add	r3, r7, r0
 16788 0c08 181C     		mov	r0, r3
 16789 0c0a FFF7FEFF 		bl	_ZNSaIcEC1Ev
 16790 0c0e D949     		ldr	r1, .L113+12
 16791 0c10 7B18     		add	r3, r7, r1
 16792 0c12 D94A     		ldr	r2, .L113+16
 16793 0c14 D648     		ldr	r0, .L113+8
 16794 0c16 3C18     		add	r4, r7, r0
 16795 0c18 181C     		mov	r0, r3
 16796 0c1a 111C     		mov	r1, r2
 16797 0c1c 221C     		mov	r2, r4
 16798 0c1e FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 16799 0c22 D649     		ldr	r1, .L113+20
 16800 0c24 7B18     		add	r3, r7, r1
 16801 0c26 D348     		ldr	r0, .L113+12
 16802 0c28 3A18     		add	r2, r7, r0
 16803 0c2a 8F21     		mov	r1, #143
 16804 0c2c 0901     		lsl	r1, r1, #4
 16805 0c2e C919     		add	r1, r1, r7
 16806 0c30 0C68     		ldr	r4, [r1]
 16807 0c32 181C     		mov	r0, r3
 16808 0c34 111C     		mov	r1, r2
 16809 0c36 221C     		mov	r2, r4
 16810 0c38 FFF7FEFF 		bl	_Z9AppendLogSsPKc
 16811 0c3c CF4A     		ldr	r2, .L113+20
 16812 0c3e BB18     		add	r3, r7, r2
 16813 0c40 181C     		mov	r0, r3
 16814 0c42 FFF7FEFF 		bl	_ZNSsD1Ev
 16815 0c46 CB48     		ldr	r0, .L113+12
 16816 0c48 3B18     		add	r3, r7, r0
 16817 0c4a 181C     		mov	r0, r3
 16818 0c4c FFF7FEFF 		bl	_ZNSsD1Ev
 16819 0c50 C749     		ldr	r1, .L113+8
 16820 0c52 7B18     		add	r3, r7, r1
 16821 0c54 181C     		mov	r0, r3
 16822 0c56 FFF7FEFF 		bl	_ZNSaIcED1Ev
 16823              	.L93:
 16824              		.loc 1 260 0
 16825 0c5a C94A     		ldr	r2, .L113+24
 16826 0c5c D219     		add	r2, r2, r7
 16827 0c5e 1368     		ldr	r3, [r2]
 16828 0c60 181C     		mov	r0, r3
 16829 0c62 0021     		mov	r1, #0
 16830 0c64 FFF7FEFF 		bl	avformat_write_header
 16831 0c68 031C     		mov	r3, r0
 16832 0c6a C648     		ldr	r0, .L113+28
 16833 0c6c C019     		add	r0, r0, r7
 16834 0c6e 0360     		str	r3, [r0]
 16835              		.loc 1 262 0
 16836 0c70 C449     		ldr	r1, .L113+28
 16837 0c72 C919     		add	r1, r1, r7
 16838 0c74 0B68     		ldr	r3, [r1]
 16839 0c76 002B     		cmp	r3, #0
 16840 0c78 04DA     		bge	.L94
 16841              		.loc 1 264 0
 16842 0c7a C24A     		ldr	r2, .L113+28
 16843 0c7c D219     		add	r2, r2, r7
 16844 0c7e 1268     		ldr	r2, [r2]
 16845 0c80 3A60     		str	r2, [r7]
 16846 0c82 42E3     		b	.L82
 16847              	.L94:
 16848              		.loc 1 267 0
 16849 0c84 FB68     		ldr	r3, [r7, #12]
 16850 0c86 181C     		mov	r0, r3
 16851 0c88 FFF7FEFF 		bl	_ZN10FfPipeline22SetWaitingKeyframeFlagEv
 16852              		.loc 1 268 0
 16853 0c8c FB68     		ldr	r3, [r7, #12]
 16854 0c8e 181C     		mov	r0, r3
 16855 0c90 FFF7FEFF 		bl	_ZN10FfPipeline13ClearNeedStopEv
 16856 0c94 47E1     		b	.L95
 16857              	.L106:
 16858              	.LBB11:
 16859              		.loc 1 272 0
 16860 0c96 0023     		mov	r3, #0
 16861 0c98 BB48     		ldr	r0, .L113+32
 16862 0c9a C019     		add	r0, r0, r7
 16863 0c9c 0360     		str	r3, [r0]
 16864 0c9e 0023     		mov	r3, #0
 16865 0ca0 BA49     		ldr	r1, .L113+36
 16866 0ca2 C919     		add	r1, r1, r7
 16867 0ca4 0B60     		str	r3, [r1]
 16868              		.loc 1 274 0
 16869 0ca6 FB68     		ldr	r3, [r7, #12]
 16870 0ca8 181C     		mov	r0, r3
 16871 0caa FFF7FEFF 		bl	_ZN10FfPipeline17IsWaitingKeyframeEv
 16872 0cae 031C     		mov	r3, r0
 16873 0cb0 9C46     		mov	ip, r3
 16874 0cb2 6246     		mov	r2, ip
 16875 0cb4 0123     		mov	r3, #1
 16876 0cb6 5340     		eor	r3, r3, r2
 16877 0cb8 1B06     		lsl	r3, r3, #24
 16878 0cba 1B0E     		lsr	r3, r3, #24
 16879 0cbc 002B     		cmp	r3, #0
 16880 0cbe 16D1     		bne	.L96
 16881 0cc0 B34B     		ldr	r3, .L113+40
 16882 0cc2 9222     		mov	r2, #146
 16883 0cc4 1201     		lsl	r2, r2, #4
 16884 0cc6 D219     		add	r2, r2, r7
 16885 0cc8 D318     		add	r3, r2, r3
 16886 0cca 5A6A     		ldr	r2, [r3, #36]
 16887 0ccc 0123     		mov	r3, #1
 16888 0cce 1340     		and	r3, r3, r2
 16889 0cd0 1B06     		lsl	r3, r3, #24
 16890 0cd2 1A0E     		lsr	r2, r3, #24
 16891 0cd4 0123     		mov	r3, #1
 16892 0cd6 5340     		eor	r3, r3, r2
 16893 0cd8 1B06     		lsl	r3, r3, #24
 16894 0cda 1A0E     		lsr	r2, r3, #24
 16895 0cdc 0123     		mov	r3, #1
 16896 0cde 5340     		eor	r3, r3, r2
 16897 0ce0 1B06     		lsl	r3, r3, #24
 16898 0ce2 1B0E     		lsr	r3, r3, #24
 16899 0ce4 002B     		cmp	r3, #0
 16900 0ce6 02D1     		bne	.L96
 16901 0ce8 0123     		mov	r3, #1
 16902 0cea BB60     		str	r3, [r7, #8]
 16903 0cec 01E0     		b	.L97
 16904              	.L96:
 16905 0cee 0020     		mov	r0, #0
 16906 0cf0 B860     		str	r0, [r7, #8]
 16907              	.L97:
 16908 0cf2 BB68     		ldr	r3, [r7, #8]
 16909 0cf4 002B     		cmp	r3, #0
 16910 0cf6 06D0     		beq	.L98
 16911              		.loc 1 276 0
 16912 0cf8 8121     		mov	r1, #129
 16913 0cfa 0901     		lsl	r1, r1, #4
 16914 0cfc 7B18     		add	r3, r7, r1
 16915 0cfe 181C     		mov	r0, r3
 16916 0d00 FFF7FEFF 		bl	av_free_packet
 16917 0d04 0FE1     		b	.L95
 16918              	.L98:
 16919              		.loc 1 280 0
 16920 0d06 FB68     		ldr	r3, [r7, #12]
 16921 0d08 181C     		mov	r0, r3
 16922 0d0a FFF7FEFF 		bl	_ZN10FfPipeline17IsWaitingKeyframeEv
 16923 0d0e 031C     		mov	r3, r0
 16924 0d10 9C46     		mov	ip, r3
 16925 0d12 6346     		mov	r3, ip
 16926 0d14 002B     		cmp	r3, #0
 16927 0d16 23D0     		beq	.L99
 16928              		.loc 1 282 0
 16929 0d18 FB68     		ldr	r3, [r7, #12]
 16930 0d1a 181C     		mov	r0, r3
 16931 0d1c FFF7FEFF 		bl	_ZN10FfPipeline24ClearWaitingKeyframeFlagEv
 16932              		.loc 1 283 0
 16933 0d20 9B4B     		ldr	r3, .L113+40
 16934 0d22 9220     		mov	r0, #146
 16935 0d24 0001     		lsl	r0, r0, #4
 16936 0d26 C019     		add	r0, r0, r7
 16937 0d28 C218     		add	r2, r0, r3
 16938 0d2a 904C     		ldr	r4, .L113+4
 16939 0d2c 8E4B     		ldr	r3, .L113
 16940 0d2e 1361     		str	r3, [r2, #16]
 16941 0d30 5461     		str	r4, [r2, #20]
 16942 0d32 974B     		ldr	r3, .L113+40
 16943 0d34 9221     		mov	r1, #146
 16944 0d36 0901     		lsl	r1, r1, #4
 16945 0d38 C919     		add	r1, r1, r7
 16946 0d3a CB18     		add	r3, r1, r3
 16947 0d3c 1969     		ldr	r1, [r3, #16]
 16948 0d3e 5A69     		ldr	r2, [r3, #20]
 16949 0d40 934B     		ldr	r3, .L113+40
 16950 0d42 9220     		mov	r0, #146
 16951 0d44 0001     		lsl	r0, r0, #4
 16952 0d46 C019     		add	r0, r0, r7
 16953 0d48 C318     		add	r3, r0, r3
 16954 0d4a 9960     		str	r1, [r3, #8]
 16955 0d4c DA60     		str	r2, [r3, #12]
 16956              		.loc 1 284 0
 16957 0d4e FB68     		ldr	r3, [r7, #12]
 16958 0d50 181C     		mov	r0, r3
 16959 0d52 0321     		mov	r1, #3
 16960 0d54 FFF7FEFF 		bl	_ZN10FfPipeline11SetRecStateE14RecordingState
 16961              		.loc 1 285 0
 16962 0d58 FB68     		ldr	r3, [r7, #12]
 16963 0d5a 181C     		mov	r0, r3
 16964 0d5c FFF7FEFF 		bl	_ZN10FfPipeline16SetPartnerToStopEv
 16965              	.L99:
 16966              		.loc 1 288 0
 16967 0d60 8C49     		ldr	r1, .L113+44
 16968 0d62 C919     		add	r1, r1, r7
 16969 0d64 0B68     		ldr	r3, [r1]
 16970 0d66 DA69     		ldr	r2, [r3, #28]
 16971 0d68 894B     		ldr	r3, .L113+40
 16972 0d6a 9220     		mov	r0, #146
 16973 0d6c 0001     		lsl	r0, r0, #4
 16974 0d6e C019     		add	r0, r0, r7
 16975 0d70 C318     		add	r3, r0, r3
 16976 0d72 1B6A     		ldr	r3, [r3, #32]
 16977 0d74 9B00     		lsl	r3, r3, #2
 16978 0d76 D318     		add	r3, r2, r3
 16979 0d78 1B68     		ldr	r3, [r3]
 16980 0d7a 8349     		ldr	r1, .L113+32
 16981 0d7c C919     		add	r1, r1, r7
 16982 0d7e 0B60     		str	r3, [r1]
 16983              		.loc 1 289 0
 16984 0d80 7F4A     		ldr	r2, .L113+24
 16985 0d82 D219     		add	r2, r2, r7
 16986 0d84 1368     		ldr	r3, [r2]
 16987 0d86 DA69     		ldr	r2, [r3, #28]
 16988 0d88 814B     		ldr	r3, .L113+40
 16989 0d8a 9220     		mov	r0, #146
 16990 0d8c 0001     		lsl	r0, r0, #4
 16991 0d8e C019     		add	r0, r0, r7
 16992 0d90 C318     		add	r3, r0, r3
 16993 0d92 1B6A     		ldr	r3, [r3, #32]
 16994 0d94 9B00     		lsl	r3, r3, #2
 16995 0d96 D318     		add	r3, r2, r3
 16996 0d98 1B68     		ldr	r3, [r3]
 16997 0d9a 7C49     		ldr	r1, .L113+36
 16998 0d9c C919     		add	r1, r1, r7
 16999 0d9e 0B60     		str	r3, [r1]
 17000              		.loc 1 291 0
 17001 0da0 794A     		ldr	r2, .L113+32
 17002 0da2 D219     		add	r2, r2, r7
 17003 0da4 1368     		ldr	r3, [r2]
 17004 0da6 002B     		cmp	r3, #0
 17005 0da8 33D1     		bne	.L100
 17006              		.loc 1 293 0
 17007 0daa 7B48     		ldr	r0, .L113+48
 17008 0dac 3B18     		add	r3, r7, r0
 17009 0dae 181C     		mov	r0, r3
 17010 0db0 FFF7FEFF 		bl	_ZNSaIcEC1Ev
 17011 0db4 7949     		ldr	r1, .L113+52
 17012 0db6 7B18     		add	r3, r7, r1
 17013 0db8 794A     		ldr	r2, .L113+56
 17014 0dba 7748     		ldr	r0, .L113+48
 17015 0dbc 3C18     		add	r4, r7, r0
 17016 0dbe 181C     		mov	r0, r3
 17017 0dc0 111C     		mov	r1, r2
 17018 0dc2 221C     		mov	r2, r4
 17019 0dc4 FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 17020 0dc8 8921     		mov	r1, #137
 17021 0dca 0901     		lsl	r1, r1, #4
 17022 0dcc 7B18     		add	r3, r7, r1
 17023 0dce 7348     		ldr	r0, .L113+52
 17024 0dd0 3A18     		add	r2, r7, r0
 17025 0dd2 8F21     		mov	r1, #143
 17026 0dd4 0901     		lsl	r1, r1, #4
 17027 0dd6 C919     		add	r1, r1, r7
 17028 0dd8 0C68     		ldr	r4, [r1]
 17029 0dda 181C     		mov	r0, r3
 17030 0ddc 111C     		mov	r1, r2
 17031 0dde 221C     		mov	r2, r4
 17032 0de0 FFF7FEFF 		bl	_Z9AppendLogSsPKc
 17033 0de4 8922     		mov	r2, #137
 17034 0de6 1201     		lsl	r2, r2, #4
 17035 0de8 BB18     		add	r3, r7, r2
 17036 0dea 181C     		mov	r0, r3
 17037 0dec FFF7FEFF 		bl	_ZNSsD1Ev
 17038 0df0 6A48     		ldr	r0, .L113+52
 17039 0df2 3B18     		add	r3, r7, r0
 17040 0df4 181C     		mov	r0, r3
 17041 0df6 FFF7FEFF 		bl	_ZNSsD1Ev
 17042 0dfa 6749     		ldr	r1, .L113+48
 17043 0dfc 7B18     		add	r3, r7, r1
 17044 0dfe 181C     		mov	r0, r3
 17045 0e00 FFF7FEFF 		bl	_ZNSaIcED1Ev
 17046              		.loc 1 294 0
 17047 0e04 8122     		mov	r2, #129
 17048 0e06 1201     		lsl	r2, r2, #4
 17049 0e08 BB18     		add	r3, r7, r2
 17050 0e0a 181C     		mov	r0, r3
 17051 0e0c FFF7FEFF 		bl	av_free_packet
 17052 0e10 89E0     		b	.L95
 17053              	.L100:
 17054              		.loc 1 299 0
 17055 0e12 5E48     		ldr	r0, .L113+36
 17056 0e14 C019     		add	r0, r0, r7
 17057 0e16 0368     		ldr	r3, [r0]
 17058 0e18 002B     		cmp	r3, #0
 17059 0e1a 34D1     		bne	.L101
 17060              		.loc 1 301 0
 17061 0e1c 6149     		ldr	r1, .L113+60
 17062 0e1e 7B18     		add	r3, r7, r1
 17063 0e20 181C     		mov	r0, r3
 17064 0e22 FFF7FEFF 		bl	_ZNSaIcEC1Ev
 17065 0e26 8A22     		mov	r2, #138
 17066 0e28 1201     		lsl	r2, r2, #4
 17067 0e2a BB18     		add	r3, r7, r2
 17068 0e2c 5E4A     		ldr	r2, .L113+64
 17069 0e2e 5D48     		ldr	r0, .L113+60
 17070 0e30 3C18     		add	r4, r7, r0
 17071 0e32 181C     		mov	r0, r3
 17072 0e34 111C     		mov	r1, r2
 17073 0e36 221C     		mov	r2, r4
 17074 0e38 FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 17075 0e3c 5B49     		ldr	r1, .L113+68
 17076 0e3e 7B18     		add	r3, r7, r1
 17077 0e40 8A20     		mov	r0, #138
 17078 0e42 0001     		lsl	r0, r0, #4
 17079 0e44 3A18     		add	r2, r7, r0
 17080 0e46 8F21     		mov	r1, #143
 17081 0e48 0901     		lsl	r1, r1, #4
 17082 0e4a C919     		add	r1, r1, r7
 17083 0e4c 0C68     		ldr	r4, [r1]
 17084 0e4e 181C     		mov	r0, r3
 17085 0e50 111C     		mov	r1, r2
 17086 0e52 221C     		mov	r2, r4
 17087 0e54 FFF7FEFF 		bl	_Z9AppendLogSsPKc
 17088 0e58 544A     		ldr	r2, .L113+68
 17089 0e5a BB18     		add	r3, r7, r2
 17090 0e5c 181C     		mov	r0, r3
 17091 0e5e FFF7FEFF 		bl	_ZNSsD1Ev
 17092 0e62 8A20     		mov	r0, #138
 17093 0e64 0001     		lsl	r0, r0, #4
 17094 0e66 3B18     		add	r3, r7, r0
 17095 0e68 181C     		mov	r0, r3
 17096 0e6a FFF7FEFF 		bl	_ZNSsD1Ev
 17097 0e6e 4D49     		ldr	r1, .L113+60
 17098 0e70 7B18     		add	r3, r7, r1
 17099 0e72 181C     		mov	r0, r3
 17100 0e74 FFF7FEFF 		bl	_ZNSaIcED1Ev
 17101              		.loc 1 302 0
 17102 0e78 8122     		mov	r2, #129
 17103 0e7a 1201     		lsl	r2, r2, #4
 17104 0e7c BB18     		add	r3, r7, r2
 17105 0e7e 181C     		mov	r0, r3
 17106 0e80 FFF7FEFF 		bl	av_free_packet
 17107 0e84 4FE0     		b	.L95
 17108              	.L101:
 17109              		.loc 1 307 0
 17110 0e86 4148     		ldr	r0, .L113+36
 17111 0e88 C019     		add	r0, r0, r7
 17112 0e8a 0368     		ldr	r3, [r0]
 17113 0e8c 9B68     		ldr	r3, [r3, #8]
 17114 0e8e 9B68     		ldr	r3, [r3, #8]
 17115 0e90 012B     		cmp	r3, #1
 17116 0e92 0CD1     		bne	.L102
 17117              		.loc 1 308 0
 17118 0e94 4649     		ldr	r1, .L113+72
 17119 0e96 C919     		add	r1, r1, r7
 17120 0e98 0B68     		ldr	r3, [r1]
 17121 0e9a 4C68     		ldr	r4, [r1, #4]
 17122 0e9c 0121     		mov	r1, #1
 17123 0e9e 0022     		mov	r2, #0
 17124 0ea0 5B18     		add	r3, r3, r1
 17125 0ea2 5441     		adc	r4, r4, r2
 17126 0ea4 424A     		ldr	r2, .L113+72
 17127 0ea6 D219     		add	r2, r2, r7
 17128 0ea8 1360     		str	r3, [r2]
 17129 0eaa 5460     		str	r4, [r2, #4]
 17130 0eac 14E0     		b	.L103
 17131              	.L102:
 17132              		.loc 1 309 0
 17133 0eae 3748     		ldr	r0, .L113+36
 17134 0eb0 C019     		add	r0, r0, r7
 17135 0eb2 0368     		ldr	r3, [r0]
 17136 0eb4 9B68     		ldr	r3, [r3, #8]
 17137 0eb6 9B68     		ldr	r3, [r3, #8]
 17138 0eb8 002B     		cmp	r3, #0
 17139 0eba 0DD1     		bne	.L103
 17140              		.loc 1 310 0
 17141 0ebc 9021     		mov	r1, #144
 17142 0ebe 0901     		lsl	r1, r1, #4
 17143 0ec0 C919     		add	r1, r1, r7
 17144 0ec2 0B68     		ldr	r3, [r1]
 17145 0ec4 4C68     		ldr	r4, [r1, #4]
 17146 0ec6 0121     		mov	r1, #1
 17147 0ec8 0022     		mov	r2, #0
 17148 0eca 5B18     		add	r3, r3, r1
 17149 0ecc 5441     		adc	r4, r4, r2
 17150 0ece 9022     		mov	r2, #144
 17151 0ed0 1201     		lsl	r2, r2, #4
 17152 0ed2 D219     		add	r2, r2, r7
 17153 0ed4 1360     		str	r3, [r2]
 17154 0ed6 5460     		str	r4, [r2, #4]
 17155              	.L103:
 17156              		.loc 1 312 0
 17157 0ed8 FB68     		ldr	r3, [r7, #12]
 17158 0eda 8120     		mov	r0, #129
 17159 0edc 0001     		lsl	r0, r0, #4
 17160 0ede 3A18     		add	r2, r7, r0
 17161 0ee0 2949     		ldr	r1, .L113+32
 17162 0ee2 C919     		add	r1, r1, r7
 17163 0ee4 0C68     		ldr	r4, [r1]
 17164 0ee6 2948     		ldr	r0, .L113+36
 17165 0ee8 C019     		add	r0, r0, r7
 17166 0eea 0568     		ldr	r5, [r0]
 17167 0eec 181C     		mov	r0, r3
 17168 0eee 111C     		mov	r1, r2
 17169 0ef0 221C     		mov	r2, r4
 17170 0ef2 2B1C     		mov	r3, r5
 17171 0ef4 FFF7FEFF 		bl	_ZN10FfPipeline15RescalePtsDts24EP8AVPacketP8AVStreamS3_
 17172              		.loc 1 314 0
 17173 0ef8 214A     		ldr	r2, .L113+24
 17174 0efa D219     		add	r2, r2, r7
 17175 0efc 1168     		ldr	r1, [r2]
 17176 0efe FA68     		ldr	r2, [r7, #12]
 17177 0f00 224B     		ldr	r3, .L113+36
 17178 0f02 DB19     		add	r3, r3, r7
 17179 0f04 1C68     		ldr	r4, [r3]
 17180 0f06 8120     		mov	r0, #129
 17181 0f08 0001     		lsl	r0, r0, #4
 17182 0f0a 3D18     		add	r5, r7, r0
 17183 0f0c 0023     		mov	r3, #0
 17184 0f0e 0093     		str	r3, [sp]
 17185 0f10 101C     		mov	r0, r2
 17186 0f12 221C     		mov	r2, r4
 17187 0f14 2B1C     		mov	r3, r5
 17188 0f16 FFF7FEFF 		bl	_ZN10FfPipeline15WriteFrame_v242EP15AVFormatContextP8AVStreamP8AVPacketP24AVBitStreamFilterCont
 17189              		.loc 1 316 0
 17190 0f1a 8121     		mov	r1, #129
 17191 0f1c 0901     		lsl	r1, r1, #4
 17192 0f1e 7B18     		add	r3, r7, r1
 17193 0f20 181C     		mov	r0, r3
 17194 0f22 FFF7FEFF 		bl	av_free_packet
 17195              	.L95:
 17196              	.LBE11:
 17197              		.loc 1 270 0
 17198 0f26 1B4A     		ldr	r2, .L113+44
 17199 0f28 D219     		add	r2, r2, r7
 17200 0f2a 1368     		ldr	r3, [r2]
 17201 0f2c 8120     		mov	r0, #129
 17202 0f2e 0001     		lsl	r0, r0, #4
 17203 0f30 3A18     		add	r2, r7, r0
 17204 0f32 181C     		mov	r0, r3
 17205 0f34 111C     		mov	r1, r2
 17206 0f36 FFF7FEFF 		bl	av_read_frame
 17207 0f3a 031C     		mov	r3, r0
 17208 0f3c 002B     		cmp	r3, #0
 17209 0f3e 39DB     		blt	.L104
 17210 0f40 FB68     		ldr	r3, [r7, #12]
 17211 0f42 181C     		mov	r0, r3
 17212 0f44 FFF7FEFF 		bl	_ZN10FfPipeline10IsNeedStopEv
 17213 0f48 031C     		mov	r3, r0
 17214 0f4a 9C46     		mov	ip, r3
 17215 0f4c 6246     		mov	r2, ip
 17216 0f4e 0123     		mov	r3, #1
 17217 0f50 5340     		eor	r3, r3, r2
 17218 0f52 1B06     		lsl	r3, r3, #24
 17219 0f54 1A0E     		lsr	r2, r3, #24
 17220 0f56 0123     		mov	r3, #1
 17221 0f58 5340     		eor	r3, r3, r2
 17222 0f5a 1B06     		lsl	r3, r3, #24
 17223 0f5c 1B0E     		lsr	r3, r3, #24
 17224 0f5e 002B     		cmp	r3, #0
 17225 0f60 28D1     		bne	.L104
 17226 0f62 0121     		mov	r1, #1
 17227 0f64 7960     		str	r1, [r7, #4]
 17228 0f66 27E0     		b	.L105
 17229              	.L114:
 17230              		.align	3
 17231              	.L113:
 17232 0f68 00000000 		.word	0
 17233 0f6c 00000080 		.word	-2147483648
 17234 0f70 8F080000 		.word	2191
 17235 0f74 88080000 		.word	2184
 17236 0f78 58020000 		.word	.LC42
 17237 0f7c 84080000 		.word	2180
 17238 0f80 64080000 		.word	2148
 17239 0f84 0C090000 		.word	2316
 17240 0f88 18090000 		.word	2328
 17241 0f8c 1C090000 		.word	2332
 17242 0f90 F0FEFFFF 		.word	-272
 17243 0f94 68080000 		.word	2152
 17244 0f98 9B080000 		.word	2203
 17245 0f9c 94080000 		.word	2196
 17246 0fa0 98020000 		.word	.LC44
 17247 0fa4 A7080000 		.word	2215
 17248 0fa8 D0020000 		.word	.LC46
 17249 0fac 9C080000 		.word	2204
 17250 0fb0 F8080000 		.word	2296
 17251              	.L104:
 17252 0fb4 0022     		mov	r2, #0
 17253 0fb6 7A60     		str	r2, [r7, #4]
 17254              	.L105:
 17255 0fb8 7B68     		ldr	r3, [r7, #4]
 17256 0fba 002B     		cmp	r3, #0
 17257 0fbc 00D0     		beq	.LCB2109
 17258 0fbe 6AE6     		b	.L106	@long jump
 17259              	.LCB2109:
 17260              		.loc 1 320 0
 17261 0fc0 FB68     		ldr	r3, [r7, #12]
 17262 0fc2 1B79     		ldrb	r3, [r3, #4]
 17263 0fc4 1C1C     		mov	r4, r3
 17264 0fc6 D44B     		ldr	r3, .L115
 17265 0fc8 D44A     		ldr	r2, .L115+4
 17266 0fca 181C     		mov	r0, r3
 17267 0fcc 111C     		mov	r1, r2
 17268 0fce 221C     		mov	r2, r4
 17269 0fd0 FFF7FEFF 		bl	sprintf
 17270              		.loc 1 321 0
 17271 0fd4 D248     		ldr	r0, .L115+8
 17272 0fd6 3B18     		add	r3, r7, r0
 17273 0fd8 181C     		mov	r0, r3
 17274 0fda FFF7FEFF 		bl	_ZNSaIcEC1Ev
 17275 0fde D149     		ldr	r1, .L115+12
 17276 0fe0 7B18     		add	r3, r7, r1
 17277 0fe2 CD4A     		ldr	r2, .L115
 17278 0fe4 CE48     		ldr	r0, .L115+8
 17279 0fe6 3C18     		add	r4, r7, r0
 17280 0fe8 181C     		mov	r0, r3
 17281 0fea 111C     		mov	r1, r2
 17282 0fec 221C     		mov	r2, r4
 17283 0fee FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 17284 0ff2 CD49     		ldr	r1, .L115+16
 17285 0ff4 7B18     		add	r3, r7, r1
 17286 0ff6 CB48     		ldr	r0, .L115+12
 17287 0ff8 3A18     		add	r2, r7, r0
 17288 0ffa 8F21     		mov	r1, #143
 17289 0ffc 0901     		lsl	r1, r1, #4
 17290 0ffe C919     		add	r1, r1, r7
 17291 1000 0C68     		ldr	r4, [r1]
 17292 1002 181C     		mov	r0, r3
 17293 1004 111C     		mov	r1, r2
 17294 1006 221C     		mov	r2, r4
 17295 1008 FFF7FEFF 		bl	_Z9AppendLogSsPKc
 17296 100c C64A     		ldr	r2, .L115+16
 17297 100e BB18     		add	r3, r7, r2
 17298 1010 181C     		mov	r0, r3
 17299 1012 FFF7FEFF 		bl	_ZNSsD1Ev
 17300 1016 C348     		ldr	r0, .L115+12
 17301 1018 3B18     		add	r3, r7, r0
 17302 101a 181C     		mov	r0, r3
 17303 101c FFF7FEFF 		bl	_ZNSsD1Ev
 17304 1020 BF49     		ldr	r1, .L115+8
 17305 1022 7B18     		add	r3, r7, r1
 17306 1024 181C     		mov	r0, r3
 17307 1026 FFF7FEFF 		bl	_ZNSaIcED1Ev
 17308              		.loc 1 323 0
 17309 102a FB68     		ldr	r3, [r7, #12]
 17310 102c 181C     		mov	r0, r3
 17311 102e FFF7FEFF 		bl	_ZN10FfPipeline10IsNeedStopEv
 17312 1032 031C     		mov	r3, r0
 17313 1034 9C46     		mov	ip, r3
 17314 1036 6246     		mov	r2, ip
 17315 1038 0123     		mov	r3, #1
 17316 103a 5340     		eor	r3, r3, r2
 17317 103c 1B06     		lsl	r3, r3, #24
 17318 103e 1B0E     		lsr	r3, r3, #24
 17319 1040 002B     		cmp	r3, #0
 17320 1042 05D0     		beq	.L107
 17321              		.loc 1 324 0
 17322 1044 8122     		mov	r2, #129
 17323 1046 1201     		lsl	r2, r2, #4
 17324 1048 BB18     		add	r3, r7, r2
 17325 104a 181C     		mov	r0, r3
 17326 104c FFF7FEFF 		bl	av_free_packet
 17327              	.L107:
 17328              		.loc 1 326 0
 17329 1050 FB68     		ldr	r3, [r7, #12]
 17330 1052 1B79     		ldrb	r3, [r3, #4]
 17331 1054 1C1C     		mov	r4, r3
 17332 1056 B04B     		ldr	r3, .L115
 17333 1058 B44A     		ldr	r2, .L115+20
 17334 105a 181C     		mov	r0, r3
 17335 105c 111C     		mov	r1, r2
 17336 105e 221C     		mov	r2, r4
 17337 1060 FFF7FEFF 		bl	sprintf
 17338              		.loc 1 327 0
 17339 1064 B248     		ldr	r0, .L115+24
 17340 1066 3B18     		add	r3, r7, r0
 17341 1068 181C     		mov	r0, r3
 17342 106a FFF7FEFF 		bl	_ZNSaIcEC1Ev
 17343 106e B149     		ldr	r1, .L115+28
 17344 1070 7B18     		add	r3, r7, r1
 17345 1072 A94A     		ldr	r2, .L115
 17346 1074 AE48     		ldr	r0, .L115+24
 17347 1076 3C18     		add	r4, r7, r0
 17348 1078 181C     		mov	r0, r3
 17349 107a 111C     		mov	r1, r2
 17350 107c 221C     		mov	r2, r4
 17351 107e FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 17352 1082 AD49     		ldr	r1, .L115+32
 17353 1084 7B18     		add	r3, r7, r1
 17354 1086 AB48     		ldr	r0, .L115+28
 17355 1088 3A18     		add	r2, r7, r0
 17356 108a 8F21     		mov	r1, #143
 17357 108c 0901     		lsl	r1, r1, #4
 17358 108e C919     		add	r1, r1, r7
 17359 1090 0C68     		ldr	r4, [r1]
 17360 1092 181C     		mov	r0, r3
 17361 1094 111C     		mov	r1, r2
 17362 1096 221C     		mov	r2, r4
 17363 1098 FFF7FEFF 		bl	_Z9AppendLogSsPKc
 17364 109c A64A     		ldr	r2, .L115+32
 17365 109e BB18     		add	r3, r7, r2
 17366 10a0 181C     		mov	r0, r3
 17367 10a2 FFF7FEFF 		bl	_ZNSsD1Ev
 17368 10a6 A348     		ldr	r0, .L115+28
 17369 10a8 3B18     		add	r3, r7, r0
 17370 10aa 181C     		mov	r0, r3
 17371 10ac FFF7FEFF 		bl	_ZNSsD1Ev
 17372 10b0 9F49     		ldr	r1, .L115+24
 17373 10b2 7B18     		add	r3, r7, r1
 17374 10b4 181C     		mov	r0, r3
 17375 10b6 FFF7FEFF 		bl	_ZNSaIcED1Ev
 17376              		.loc 1 329 0
 17377 10ba A04A     		ldr	r2, .L115+36
 17378 10bc D219     		add	r2, r2, r7
 17379 10be 1368     		ldr	r3, [r2]
 17380 10c0 181C     		mov	r0, r3
 17381 10c2 FFF7FEFF 		bl	av_write_trailer
 17382              		.loc 1 331 0
 17383 10c6 FB68     		ldr	r3, [r7, #12]
 17384 10c8 1B79     		ldrb	r3, [r3, #4]
 17385 10ca 1C1C     		mov	r4, r3
 17386 10cc 924B     		ldr	r3, .L115
 17387 10ce 9C4A     		ldr	r2, .L115+40
 17388 10d0 181C     		mov	r0, r3
 17389 10d2 111C     		mov	r1, r2
 17390 10d4 221C     		mov	r2, r4
 17391 10d6 FFF7FEFF 		bl	sprintf
 17392              		.loc 1 332 0
 17393 10da 9A48     		ldr	r0, .L115+44
 17394 10dc 3B18     		add	r3, r7, r0
 17395 10de 181C     		mov	r0, r3
 17396 10e0 FFF7FEFF 		bl	_ZNSaIcEC1Ev
 17397 10e4 9849     		ldr	r1, .L115+48
 17398 10e6 7B18     		add	r3, r7, r1
 17399 10e8 8B4A     		ldr	r2, .L115
 17400 10ea 9648     		ldr	r0, .L115+44
 17401 10ec 3C18     		add	r4, r7, r0
 17402 10ee 181C     		mov	r0, r3
 17403 10f0 111C     		mov	r1, r2
 17404 10f2 221C     		mov	r2, r4
 17405 10f4 FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 17406 10f8 8C21     		mov	r1, #140
 17407 10fa 0901     		lsl	r1, r1, #4
 17408 10fc 7B18     		add	r3, r7, r1
 17409 10fe 9248     		ldr	r0, .L115+48
 17410 1100 3A18     		add	r2, r7, r0
 17411 1102 8F21     		mov	r1, #143
 17412 1104 0901     		lsl	r1, r1, #4
 17413 1106 C919     		add	r1, r1, r7
 17414 1108 0C68     		ldr	r4, [r1]
 17415 110a 181C     		mov	r0, r3
 17416 110c 111C     		mov	r1, r2
 17417 110e 221C     		mov	r2, r4
 17418 1110 FFF7FEFF 		bl	_Z9AppendLogSsPKc
 17419 1114 8C22     		mov	r2, #140
 17420 1116 1201     		lsl	r2, r2, #4
 17421 1118 BB18     		add	r3, r7, r2
 17422 111a 181C     		mov	r0, r3
 17423 111c FFF7FEFF 		bl	_ZNSsD1Ev
 17424 1120 8948     		ldr	r0, .L115+48
 17425 1122 3B18     		add	r3, r7, r0
 17426 1124 181C     		mov	r0, r3
 17427 1126 FFF7FEFF 		bl	_ZNSsD1Ev
 17428 112a 8649     		ldr	r1, .L115+44
 17429 112c 7B18     		add	r3, r7, r1
 17430 112e 181C     		mov	r0, r3
 17431 1130 FFF7FEFF 		bl	_ZNSaIcED1Ev
 17432              		.loc 1 334 0
 17433 1134 0023     		mov	r3, #0
 17434 1136 854A     		ldr	r2, .L115+52
 17435 1138 D219     		add	r2, r2, r7
 17436 113a 1360     		str	r3, [r2]
 17437 113c 21E0     		b	.L108
 17438              	.L109:
 17439              		.loc 1 336 0
 17440 113e 7F48     		ldr	r0, .L115+36
 17441 1140 C019     		add	r0, r0, r7
 17442 1142 0368     		ldr	r3, [r0]
 17443 1144 DA69     		ldr	r2, [r3, #28]
 17444 1146 8149     		ldr	r1, .L115+52
 17445 1148 C919     		add	r1, r1, r7
 17446 114a 0B68     		ldr	r3, [r1]
 17447 114c 9B00     		lsl	r3, r3, #2
 17448 114e D318     		add	r3, r2, r3
 17449 1150 1B68     		ldr	r3, [r3]
 17450 1152 9B68     		ldr	r3, [r3, #8]
 17451 1154 181C     		mov	r0, r3
 17452 1156 FFF7FEFF 		bl	avcodec_close
 17453              		.loc 1 337 0
 17454 115a 784A     		ldr	r2, .L115+36
 17455 115c D219     		add	r2, r2, r7
 17456 115e 1368     		ldr	r3, [r2]
 17457 1160 DA69     		ldr	r2, [r3, #28]
 17458 1162 7A48     		ldr	r0, .L115+52
 17459 1164 C019     		add	r0, r0, r7
 17460 1166 0368     		ldr	r3, [r0]
 17461 1168 9B00     		lsl	r3, r3, #2
 17462 116a D318     		add	r3, r2, r3
 17463 116c 1B68     		ldr	r3, [r3]
 17464 116e 181C     		mov	r0, r3
 17465 1170 FFF7FEFF 		bl	av_freep
 17466              		.loc 1 334 0
 17467 1174 7549     		ldr	r1, .L115+52
 17468 1176 C919     		add	r1, r1, r7
 17469 1178 0B68     		ldr	r3, [r1]
 17470 117a 0133     		add	r3, r3, #1
 17471 117c 734A     		ldr	r2, .L115+52
 17472 117e D219     		add	r2, r2, r7
 17473 1180 1360     		str	r3, [r2]
 17474              	.L108:
 17475 1182 6E48     		ldr	r0, .L115+36
 17476 1184 C019     		add	r0, r0, r7
 17477 1186 0368     		ldr	r3, [r0]
 17478 1188 9A69     		ldr	r2, [r3, #24]
 17479 118a 7049     		ldr	r1, .L115+52
 17480 118c C919     		add	r1, r1, r7
 17481 118e 0B68     		ldr	r3, [r1]
 17482 1190 9A42     		cmp	r2, r3
 17483 1192 D4D8     		bhi	.L109
 17484              		.loc 1 340 0
 17485 1194 FB68     		ldr	r3, [r7, #12]
 17486 1196 1B79     		ldrb	r3, [r3, #4]
 17487 1198 1C1C     		mov	r4, r3
 17488 119a 5F4B     		ldr	r3, .L115
 17489 119c 6C4A     		ldr	r2, .L115+56
 17490 119e 181C     		mov	r0, r3
 17491 11a0 111C     		mov	r1, r2
 17492 11a2 221C     		mov	r2, r4
 17493 11a4 FFF7FEFF 		bl	sprintf
 17494              		.loc 1 341 0
 17495 11a8 6A4A     		ldr	r2, .L115+60
 17496 11aa BB18     		add	r3, r7, r2
 17497 11ac 181C     		mov	r0, r3
 17498 11ae FFF7FEFF 		bl	_ZNSaIcEC1Ev
 17499 11b2 8D20     		mov	r0, #141
 17500 11b4 0001     		lsl	r0, r0, #4
 17501 11b6 3B18     		add	r3, r7, r0
 17502 11b8 574A     		ldr	r2, .L115
 17503 11ba 6649     		ldr	r1, .L115+60
 17504 11bc 7C18     		add	r4, r7, r1
 17505 11be 181C     		mov	r0, r3
 17506 11c0 111C     		mov	r1, r2
 17507 11c2 221C     		mov	r2, r4
 17508 11c4 FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 17509 11c8 634A     		ldr	r2, .L115+64
 17510 11ca BB18     		add	r3, r7, r2
 17511 11cc 8D20     		mov	r0, #141
 17512 11ce 0001     		lsl	r0, r0, #4
 17513 11d0 3A18     		add	r2, r7, r0
 17514 11d2 8F21     		mov	r1, #143
 17515 11d4 0901     		lsl	r1, r1, #4
 17516 11d6 C919     		add	r1, r1, r7
 17517 11d8 0C68     		ldr	r4, [r1]
 17518 11da 181C     		mov	r0, r3
 17519 11dc 111C     		mov	r1, r2
 17520 11de 221C     		mov	r2, r4
 17521 11e0 FFF7FEFF 		bl	_Z9AppendLogSsPKc
 17522 11e4 5C4A     		ldr	r2, .L115+64
 17523 11e6 BB18     		add	r3, r7, r2
 17524 11e8 181C     		mov	r0, r3
 17525 11ea FFF7FEFF 		bl	_ZNSsD1Ev
 17526 11ee 8D20     		mov	r0, #141
 17527 11f0 0001     		lsl	r0, r0, #4
 17528 11f2 3B18     		add	r3, r7, r0
 17529 11f4 181C     		mov	r0, r3
 17530 11f6 FFF7FEFF 		bl	_ZNSsD1Ev
 17531 11fa 5649     		ldr	r1, .L115+60
 17532 11fc 7B18     		add	r3, r7, r1
 17533 11fe 181C     		mov	r0, r3
 17534 1200 FFF7FEFF 		bl	_ZNSaIcED1Ev
 17535              		.loc 1 343 0
 17536 1204 4D4A     		ldr	r2, .L115+36
 17537 1206 D219     		add	r2, r2, r7
 17538 1208 1368     		ldr	r3, [r2]
 17539 120a 1B69     		ldr	r3, [r3, #16]
 17540 120c 181C     		mov	r0, r3
 17541 120e FFF7FEFF 		bl	avio_close
 17542              		.loc 1 345 0
 17543 1212 FB68     		ldr	r3, [r7, #12]
 17544 1214 1B79     		ldrb	r3, [r3, #4]
 17545 1216 1C1C     		mov	r4, r3
 17546 1218 3F4B     		ldr	r3, .L115
 17547 121a 504A     		ldr	r2, .L115+68
 17548 121c 181C     		mov	r0, r3
 17549 121e 111C     		mov	r1, r2
 17550 1220 221C     		mov	r2, r4
 17551 1222 FFF7FEFF 		bl	sprintf
 17552              		.loc 1 346 0
 17553 1226 4E48     		ldr	r0, .L115+72
 17554 1228 3B18     		add	r3, r7, r0
 17555 122a 181C     		mov	r0, r3
 17556 122c FFF7FEFF 		bl	_ZNSaIcEC1Ev
 17557 1230 4C49     		ldr	r1, .L115+76
 17558 1232 7B18     		add	r3, r7, r1
 17559 1234 384A     		ldr	r2, .L115
 17560 1236 4A48     		ldr	r0, .L115+72
 17561 1238 3C18     		add	r4, r7, r0
 17562 123a 181C     		mov	r0, r3
 17563 123c 111C     		mov	r1, r2
 17564 123e 221C     		mov	r2, r4
 17565 1240 FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 17566 1244 4849     		ldr	r1, .L115+80
 17567 1246 7B18     		add	r3, r7, r1
 17568 1248 4648     		ldr	r0, .L115+76
 17569 124a 3A18     		add	r2, r7, r0
 17570 124c 8F21     		mov	r1, #143
 17571 124e 0901     		lsl	r1, r1, #4
 17572 1250 C919     		add	r1, r1, r7
 17573 1252 0C68     		ldr	r4, [r1]
 17574 1254 181C     		mov	r0, r3
 17575 1256 111C     		mov	r1, r2
 17576 1258 221C     		mov	r2, r4
 17577 125a FFF7FEFF 		bl	_Z9AppendLogSsPKc
 17578 125e 424A     		ldr	r2, .L115+80
 17579 1260 BB18     		add	r3, r7, r2
 17580 1262 181C     		mov	r0, r3
 17581 1264 FFF7FEFF 		bl	_ZNSsD1Ev
 17582 1268 3E48     		ldr	r0, .L115+76
 17583 126a 3B18     		add	r3, r7, r0
 17584 126c 181C     		mov	r0, r3
 17585 126e FFF7FEFF 		bl	_ZNSsD1Ev
 17586 1272 3B49     		ldr	r1, .L115+72
 17587 1274 7B18     		add	r3, r7, r1
 17588 1276 181C     		mov	r0, r3
 17589 1278 FFF7FEFF 		bl	_ZNSaIcED1Ev
 17590              		.loc 1 348 0
 17591 127c 2F4A     		ldr	r2, .L115+36
 17592 127e D219     		add	r2, r2, r7
 17593 1280 1368     		ldr	r3, [r2]
 17594 1282 181C     		mov	r0, r3
 17595 1284 FFF7FEFF 		bl	av_free
 17596              		.loc 1 350 0
 17597 1288 FB68     		ldr	r3, [r7, #12]
 17598 128a 1B79     		ldrb	r3, [r3, #4]
 17599 128c 1C1C     		mov	r4, r3
 17600 128e 224B     		ldr	r3, .L115
 17601 1290 364A     		ldr	r2, .L115+84
 17602 1292 181C     		mov	r0, r3
 17603 1294 111C     		mov	r1, r2
 17604 1296 221C     		mov	r2, r4
 17605 1298 FFF7FEFF 		bl	sprintf
 17606              		.loc 1 351 0
 17607 129c 3448     		ldr	r0, .L115+88
 17608 129e 3B18     		add	r3, r7, r0
 17609 12a0 181C     		mov	r0, r3
 17610 12a2 FFF7FEFF 		bl	_ZNSaIcEC1Ev
 17611 12a6 3349     		ldr	r1, .L115+92
 17612 12a8 7B18     		add	r3, r7, r1
 17613 12aa 1B4A     		ldr	r2, .L115
 17614 12ac 3048     		ldr	r0, .L115+88
 17615 12ae 3C18     		add	r4, r7, r0
 17616 12b0 181C     		mov	r0, r3
 17617 12b2 111C     		mov	r1, r2
 17618 12b4 221C     		mov	r2, r4
 17619 12b6 FFF7FEFF 		bl	_ZNSsC1EPKcRKSaIcE
 17620 12ba 2F49     		ldr	r1, .L115+96
 17621 12bc 7B18     		add	r3, r7, r1
 17622 12be 2D48     		ldr	r0, .L115+92
 17623 12c0 3A18     		add	r2, r7, r0
 17624 12c2 8F21     		mov	r1, #143
 17625 12c4 0901     		lsl	r1, r1, #4
 17626 12c6 C919     		add	r1, r1, r7
 17627 12c8 0C68     		ldr	r4, [r1]
 17628 12ca 181C     		mov	r0, r3
 17629 12cc 111C     		mov	r1, r2
 17630 12ce 221C     		mov	r2, r4
 17631 12d0 FFF7FEFF 		bl	_Z9AppendLogSsPKc
 17632 12d4 284A     		ldr	r2, .L115+96
 17633 12d6 BB18     		add	r3, r7, r2
 17634 12d8 181C     		mov	r0, r3
 17635 12da FFF7FEFF 		bl	_ZNSsD1Ev
 17636 12de 2548     		ldr	r0, .L115+92
 17637 12e0 3B18     		add	r3, r7, r0
 17638 12e2 181C     		mov	r0, r3
 17639 12e4 FFF7FEFF 		bl	_ZNSsD1Ev
 17640 12e8 2149     		ldr	r1, .L115+88
 17641 12ea 7B18     		add	r3, r7, r1
 17642 12ec 181C     		mov	r0, r3
 17643 12ee FFF7FEFF 		bl	_ZNSaIcED1Ev
 17644              		.loc 1 353 0
 17645 12f2 224A     		ldr	r2, .L115+100
 17646 12f4 BB18     		add	r3, r7, r2
 17647 12f6 181C     		mov	r0, r3
 17648 12f8 FFF7FEFF 		bl	avformat_close_input
 17649              		.loc 1 355 0
 17650 12fc FB68     		ldr	r3, [r7, #12]
 17651 12fe 181C     		mov	r0, r3
 17652 1300 0221     		mov	r1, #2
 17653 1302 FFF7FEFF 		bl	_ZN10FfPipeline11SetRecStateE14RecordingState
 17654              		.loc 1 357 0
 17655 1306 0023     		mov	r3, #0
 17656 1308 3B60     		str	r3, [r7]
 17657              	.L82:
 17658 130a 3B68     		ldr	r3, [r7]
 17659              	.LBE9:
 17660              		.loc 1 358 0
 17661 130c 181C     		mov	r0, r3
 17662 130e BD46     		mov	sp, r7
 17663 1310 9223     		mov	r3, #146
 17664 1312 1B01     		lsl	r3, r3, #4
 17665 1314 9D44     		add	sp, sp, r3
 17666              		@ sp needed for prologue
 17667 1316 B0BD     		pop	{r4, r5, r7, pc}
 17668              	.L116:
 17669              		.align	2
 17670              	.L115:
 17671 1318 00000000 		.word	str
 17672 131c 08030000 		.word	.LC48
 17673 1320 B3080000 		.word	2227
 17674 1324 AC080000 		.word	2220
 17675 1328 A8080000 		.word	2216
 17676 132c 28030000 		.word	.LC50
 17677 1330 BF080000 		.word	2239
 17678 1334 B8080000 		.word	2232
 17679 1338 B4080000 		.word	2228
 17680 133c 64080000 		.word	2148
 17681 1340 58030000 		.word	.LC52
 17682 1344 CB080000 		.word	2251
 17683 1348 C4080000 		.word	2244
 17684 134c 08090000 		.word	2312
 17685 1350 8C030000 		.word	.LC54
 17686 1354 D7080000 		.word	2263
 17687 1358 CC080000 		.word	2252
 17688 135c B4030000 		.word	.LC56
 17689 1360 E3080000 		.word	2275
 17690 1364 DC080000 		.word	2268
 17691 1368 D8080000 		.word	2264
 17692 136c DC030000 		.word	.LC58
 17693 1370 EF080000 		.word	2287
 17694 1374 E8080000 		.word	2280
 17695 1378 E4080000 		.word	2276
 17696 137c 68080000 		.word	2152
 17697              	.LFE1002:
 17698              		.fnend
 17700              		.align	2
 17701              		.global	_ZN10FfPipeline11ThRecordingEPv
 17702              		.code	16
 17703              		.thumb_func
 17705              	_ZN10FfPipeline11ThRecordingEPv:
 17706              		.fnstart
 17707              	.LFB997:
 17708              		.loc 1 107 0
 17709              		.save	{r7, lr}
 17710 1380 80B5     		push	{r7, lr}
 17711              	.LCFI69:
 17712              		.pad #16
 17713 1382 84B0     		sub	sp, sp, #16
 17714              	.LCFI70:
 17715              		.setfp r7, sp, #0
 17716 1384 00AF     		add	r7, sp, #0
 17717              	.LCFI71:
 17718 1386 7860     		str	r0, [r7, #4]
 17719              	.LBB12:
 17720              		.loc 1 109 0
 17721 1388 7B68     		ldr	r3, [r7, #4]
 17722 138a FB60     		str	r3, [r7, #12]
 17723              		.loc 1 111 0
 17724 138c FB68     		ldr	r3, [r7, #12]
 17725 138e 181C     		mov	r0, r3
 17726 1390 FFF7FEFF 		bl	_ZN10FfPipeline11DoRecordingEv
 17727              		.loc 1 113 0
 17728 1394 7B68     		ldr	r3, [r7, #4]
 17729              	.LBE12:
 17730              		.loc 1 114 0
 17731 1396 181C     		mov	r0, r3
 17732 1398 BD46     		mov	sp, r7
 17733 139a 04B0     		add	sp, sp, #16
 17734              		@ sp needed for prologue
 17735 139c 80BD     		pop	{r7, pc}
 17736              	.LFE997:
 17737              		.fnend
 17739              		.local	_ZStL8__ioinit
 17740              		.comm	_ZStL8__ioinit,1,1
 17741              		.data
 17742              		.align	2
 17745              	_ZL12g_szErrorBuf:
 17746 0000 00       		.ascii	"\000"
 17747 0001 00000000 		.space	63
 17747      00000000 
 17747      00000000 
 17747      00000000 
 17747      00000000 
 17748              		.weakref	_ZL20__gthrw_pthread_oncePiPFvvE,pthread_once
 17749              		.weakref	_ZL27__gthrw_pthread_getspecificj,pthread_getspecific
 17750              		.weakref	_ZL27__gthrw_pthread_setspecificjPKv,pthread_setspecific
 17751              		.weakref	_ZL22__gthrw_pthread_createPmPK14pthread_attr_tPFPvS3_ES3_,pthread_create
 17752              		.weakref	_ZL22__gthrw_pthread_cancelm,pthread_cancel
 17753              		.weakref	_ZL26__gthrw_pthread_mutex_lockP15pthread_mutex_t,pthread_mutex_lock
 17754              		.weakref	_ZL29__gthrw_pthread_mutex_trylockP15pthread_mutex_t,pthread_mutex_trylock
 17755              		.weakref	_ZL28__gthrw_pthread_mutex_unlockP15pthread_mutex_t,pthread_mutex_unlock
 17756              		.weakref	_ZL26__gthrw_pthread_mutex_initP15pthread_mutex_tPK19pthread_mutexattr_t,pthread_mutex_in
 17757              		.weakref	_ZL30__gthrw_pthread_cond_broadcastP14pthread_cond_t,pthread_cond_broadcast
 17758              		.weakref	_ZL25__gthrw_pthread_cond_waitP14pthread_cond_tP15pthread_mutex_t,pthread_cond_wait
 17759              		.weakref	_ZL26__gthrw_pthread_key_createPjPFvPvE,pthread_key_create
 17760              		.weakref	_ZL26__gthrw_pthread_key_deletej,pthread_key_delete
 17761              		.weakref	_ZL30__gthrw_pthread_mutexattr_initP19pthread_mutexattr_t,pthread_mutexattr_init
 17762              		.weakref	_ZL33__gthrw_pthread_mutexattr_settypeP19pthread_mutexattr_ti,pthread_mutexattr_settype
 17763              		.weakref	_ZL33__gthrw_pthread_mutexattr_destroyP19pthread_mutexattr_t,pthread_mutexattr_destroy
 18386              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 ffmpeg_pipeline.cpp
     /tmp/ccOwOt4T.s:26     .debug_macinfo:00000000 $d
     /tmp/ccOwOt4T.s:14666  .text:00000000 $t
     /tmp/ccOwOt4T.s:14671  .text:00000000 _ZN10FfPipelineC2Eh
     /tmp/ccOwOt4T.s:14725  .text:00000048 $d
                       .ARM.extab:00000000 $d
                       .ARM.exidx:00000000 $d
     /tmp/ccOwOt4T.s:14730  .text:00000050 $t
     /tmp/ccOwOt4T.s:14735  .text:00000050 _ZN10FfPipelineC1Eh
     /tmp/ccOwOt4T.s:14789  .text:00000098 $d
     /tmp/ccOwOt4T.s:14794  .text:000000a0 $t
     /tmp/ccOwOt4T.s:14799  .text:000000a0 _ZN10FfPipelineD2Ev
     /tmp/ccOwOt4T.s:14823  .text:000000b2 $t
     /tmp/ccOwOt4T.s:14828  .text:000000b4 _ZN10FfPipelineD1Ev
     /tmp/ccOwOt4T.s:14852  .text:000000c6 $t
     /tmp/ccOwOt4T.s:14857  .text:000000c8 _ZN10FfPipeline21SetPartnerPipePointerEPv
     /tmp/ccOwOt4T.s:14884  .text:000000de $t
     /tmp/ccOwOt4T.s:14889  .text:000000e0 _ZN10FfPipeline11SetRecStateE14RecordingState
     /tmp/ccOwOt4T.s:14916  .text:000000f6 $t
     /tmp/ccOwOt4T.s:14921  .text:000000f8 _ZN10FfPipeline22SetWaitingKeyframeFlagEv
     /tmp/ccOwOt4T.s:14947  .text:0000010c $t
     /tmp/ccOwOt4T.s:14952  .text:0000010c _ZN10FfPipeline24ClearWaitingKeyframeFlagEv
     /tmp/ccOwOt4T.s:14978  .text:00000120 $t
     /tmp/ccOwOt4T.s:14983  .text:00000120 _ZN10FfPipeline17IsWaitingKeyframeEv
     /tmp/ccOwOt4T.s:15009  .text:00000134 $t
     /tmp/ccOwOt4T.s:15014  .text:00000134 _ZN10FfPipeline11GetRecStateEv
     /tmp/ccOwOt4T.s:15040  .text:00000148 $t
     /tmp/ccOwOt4T.s:15044  .text:00000148 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccOwOt4T.s:15085  .text:0000017c $d
                             .bss:00000000 _ZStL8__ioinit
     /tmp/ccOwOt4T.s:15092  .text:0000018c $t
     /tmp/ccOwOt4T.s:15096  .text:0000018c _GLOBAL__I__ZN10FfPipelineC2Eh
     /tmp/ccOwOt4T.s:15117  .text:000001a0 $d
     /tmp/ccOwOt4T.s:15122  .init_array:00000000 $d
     /tmp/ccOwOt4T.s:15125  .text:000001a4 $t
     /tmp/ccOwOt4T.s:15130  .text:000001a4 _ZN10FfPipeline26r_avformat_close_input_v24EPP15AVFormatContext
     /tmp/ccOwOt4T.s:15157  .text:000001bc $t
     /tmp/ccOwOt4T.s:15162  .text:000001bc _ZN10FfPipeline15RescalePtsDts24EP8AVPacketP8AVStreamS3_
     /tmp/ccOwOt4T.s:15279  .text:00000284 $t
     /tmp/ccOwOt4T.s:15283  .text:00000284 av_make_error_string
     /tmp/ccOwOt4T.s:15319  .rodata:00000000 $d
     /tmp/ccOwOt4T.s:15335  .text:000002ac _ZN10FfPipeline15WriteFrame_v242EP15AVFormatContextP8AVStreamP8AVPacketP24AVBitStreamFilterContext
     /tmp/ccOwOt4T.s:15629  .text:000004b8 $d
     /tmp/ccOwOt4T.s:17745  .data:00000000 _ZL12g_szErrorBuf
     /tmp/ccOwOt4T.s:15651  .text:000004d0 $t
     /tmp/ccOwOt4T.s:15656  .text:000004d0 _ZN10FfPipeline19ThInitiateRecordingEv
     /tmp/ccOwOt4T.s:15789  .text:000005c8 $d
     /tmp/ccOwOt4T.s:17705  .text:00001380 _ZN10FfPipeline11ThRecordingEPv
     /tmp/ccOwOt4T.s:15797  .text:000005dc $t
     /tmp/ccOwOt4T.s:15802  .text:000005dc _ZN10FfPipeline5StartEv
     /tmp/ccOwOt4T.s:15832  .text:000005fa $t
     /tmp/ccOwOt4T.s:15837  .text:000005fc _ZN10FfPipeline10IsNeedStopEv
     /tmp/ccOwOt4T.s:15921  .text:0000067c $t
     /tmp/ccOwOt4T.s:15926  .text:0000067c _ZN10FfPipeline11SetNeedStopEv
     /tmp/ccOwOt4T.s:16017  .text:000006f0 _ZN10FfPipeline16SetPartnerToStopEv
     /tmp/ccOwOt4T.s:16100  .text:00000778 $d
     /tmp/ccOwOt4T.s:16106  .text:00000784 $t
     /tmp/ccOwOt4T.s:16111  .text:00000784 _ZN10FfPipeline13ClearNeedStopEv
     /tmp/ccOwOt4T.s:16251  .text:000007f8 _ZN10FfPipeline11DoRecordingEv
     /tmp/ccOwOt4T.s:16761  .text:00000ba8 $d
     /tmp/ccOwOt4T.s:16786  .text:00000c04 $t
     /tmp/ccOwOt4T.s:17232  .text:00000f68 $d
     /tmp/ccOwOt4T.s:17252  .text:00000fb4 $t
     /tmp/ccOwOt4T.s:17671  .text:00001318 $d
     /tmp/ccOwOt4T.s:17700  .text:00001380 $t
     /tmp/ccOwOt4T.s:17742  .data:00000000 $d
     /tmp/ccOwOt4T.s:18390  .debug_loc:00000000 $d
     /tmp/ccOwOt4T.s:18387  .text:0000139e $t

UNDEFINED SYMBOLS
__aeabi_unwind_cpp_pr1
_ZNSt8ios_base4InitC1Ev
__aeabi_atexit
_ZNSt8ios_base4InitD1Ev
__dso_handle
__aeabi_unwind_cpp_pr0
avformat_close_input
av_rescale_q
av_strerror
_ZNSaIcEC1Ev
_ZNSsC1EPKcRKSaIcE
_Z9AppendLogSsPKc
_ZNSsD1Ev
_ZNSaIcED1Ev
av_interleaved_write_frame
sprintf
str
pthread_create
pthread_detach
pthread_mutex_lock
pthread_mutex_unlock
av_dict_set
avformat_open_input
av_dict_free
avformat_find_stream_info
avformat_alloc_output_context2
avformat_new_stream
avcodec_copy_context
memcpy
avio_open
Count
avformat_write_header
av_free_packet
av_read_frame
av_write_trailer
avcodec_close
av_freep
avio_close
av_free
